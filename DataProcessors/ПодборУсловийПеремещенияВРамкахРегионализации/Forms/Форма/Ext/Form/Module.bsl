#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("АдресХранения") Тогда
		АдресХранения = Параметры.АдресХранения;
	КонецЕсли;
	
	Если Параметры.Свойство("ОтображатьПодвид") Тогда
		ОтображатьПодвид = Параметры.ОтображатьПодвид;
	КонецЕсли;
	
	Если Параметры.Свойство("ТолькоПросмотр") Тогда
		ЭтаФорма.ТолькоПросмотр = Параметры.ТолькоПросмотр;
		Элементы.ДеревоУсловий.ТолькоПросмотр = Параметры.ТолькоПросмотр;
	КонецЕсли;
	
	ИнициализацияФормы();
	
	ЗаполнитьДеревоУсловийПеремещения();
	
КонецПроцедуры

&НаСервере
Процедура ИнициализацияФормы()
	
	ТаблицаУсловий = ПолучитьИзВременногоХранилища(АдресХранения);
	
	Объект.ТаблицаУсловий.Загрузить(ТаблицаУсловий);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьФлажки(Команда)

	УстановкаФлажков(ДеревоУсловий, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	УстановкаФлажков(ДеревоУсловий, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура Свернуть(Команда)
	
	Элементы.ДеревоУсловий.Свернуть(Элементы.ДеревоУсловий.ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура Развернуть(Команда)
	
	Элементы.ДеревоУсловий.Развернуть(Элементы.ДеревоУсловий.ТекущаяСтрока, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура Перенести(Команда)
	
	ОбновитьТабличнуюЧастьУсловий();
	
	Закрыть(Объект.ТаблицаУсловий);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТабличнуюЧастьУсловий()
	
	Объект.ТаблицаУсловий.Очистить();
	
	Для Каждого СтрокаЗаболевание ИЗ ДеревоУсловий.ПолучитьЭлементы() Цикл
		
		Для Каждого СтрокаПодвидПродукции Из СтрокаЗаболевание.ПолучитьЭлементы() Цикл
			
			Для Каждого СтрокаУсловие Из СтрокаПодвидПродукции.ПолучитьЭлементы() Цикл
				Если СтрокаУсловие.ПолучитьЭлементы().Количество() = 0 Тогда
					НоваяСтрока = Объект.ТаблицаУсловий.Добавить();
					НоваяСтрока.Заболевание        = СтрокаЗаболевание.ЗаболеваниеУсловие;
					НоваяСтрока.ПодвидПродукции    = СтрокаПодвидПродукции.ЗаболеваниеУсловие;
					НоваяСтрока.УсловиеПеремещения = СтрокаУсловие.ЗаболеваниеУсловие;
					НоваяСтрока.ВыполняетсяУсловие = СтрокаУсловие.ВыполняетсяУсловие;
					НоваяСтрока.НомерБлока         = СтрокаУсловие.НомерБлока;
				КонецЕсли;
				Для Каждого ВариантУсловия Из СтрокаУсловие.ПолучитьЭлементы() Цикл
					НоваяСтрока = Объект.ТаблицаУсловий.Добавить();
					НоваяСтрока.Заболевание        = СтрокаЗаболевание.ЗаболеваниеУсловие;
					НоваяСтрока.ПодвидПродукции    = СтрокаПодвидПродукции.ЗаболеваниеУсловие;
					НоваяСтрока.УсловиеПеремещения = ВариантУсловия.ЗаболеваниеУсловие;
					НоваяСтрока.ВыполняетсяУсловие = ВариантУсловия.ВыполняетсяУсловие;
					НоваяСтрока.НомерБлока         = ВариантУсловия.НомерБлока;
				КонецЦикла;
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы_ДеревоУсловий

&НаКлиенте
Процедура ДеревоУсловийФлагПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ДеревоУсловий.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.ВыполняетсяУсловие = 2 Тогда
		ТекущиеДанные.ВыполняетсяУсловие = 0;
	КонецЕсли;
	
	УстановкаФлажков(ТекущиеДанные, ТекущиеДанные.ВыполняетсяУсловие);
	
	Пока ТекущиеДанные.ПолучитьРодителя() <> Неопределено Цикл
		ТекущиеДанные.ПолучитьРодителя().ВыполняетсяУсловие = 
					?(УстановленноДляВсех(ТекущиеДанные), ТекущиеДанные.ВыполняетсяУсловие, 2);
		ТекущиеДанные = ТекущиеДанные.ПолучитьРодителя();
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановкаФлажков(ТекущиеДанные, Значение)
	
	Для Каждого ТекущаяСтрока Из ТекущиеДанные.ПолучитьЭлементы() Цикл
		ТекущаяСтрока.ВыполняетсяУсловие = Значение;
		УстановкаФлажков(ТекущаяСтрока, ТекущаяСтрока.ВыполняетсяУсловие);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция УстановленноДляВсех(Строка)
	
	Для Каждого Стр Из Строка.ПолучитьРодителя().ПолучитьЭлементы() Цикл
		Если Стр.ВыполняетсяУсловие <> Строка.ВыполняетсяУсловие Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина;
КонецФункции

&НаКлиенте
Процедура ДеревоУсловийПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоУсловийПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьДеревоУсловийПеремещения()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаУсловий.ВыполняетсяУсловие КАК ВыполняетсяУсловие,
		|	ТаблицаУсловий.Заболевание КАК Заболевание,
		|	ТаблицаУсловий.ПодвидПродукции КАК ПодвидПродукции,
		|	ТаблицаУсловий.УсловиеПеремещения КАК УсловиеПеремещения,
		|	ТаблицаУсловий.НомерБлока КАК НомерБлока
		|ПОМЕСТИТЬ ВТ_ТаблицаУсловий
		|ИЗ
		|	&ТаблицаУсловий КАК ТаблицаУсловий
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТаблицаУсловий.Заболевание КАК Заболевание,
		|	ВТ_ТаблицаУсловий.ПодвидПродукции КАК ПодвидПродукции,
		|	ВТ_ТаблицаУсловий.УсловиеПеремещения КАК УсловиеПеремещения,
		|	ВТ_ТаблицаУсловий.НомерБлока КАК НомерБлока,
		|	МАКСИМУМ(ВТ_ТаблицаУсловий.ВыполняетсяУсловие) КАК МаксимальноеЗначение,
		|	МИНИМУМ(ВТ_ТаблицаУсловий.ВыполняетсяУсловие) КАК МинимальноеЗначение
		|ИЗ
		|	ВТ_ТаблицаУсловий КАК ВТ_ТаблицаУсловий
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ТаблицаУсловий.Заболевание,
		|	ВТ_ТаблицаУсловий.ПодвидПродукции,
		|	ВТ_ТаблицаУсловий.УсловиеПеремещения,
		|	ВТ_ТаблицаУсловий.НомерБлока
		|
		|УПОРЯДОЧИТЬ ПО
		|	Заболевание,
		|	НомерБлока
		|ИТОГИ ПО
		|	Заболевание,
		|	ПодвидПродукции,
		|	НомерБлока
		|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("ТаблицаУсловий", Объект.ТаблицаУсловий.Выгрузить());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаЗаболевание = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаЗаболевание.Следующий() Цикл
		
		СтрокаЗаболевание = ДеревоУсловий.ПолучитьЭлементы().Добавить();
		СтрокаЗаболевание.ЗаболеваниеУсловие = ВыборкаЗаболевание.Заболевание;
		Если ВыборкаЗаболевание.МаксимальноеЗначение <> ВыборкаЗаболевание.МинимальноеЗначение Тогда
			СтрокаЗаболевание.ВыполняетсяУсловие = 2;
		Иначе
			СтрокаЗаболевание.ВыполняетсяУсловие = ВыборкаЗаболевание.МинимальноеЗначение;
		КонецЕсли;
		СтрокаЗаболевание.Уровень = 0;
		
		ВыборкаПодвидПродукции = ВыборкаЗаболевание.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПодвидПродукции.Следующий() Цикл
			
			СтрокаПодвидПродукции = СтрокаЗаболевание.ПолучитьЭлементы().Добавить();
			СтрокаПодвидПродукции.ЗаболеваниеУсловие = ВыборкаПодвидПродукции.ПодвидПродукции;
			Если ВыборкаПодвидПродукции.МаксимальноеЗначение <> ВыборкаПодвидПродукции.МинимальноеЗначение Тогда
				СтрокаПодвидПродукции.ВыполняетсяУсловие = 2;
			Иначе
				СтрокаПодвидПродукции.ВыполняетсяУсловие = ВыборкаПодвидПродукции.МинимальноеЗначение;
			КонецЕсли;
			СтрокаПодвидПродукции.Уровень = 1;
			
			ВыборкаНомерБлока = ВыборкаПодвидПродукции.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаНомерБлока.Следующий() Цикл
				
				Если ВыборкаНомерБлока.Количество() > 1 Тогда
					СтрокаГруппировки = СтрокаПодвидПродукции.ПолучитьЭлементы().Добавить();
					СтрокаГруппировки.ЗаболеваниеУсловие = "Список условий (" + ВыборкаНомерБлока.НомерБлока + ")";
					Если ВыборкаНомерБлока.МаксимальноеЗначение <> ВыборкаНомерБлока.МинимальноеЗначение Тогда
						СтрокаГруппировки.ВыполняетсяУсловие = 2;
					Иначе
						СтрокаГруппировки.ВыполняетсяУсловие = ВыборкаНомерБлока.МинимальноеЗначение;
					КонецЕсли;
					СтрокаГруппировки.Уровень = 2;
				КонецЕсли;
				
				ВыборкаДетальныеЗаписи = ВыборкаНомерБлока.Выбрать();
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					Если ВыборкаНомерБлока.Количество() > 1 Тогда
						СтрокаУсловие = СтрокаГруппировки.ПолучитьЭлементы().Добавить();
						СтрокаУсловие.ЗаболеваниеУсловие = ВыборкаДетальныеЗаписи.УсловиеПеремещения;
					Иначе
						СтрокаУсловие = СтрокаПодвидПродукции.ПолучитьЭлементы().Добавить();
						СтрокаУсловие.ЗаболеваниеУсловие = ВыборкаДетальныеЗаписи.УсловиеПеремещения;
					КонецЕсли;
					СтрокаУсловие.НомерБлока = ВыборкаДетальныеЗаписи.НомерБлока;
					Если ВыборкаДетальныеЗаписи.МаксимальноеЗначение <> ВыборкаДетальныеЗаписи.МинимальноеЗначение Тогда
						СтрокаУсловие.ВыполняетсяУсловие = 2;
					Иначе
						СтрокаУсловие.ВыполняетсяУсловие = ВыборкаНомерБлока.МинимальноеЗначение;
					КонецЕсли;
					
					СтрокаУсловие.Уровень = 3;
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти