
&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если ПустаяСтрока(Объект.ПутьКФайлуИндикатору) Тогда
	
		УстановитьПривилегированныйРежим( Истина );
		лПутьКСлужебнымФайлам = Константы.КаталогСообщенийОбменаДаннымиДляWindows.Получить();
		Объект.ПутьКФайлуИндикатору = ОбщегоНазначенияКлиентСервер.ПолучитьПолноеИмяФайла( лПутьКСлужебнымФайлам, "LED.txt" );
		УстановитьПривилегированныйРежим( Ложь );
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПутьКФайлуИндикаторуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	#Если ВебКлиент Тогда
		Если Не РаботаСФайламиСлужебныйКлиент.РасширениеРаботыСФайламиПодключено() Тогда
			РаботаСФайламиСлужебныйКлиент.ПоказатьПредупреждениеОНеобходимостиРасширенияРаботыСФайлами(Неопределено);
			Возврат;
		КонецЕсли;
	#КонецЕсли
	
	лРежимДиалога = РежимДиалогаВыбораФайла.Открытие;
	Диалог = Новый ДиалогВыбораФайла(лРежимДиалога);
	Диалог.Заголовок = "Выбор файла-индикатора";
	Диалог.Фильтр = "Файл-индикатор|LED.txt";
	Диалог.ИндексФильтра = 0;
	Диалог.ПредварительныйПросмотр = Ложь;
	Диалог.ПроверятьСуществованиеФайла = Истина;
	Диалог.МножественныйВыбор = Ложь; 
	Диалог.ПолноеИмяФайла = Объект.ПутьКФайлуИндикатору;
	
	Диалог.Показать(Новый ОписаниеОповещения("ПутьКФайлуИндикаторуНачалоВыбораЗавершение", ЭтотОбъект, Новый Структура("Диалог", Диалог)));
	
КонецПроцедуры

&НаКлиенте
Процедура ПутьКФайлуИндикаторуНачалоВыбораЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Диалог = ДополнительныеПараметры.Диалог;
	
	Если (ВыбранныеФайлы <> Неопределено) Тогда
		Объект.ПутьКФайлуИндикатору = Диалог.ПолноеИмяФайла;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КудаСохранитьСкриптНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	#Если ВебКлиент Тогда
		Если Не РаботаСФайламиСлужебныйКлиент.РасширениеРаботыСФайламиПодключено() Тогда
			РаботаСФайламиСлужебныйКлиент.ПоказатьПредупреждениеОНеобходимостиРасширенияРаботыСФайлами(Неопределено);
			Возврат;
		КонецЕсли;
	#КонецЕсли
	
	лРежимДиалога = РежимДиалогаВыбораФайла.Сохранение;
	Диалог = Новый ДиалогВыбораФайла(лРежимДиалога);
	Диалог.Заголовок = "Куда сохранить скрипт";
	Диалог.Фильтр = "Скрипт Powershell (d-m_notify.ps1)|*.ps1";
	Диалог.ИндексФильтра = 0;
	Диалог.ПредварительныйПросмотр = Ложь;
	Диалог.ПроверятьСуществованиеФайла = Ложь;
	Диалог.МножественныйВыбор = Ложь; 
	Диалог.ПолноеИмяФайла = Объект.КудаСохранитьСкрипт;
	Если ПустаяСтрока(Диалог.ПолноеИмяФайла) Тогда
		Диалог.ПолноеИмяФайла = "d-m_notify.ps1";
	КонецЕсли;
	
	Диалог.Показать(Новый ОписаниеОповещения("КудаСохранитьСкриптНачалоВыбораЗавершение", ЭтотОбъект, Новый Структура("Диалог", Диалог)));
	
КонецПроцедуры

&НаКлиенте
Процедура КудаСохранитьСкриптНачалоВыбораЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Диалог = ДополнительныеПараметры.Диалог;
	
	Если (ВыбранныеФайлы <> Неопределено) Тогда
		Объект.КудаСохранитьСкрипт = Диалог.ПолноеИмяФайла;
	КонецЕсли;

КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(Объект.ПутьКФайлуИндикатору) Тогда
	
		УстановитьПривилегированныйРежим( Истина );
		лПутьКСлужебнымФайлам = Константы.КаталогСообщенийОбменаДаннымиДляWindows.Получить();
		Объект.ПутьКФайлуИндикатору = ОбщегоНазначенияКлиентСервер.ПолучитьПолноеИмяФайла( лПутьКСлужебнымФайлам, "LED.txt" );
		УстановитьПривилегированныйРежим( Ложь );
	
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ПриОткрытииНаСервере()
	
	лОбработка = РеквизитФормыВЗначение("Объект");
	Объект.ТекстПисьмаУведомления = лОбработка.ПолучитьМакет( "ТекстПисьмаУведомления" ).ПолучитьТекст();
	Объект.ТекстПисьмаУведомления = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		Объект.ТекстПисьмаУведомления,
		СтрЗаменить( СтрЗаменить( СтрокаСоединенияИнформационнойБазы(), """", "" ), "'", "" )
	);
	Элементы.ПарольКПочтеЗаписатьВСкрипт.Видимость = Не Объект.ИспользоватьАутентификациюОС;
	
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ПустаяСтрока(Объект.ТекстПисьмаУведомления) Тогда
		ПриОткрытииНаСервере();
	КонецЕсли;
КонецПроцедуры


&НаСервере
Функция СоздатьСкриптНаСервере()
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	лИнтернетПочтовыйПрофиль = РаботаСПочтовымиСообщениямиСлужебный.ИнтернетПочтовыйПрофиль(Объект.УчетнаяЗаписьПочты);
	
	лОбработка = РеквизитФормыВЗначение("Объект");
	ТекстСкрипта = лОбработка.ПолучитьМакет( "Скрипт" ).ПолучитьТекст();
	Если Объект.ПарольКПочтеЗаписатьВСкрипт Тогда
		Cred = лОбработка.ПолучитьМакет( "PasswordAsPlainText" ).ПолучитьТекст();
		Cred = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			Cred,
			лИнтернетПочтовыйПрофиль.ПользовательSMTP,
			лИнтернетПочтовыйПрофиль.ПарольSMTP
		);
	Иначе
		Cred = "";
	КонецЕсли;
	
	#Область СписокПолучателей

	лПолучатели = "";
	УстановитьПривилегированныйРежим(Истина);
	лЗапрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДМ_ГруппыОтветственныхПользователи.ЭлПочта КАК ЭлПочта,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ДМ_ГруппыОтветственныхПользователи.Физлицо ССЫЛКА Справочник.Пользователи
	|				ТОГДА ДМ_ГруппыОтветственныхПользователи.Физлицо.Наименование
	|			ИНАЧЕ ДМ_ГруппыОтветственныхПользователи.Физлицо
	|		КОНЕЦ) КАК Пользователь
	|ИЗ
	|	Справочник.ДМ_ГруппыОтветственных.Пользователи КАК ДМ_ГруппыОтветственныхПользователи
	|ГДЕ
	|	ДМ_ГруппыОтветственныхПользователи.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ДМ_ГруппыОтветственныхПользователи.ЭлПочта"
	);
	лЗапрос.УстановитьПараметр( "Ссылка", Объект.ГруппаОтветственных );
	лРезультат = лЗапрос.Выполнить();
	Если лРезультат.Пустой() Тогда
	
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не заданы адреса получателей в списке рассылки ""Группа ответственных""'"),,"ГруппаОтветственных","Объект");
		Возврат Ложь;
	
	КонецЕсли;
	лВыборка = лРезультат.Выбрать();
	Пока лВыборка.Следующий() Цикл
	
		лПолучатели = лПолучатели + ?(лПолучатели="","",",")
		+	"'" + СтроковыеФункцииКлиентСервер.СтрокаЛатиницей(ОбщегоНазначенияКлиентСервер.УдалитьНедопустимыеСимволыXML( лВыборка.Пользователь ))
		+	" <" + лВыборка.ЭлПочта + ">'";
	
	КонецЦикла; 
	УстановитьПривилегированныйРежим(Ложь);
	
	#КонецОбласти
	
	лАтрибутыУчетнойЗаписи = ОбщегоНазначения.ЗначенияРеквизитовОбъекта( Объект.УчетнаяЗаписьПочты, "АдресЭлектроннойПочты,ИмяПользователя", Истина );
	
	Если ПустаяСтрока( лАтрибутыУчетнойЗаписи.ИмяПользователя ) Тогда
		лОтправитель = лАтрибутыУчетнойЗаписи.АдресЭлектроннойПочты;
	Иначе
		лОтправитель = ""
			+ СтроковыеФункцииКлиентСервер.СтрокаЛатиницей(СокрЛП(ОбщегоНазначенияКлиентСервер.УдалитьНедопустимыеСимволыXML(лАтрибутыУчетнойЗаписи.ИмяПользователя)))
			+ " <"+СокрЛП(лАтрибутыУчетнойЗаписи.АдресЭлектроннойПочты)+">";
	КонецЕсли;
	
	лТема = "Scheduled tasks for data exchange with Mercury are not carried out";
	
	лМассивПараметров = Новый Массив;
	лМассивПараметров.Добавить( лИнтернетПочтовыйПрофиль.АдресСервераSMTP );						//%1
	лМассивПараметров.Добавить( Формат(лИнтернетПочтовыйПрофиль.ПортSMTP,"ЧДЦ=0; ЧГ=") );			//%2
	лМассивПараметров.Добавить( ?(лИнтернетПочтовыйПрофиль.ИспользоватьSSLSMTP, 1, 0) );			//%3
	лМассивПараметров.Добавить( лПолучатели );														//%4
	лМассивПараметров.Добавить( лОтправитель );														//%5
	лМассивПараметров.Добавить( лТема );															//%6
	лМассивПараметров.Добавить( 
		ОбщегоНазначенияКлиентСервер.УдалитьНедопустимыеСимволыXML( Объект.ТекстПисьмаУведомления ));//%7
	лМассивПараметров.Добавить( Cred );																//%8
	лМассивПараметров.Добавить( ?(ПустаяСтрока(Cred), "", "-Credential $cred") );					//%9
	лМассивПараметров.Добавить( Объект.ПутьКФайлуИндикатору );										//%10
	лМассивПараметров.Добавить( Формат( 0+?(Объект.ДопустимоеОтклонение = 0, 15, Объект.ДопустимоеОтклонение)*60, "ЧГ=" ) );					//%11
	
	ТекстСкрипта = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтрокуИзМассива(
		ТекстСкрипта,
		лМассивПараметров
	);
	
	Возврат Истина;
	
КонецФункции


&НаКлиенте
Процедура СоздатьСкрипт(Команда)
	
	Если СоздатьСкриптНаСервере() Тогда
		
		лТекстовыйДокумент = Новый ТекстовыйДокумент;
		лТекстовыйДокумент.УстановитьТекст( ТекстСкрипта );
		лТекстовыйДокумент.Записать( Объект.КудаСохранитьСкрипт, "windows-1251" );
	
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ИспользоватьАутентификациюОСПриИзменении(Элемент)
	
	Если Объект.ИспользоватьАутентификациюОС Тогда
		Объект.ПарольКПочтеЗаписатьВСкрипт = Ложь;
	КонецЕсли;
	Элементы.ПарольКПочтеЗаписатьВСкрипт.Видимость = Не Объект.ИспользоватьАутентификациюОС;
	
КонецПроцедуры

