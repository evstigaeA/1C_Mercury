#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("Организация") Тогда
		Организация = Параметры.Организация;
	КонецЕсли;
	
	Если Параметры.Свойство("Контрагент") Тогда
		Контрагент = Параметры.Контрагент;
	КонецЕсли;
	
	Список.Параметры.УстановитьЗначениеПараметра("Контрагент",  Контрагент);
	
	ОбщегоНазначенияУВССервер.ДобавитьЭлементАдресНаФормуСпискаВыбора(ЭтаФорма, "Адрес предприятия");
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	Контрагент = ОбщегоНазначенияУВСВызовСервера.КонтрагентПоОрганизации(Организация);
	Список.Параметры.УстановитьЗначениеПараметра("Контрагент",  Контрагент);
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	Список.Параметры.УстановитьЗначениеПараметра("Контрагент",  Контрагент);
	Предприятия.Очистить();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаСервере
Процедура СоздатьСвязьНаСервере()
	
	Если Не ЗначениеЗаполнено(Контрагент.GUID_Меркурий) Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаПредприятий = Новый ТаблицаЗначений;
	ТаблицаПредприятий.Колонки.Добавить("ИдентификаторЭлемента");
	ТаблицаПредприятий.Колонки.Добавить("Предприятие");
	ТаблицаПредприятий.Колонки.Добавить("GLN");
	ТаблицаПредприятий.Колонки.Добавить("СообщениеПользователю");
	ТаблицаПредприятий.Колонки.Добавить("УспешноОбработано");
	Для каждого ЭлементСписка Из Предприятия Цикл
		Если ЗначениеЗаполнено(ЭлементСписка.Ссылка) Тогда
			НоваяСтрока = ТаблицаПредприятий.Добавить();
			НоваяСтрока.ИдентификаторЭлемента = ЭлементСписка.ПолучитьИдентификатор();
			НоваяСтрока.Предприятие = ЭлементСписка.Ссылка;
			НоваяСтрока.GLN = ЭлементСписка.GLN;
			НоваяСтрока.СообщениеПользователю = "";
			НоваяСтрока.УспешноОбработано = Ложь;
		КонецЕсли;
		ЭлементСписка.Статус = 0;
		ЭлементСписка.СтатусСообщение = "";
	КонецЦикла;
	
	Если ТаблицаПредприятий.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ИнтеграцияВетисAPIКонтрагентыПредприятия.ИзменитьСвязьМеждуКонтрагентомИПредприятиями(Контрагент, ТаблицаПредприятий, Организация, Неопределено, Ложь);
	
	Для каждого СтрокаТаблицыПредприятий Из ТаблицаПредприятий Цикл
		ЭлементСписка = Предприятия.НайтиПоИдентификатору(СтрокаТаблицыПредприятий.ИдентификаторЭлемента);
		Если СтрокаТаблицыПредприятий.УспешноОбработано Тогда
			ЭлементСписка.Статус = 2;
		Иначе
			ЭлементСписка.Статус = 1;
		КонецЕсли;
		ЭлементСписка.СтатусСообщение = СтрокаТаблицыПредприятий.СообщениеПользователю;
	КонецЦикла;
	
	Элементы.Предприятия.Обновить();
	Элементы.Список.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура СоздатьСвязь(Команда)
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Контрагент) Тогда
		Возврат;
	КонецЕсли;
	
	СоздатьСвязьНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура УдалитьСвязьНаСервере()
	
	Если Не ЗначениеЗаполнено(Контрагент.GUID_Меркурий) Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаПредприятий = Новый ТаблицаЗначений;
	ТаблицаПредприятий.Колонки.Добавить("ИдентификаторЭлемента");
	ТаблицаПредприятий.Колонки.Добавить("Предприятие");
	ТаблицаПредприятий.Колонки.Добавить("GLN");
	ТаблицаПредприятий.Колонки.Добавить("СообщениеПользователю");
	ТаблицаПредприятий.Колонки.Добавить("УспешноОбработано");
	Для каждого ЭлементСписка Из Предприятия Цикл
		Если ЗначениеЗаполнено(ЭлементСписка.Ссылка) Тогда
			НоваяСтрока = ТаблицаПредприятий.Добавить();
			НоваяСтрока.ИдентификаторЭлемента = ЭлементСписка.ПолучитьИдентификатор();
			НоваяСтрока.Предприятие = ЭлементСписка.Ссылка;
			НоваяСтрока.GLN = ЭлементСписка.GLN;
			НоваяСтрока.СообщениеПользователю = "";
			НоваяСтрока.УспешноОбработано = Ложь;
		КонецЕсли;
		ЭлементСписка.Статус = 0;
		ЭлементСписка.СтатусСообщение = "";
	КонецЦикла;
	
	ИнтеграцияВетисAPIКонтрагентыПредприятия.ИзменитьСвязьМеждуКонтрагентомИПредприятиями(Контрагент, ТаблицаПредприятий, Организация, Неопределено, Истина);
	
	Для каждого СтрокаТаблицыПредприятий Из ТаблицаПредприятий Цикл
		ЭлементСписка = Предприятия.НайтиПоИдентификатору(СтрокаТаблицыПредприятий.ИдентификаторЭлемента);
		Если СтрокаТаблицыПредприятий.УспешноОбработано Тогда
			ЭлементСписка.Статус = 2;
		Иначе
			ЭлементСписка.Статус = 1;
		КонецЕсли;
		ЭлементСписка.СтатусСообщение = СтрокаТаблицыПредприятий.СообщениеПользователю;
	КонецЦикла;
	
	Элементы.Список.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСвязь(Команда)
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Контрагент) Тогда
		Возврат;
	КонецЕсли;
	
	УдалитьСвязьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураПоиска = Новый Структура("Ссылка", ТекущиеДанные.Ссылка);
	
	НайденныеСтроки = Предприятия.НайтиСтроки(СтруктураПоиска);
	
	Если НайденныеСтроки.Количество() > 0 Тогда
		НоваяСтрока = НайденныеСтроки[0];
	Иначе	
		НоваяСтрока = Предприятия.Добавить();
	КонецЕсли;
	НоваяСтрока.Ссылка = ТекущиеДанные.Ссылка;
	НоваяСтрока.GLN    = ТекущиеДанные.GLN;
	НоваяСтрока.Статус = 0;
	НоваяСтрока.СтатусСообщение = "";
	
КонецПроцедуры

&НаКлиенте
Процедура ПредприятияGLNНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Предприятия.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТолькоПросмотр", ЭтаФорма.ТолькоПросмотр);
	ПараметрыФормы.Вставить("СписокЗначений", СтрРазделить(ТекущиеДанные.GLN, ";", Ложь));
	ПараметрыФормы.Вставить("СписокТипов"   , Новый ОписаниеТипов("Строка"));
	ПараметрыФормы.Вставить("Представление" , НСтр("ru = 'Указание GLN связи'"));
	
	Оповещение = Новый ОписаниеОповещения("ПредприятияGLNНачалоВыбораЗавершение", ЭтотОбъект, ТекущиеДанные);
	ОткрытьФорму("ОбщаяФорма.ВводЗначенийСписком", ПараметрыФормы,,,,, Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредприятияGLNНачалоВыбораЗавершение(СписокGLN, ДополнительныеПараметры) Экспорт
	
	Если СписокGLN = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры.GLN = СтрСоединить(СписокGLN, ";");
	
КонецПроцедуры

#КонецОбласти