
&НаКлиенте
Процедура ВыбратьВсе(Команда)
	
	Для каждого лСтрока Из Объект.ДокументыНаОтправку Цикл
		лСтрока.ЗарегистрироватьДляОтправки = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсе(Команда)
	
	Для каждого лСтрока Из Объект.ДокументыНаОтправку Цикл
		лСтрока.ЗарегистрироватьДляОтправки = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОтправленныеНаСервере()
	
	ЗаполнитьДокументыНаСервере(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьОтправленные(Команда)
	ЗаполнитьОтправленныеНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНеОтправленные(Команда)
	ЗаполнитьНеОтправленныеНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДокументыНаСервере(НеОтправленные = Истина)
	
	Объект.ДокументыНаОтправку.Очистить();
	
	Запр = Новый Запрос;
	Запр.Текст = "ВЫБРАТЬ
	             |	ТранспортныеОперации.Ссылка КАК ТранспОперация,
	             |	ЕСТЬNULL(ДМ_EDIКлиенты.ДМ_ГлобальныйНомер, """") КАК ДМ_ГлобальныйНомер,
	             |	ТранспортныеОперации.Дата КАК Дата,
	             |	ЕСТЬNULL(ДМ_ДокументыОбменаDanone_EDIКлиенты.Передано, ЛОЖЬ) КАК Передано,
	             |	ЕСТЬNULL(ДМ_ДокументыОбменаDanone_EDIКлиенты.ДатаПередачи, &ПустаяДата) КАК ДатаПередачи,
	             |	ЕСТЬNULL(ДМ_ДокументыОбменаDanone_EDIКлиенты.ДМ_ДокументыОбменаDanone, &ПустойДокОбмена) КАК ДокументыОбменаDanoneРегистрация,
	             |	ДМ_ФайлыОбменаDanoneКлиент.Ссылка КАК ДокОбмена,
	             |	ДМ_ФайлыОбменаDanoneКлиент.ДМ_GLNСети КАК ДМ_GLNСети,
	             |	ЕСТЬNULL(ЖурналРегистрацииСостоянийЗаявокНаОформлениеОперацийСрезПоследних.Статус,&ПустойСтатус) КАК СтатусДокТО
	             |ИЗ
	             |	Документ.ДМ_ФайлыОбменаDanoneКлиент КАК ДМ_ФайлыОбменаDanoneКлиент
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДМ_EDIКлиенты КАК ДМ_EDIКлиенты
	             |		ПО ДМ_ФайлыОбменаDanoneКлиент.ДМ_GLNСети = ДМ_EDIКлиенты.ДМ_ГлобальныйНомер
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ДМ_ФайлыОбменаDanoneКлиент.ДМ_СвязанныеДокументыУВС КАК ДМ_ФайлыОбменаDanoneКлиентДМ_СвязанныеДокументыУВС
	             |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТранспортныеОперации КАК ТранспортныеОперации
	             |				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЖурналРегистрацииСостоянийЗаявокНаОформлениеОпераций.СрезПоследних КАК ЖурналРегистрацииСостоянийЗаявокНаОформлениеОперацийСрезПоследних
	             |				ПО ТранспортныеОперации.Ссылка = ЖурналРегистрацииСостоянийЗаявокНаОформлениеОперацийСрезПоследних.ДокументСсылка
	             |				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДМ_ДокументыОбменаDanone_EDIКлиенты КАК ДМ_ДокументыОбменаDanone_EDIКлиенты
	             |				ПО ТранспортныеОперации.Ссылка = ДМ_ДокументыОбменаDanone_EDIКлиенты.ТранспортнаяОперация
	             |			ПО ДМ_ФайлыОбменаDanoneКлиентДМ_СвязанныеДокументыУВС.ДМ_СвязанныйДокументУВС = ТранспортныеОперации.Ссылка
	             |		ПО ДМ_ФайлыОбменаDanoneКлиент.Ссылка = ДМ_ФайлыОбменаDanoneКлиентДМ_СвязанныеДокументыУВС.Ссылка
	             |ГДЕ
	             |	ЖурналРегистрацииСостоянийЗаявокНаОформлениеОперацийСрезПоследних.Статус = &УспешныйСтатус
	             |	И ДМ_ФайлыОбменаDanoneКлиент.ДМ_GLNСети <> &ПустаяСтрока
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	Дата";
	
	Запр.Параметры.Вставить("ПустаяСтрока","");
	Запр.Параметры.Вставить("ПустаяДата",Дата(1,1,1));
	Запр.Параметры.Вставить("ПустойДокОбмена",Документы.ДМ_ФайлыОбменаDanoneКлиент.ПустаяСсылка());
	Запр.Параметры.Вставить("УспешныйСтатус",Справочники.СтатусыЗаявок.УспешноОбработана);
	Запр.Параметры.Вставить("ПустойСтатус",Справочники.СтатусыЗаявок.ПустаяСсылка());
	
	ВыбЗапр = Запр.Выполнить().Выбрать();
	Пока ВыбЗапр.Следующий() Цикл
		Если НеОтправленные И ВыбЗапр.ДатаПередачи <> Дата(1,1,1) Тогда
			Продолжить;
		ИначеЕсли Не НеОтправленные И ВыбЗапр.ДатаПередачи = Дата(1,1,1) Тогда
			Продолжить;
		КонецЕсли;	
		НовСтр = Объект.ДокументыНаОтправку.Добавить();
		НовСтр.ТранспортнаяОперация = ВыбЗапр.ТранспОперация;
		НовСтр.ФайлыОбменаDanoneКлиент = ВыбЗапр.ДокОбмена;
		НовСтр.ДатаОтправки = ВыбЗапр.ДатаПередачи;
		НовСтр.Зарегистрирован = ?(ЗначениеЗаполнено(ВыбЗапр.ДокументыОбменаDanoneРегистрация),Истина,Ложь);
	КонецЦикла;	
	
КонецПроцедуры	
	


&НаСервере
Процедура ЗаполнитьНеОтправленныеНаСервере()
	
	ЗаполнитьДокументыНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	Отбор = Новый Структура("ДанныеЗаписи", ПараметрКоманды);
	ПараметрыФормы = Новый Структура("Отбор", Отбор);
	ОткрытьФорму("РегистрСведений.ДМ_СтрокиЗаписейЖурналаРегистрации.ФормаСписка", ПараметрыФормы, ПараметрыВыполненияКоманды.Источник, ПараметрКоманды.УникальныйИдентификатор(), ПараметрыВыполненияКоманды.Окно, ПараметрыВыполненияКоманды.НавигационнаяСсылка);
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьРегистрациюНаСервере(мДок)
	
	КвоОтпр = 0;
	Для мм=0 по мДок.Количество()-1 Цикл
		Результат = ДМ_ИнтеграцияУВСSAP.СозданиеОбогащенногоEDIФайл_РегистрацияНаОтправку(мДок.Получить(мм).ПолучитьОбъект(),Истина);
		Если Результат = Истина Тогда	
			КвоОтпр = КвоОтпр + 1;
		КонецЕсли;	
	КонецЦикла;			
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Зарегистрированы к отправке " + КвоОтпр + " документов");
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСтрокиЗаписейЖурналаРегистрации()
	
	Если Элементы.ДокументыНаОтправку.ТекущиеДанные <> Неопределено Тогда
		ТекДок = Элементы.ДокументыНаОтправку.ТекущиеДанные.ТранспортнаяОперация;
		Если ЗначениеЗаполнено(ТекДок) Тогда
			Отбор = Новый Структура("ДанныеЗаписи", ТекДок);
			ПараметрыФормы = Новый Структура("Отбор", Отбор);
			ОткрытьФорму("РегистрСведений.ДМ_СтрокиЗаписейЖурналаРегистрации.ФормаСписка", ПараметрыФормы);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗарегистрироватьКОтправке(Команда)
	
	СтрОтб = Новый Структура;
	СтрОтб.Вставить("ЗарегистрироватьДляОтправки",Истина);
	мСтр = Объект.ДокументыНаОтправку.НайтиСтроки(СтрОтб);
	Если мСтр.Количество() = 0  Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нет указанных к регистрации документов");
		Возврат;
	КонецЕсли;	
	
	мДок = Новый Массив;
	Для мм=0 по мСтр.Количество()-1 Цикл
		мДок.Добавить(мСтр.Получить(мм).ТранспортнаяОперация);
	КонецЦикла;	
	
	ВыполнитьРегистрациюНаСервере(мДок);
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыНаОтправкуПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры


&НаКлиенте
Процедура ДокументыНаОтправкуПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры
	