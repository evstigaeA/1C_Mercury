#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область СлужебныеПроцедурыИФункции
	
Функция СтатусыРазрешенныеДляИзменения() Экспорт
		
	МассивРазрешенныхСтатусов = Новый Массив;
	МассивРазрешенныхСтатусов.Добавить(Справочники.СтатусыЗаявок.Новая);
	МассивРазрешенныхСтатусов.Добавить(Справочники.СтатусыЗаявок.Отправлена);
	МассивРазрешенныхСтатусов.Добавить(Справочники.СтатусыЗаявок.Обрабатывается);
	МассивРазрешенныхСтатусов.Добавить(Справочники.СтатусыЗаявок.ОшибкаОтправкиID);
	МассивРазрешенныхСтатусов.Добавить(Справочники.СтатусыЗаявок.ОшибкаОбработкиОтвета);
	
	Возврат МассивРазрешенныхСтатусов;
КонецФункции

Процедура УстановитьТекущийСтатусЗаяки(Документ, ТекущийСтатус, Статус, ИдентификаторЗаявки, ТекстОшибки) Экспорт
	
	ТекстОшибки = "";
	
	// Проверим не изменился ли статус
	СтатусДокумента = РегистрыСведений.ЖурналРегистрацииСостоянийЗаявокНаОформлениеОпераций.ТекущийСтатусДокумента(Документ);
	
	Если ТекущийСтатус <> СтатусДокумента Тогда
		ТекстОшибки = СтрЗаменить(НСтр("ru = 'Изменился статус документа. Текущий статус %1. Изменение статуса невозможно'"), "%1", СтатусДокумента);
		Возврат;
	КонецЕсли;
	
	ИнтеграцияВетисAPIСлужебный.УстановитьТекущийСтатусСостоянийЗаявокНаОформлениеОпераций(Документ,
			Статус, ИдентификаторЗаявки,, НСтр("ru = 'Смена статуса с помощью обработки ""Изменение статуса заявки"".'"));
			
КонецПроцедуры

Функция ПроверитьРаботуФоновыхЗаданий(ИмяДокумента, ТекстОшибки) Экспорт
	
	ТекстОшибки = "";
	Отказ       = Ложь;
	
	МассивМетодов = Новый Массив;
	Если ИмяДокумента = "АннулированиеВСД" Тогда
		
		МассивМетодов.Добавить("ИнтеграцияВетисAPIОтправкаЗаявокНаОформление.ОтправкаАннулированийВСД");
		МассивМетодов.Добавить("ИнтеграцияВетисAPIОбработкаРезультатовОформленияЗаявок.ОбработкаРезультатовАннулированияВСД");
		
	ИначеЕсли ИмяДокумента = "ВнесениеНомеровТранспортныхСредств" Тогда
		
		МассивМетодов.Добавить("ИнтеграцияВетисAPIОтправкаЗаявокНаОформление.ОтправкаВнесенийНомеровТранспортныхСредств");
		МассивМетодов.Добавить("ИнтеграцияВетисAPIОбработкаРезультатовОформленияЗаявок.ОбработкаОтветаПоВнесениюНомеровТранспортныхСредств");
		
	ИначеЕсли ИмяДокумента = "ВнесениеСведенийОЛабораторныхИсследованиях" Тогда
		
		МассивМетодов.Добавить("ИнтеграцияВетисAPIОтправкаЗаявокНаОформление.ОтправкаВнесенийЛабораторныхИсследований");
		МассивМетодов.Добавить("ИнтеграцияВетисAPIОбработкаРезультатовОформленияЗаявок.ОбработкаОтветаПоВнесениюЛабораторныхИсследований");
		
	ИначеЕсли ИмяДокумента = "Инвентаризации" Тогда
		
		МассивМетодов.Добавить("ИнтеграцияВетисAPIОтправкаЗаявокНаОформление.ОтправкаИнвентаризаций");
		МассивМетодов.Добавить("ИнтеграцияВетисAPIОбработкаРезультатовОформленияЗаявок.ОбработкаРезультатовИнвентаризации");
		
	ИначеЕсли ИмяДокумента = "ОбъединениеЗаписейСкладскогоЖурнала" Тогда
		
		МассивМетодов.Добавить("ИнтеграцияВетисAPIОтправкаЗаявокНаОформление.ОтправкаОбъединенийЗаписейСкладскогоЖурнала");
		МассивМетодов.Добавить("ИнтеграцияВетисAPIОбработкаРезультатовОформленияЗаявок.ОбработкаРезультатовОбъединениеЗаписейСкладскогоЖурнала");
		
	ИначеЕсли ИмяДокумента = "ПриходныеОперации" Тогда
		
		МассивМетодов.Добавить("ИнтеграцияВетисAPIОтправкаЗаявокНаОформление.ОтправкаПриходныхОпераций");
		МассивМетодов.Добавить("ИнтеграцияВетисAPIОбработкаРезультатовОформленияЗаявок.ОбработкаРезультатовПриходныеОперации");
		
	ИначеЕсли ИмяДокумента = "ПроизводственныеОперации" Тогда
		
		МассивМетодов.Добавить("ИнтеграцияВетисAPIОтправкаЗаявокНаОформление.ОтправкаПроизводственныхОпераций");
		МассивМетодов.Добавить("ИнтеграцияВетисAPIОбработкаРезультатовОформленияЗаявок.ОбработкаРезультатовПроизводственныеОперации");
		
	ИначеЕсли ИмяДокумента = "ТранспортныеОперации" Тогда
		
		МассивМетодов.Добавить("ИнтеграцияВетисAPIОтправкаЗаявокНаОформление.ОтправкаТранспортныхОпераций");
		МассивМетодов.Добавить("ИнтеграцияВетисAPIОбработкаРезультатовОформленияЗаявок.ОбработкаРезультатовТранспортныеОперации");
		
	КонецЕсли;

	Для Каждого ТекМетод Из МассивМетодов Цикл
		
		Отбор = Новый Структура;
		Отбор.Вставить("ИмяМетода", ТекМетод);
		Отбор.Вставить("Состояние", СостояниеФоновогоЗадания.Активно);
		
		ФоновыеЗаданияПроверка = ФоновыеЗадания.ПолучитьФоновыеЗадания(Отбор);
		
		Если ФоновыеЗаданияПроверка.Количество() > 0 Тогда
			Отказ = Истина;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Если Отказ Тогда
		
		ТекстОшибки = НСтр("ru = 'Обнаружены активные регламентные задания связанные с данным видом документа. Изменение статуса невозможно.
							|Предварительно необходимо прекратить выполнение заданий.'");
		
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
КонецФункции

#КонецОбласти

#КонецЕсли