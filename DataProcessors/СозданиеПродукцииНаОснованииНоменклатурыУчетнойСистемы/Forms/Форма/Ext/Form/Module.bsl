#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Организация = ?(ЗначениеЗаполнено(Организация), Организация, ПараметрыСеанса.ТекущийПользователь.ОсновнаяОрганизация);
	Контрагент  = ОбщегоНазначенияУВССервер.КонтрагентПоОрганизации(Организация);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Контрагент = ОбщегоНазначенияУВСВызовСервера.КонтрагентПоОрганизации(Организация);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодвидПродукцииПриИзменении(Элемент)
	
	Для Каждого ТекСтрока Из ТаблицаНоменклатуры Цикл
		ТекСтрока.ПодвидПродукции = ПодвидПродукции;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицаНоменклатуры

&НаКлиенте
Процедура ТаблицаНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ТаблицаНоменклатурыПродукция" Тогда
		
		ТекущиеДанные = Элементы.ТаблицаНоменклатуры.ТекущиеДанные;
		Если ТекущиеДанные = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		Если ТекущиеДанные.Продукция.Количество() > 0 Тогда
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("Отбор", Новый Структура("НоменклатураУчетнойСистемы", ТекущиеДанные.Номенклатура));
			ПараметрыФормы.Вставить("ТолькоПросмотр", Истина);
			ОткрытьФорму("РегистрСведений.СоответствиеПродукцииНоменклатуреУчетнойСистемы.ФормаСписка", ПараметрыФормы, Элемент);
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаНоменклатурыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

#КонецОбласти

#Область ПодборНоменклатуры

&НаКлиенте
Процедура ПодборНоменклатуры(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Ложь);
	ПараметрыФормы.Вставить("МножественныйВыбор", Истина);
	ОткрытьФорму("Справочник.НоменклатураУчетнойСистемы.ФормаВыбора", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьВыборНаСервере(МассивЗначений)
	
	Если ТипЗнч(МассивЗначений) <> Тип("Массив") Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ТекЗначение Из МассивЗначений Цикл
		ПараметрыОтбора = Новый Структура("Номенклатура", ТекЗначение);
		НайденныеСтроки = ТаблицаНоменклатуры.НайтиСтроки(ПараметрыОтбора);
		Если НайденныеСтроки.Количество() = 0 Тогда
			НоваяСтрока = ТаблицаНоменклатуры.Добавить();
			НоваяСтрока.Номенклатура = ТекЗначение;
			НоваяСтрока.ПодвидПродукции = ПодвидПродукции;
			НоваяСтрока.Продукция.ЗагрузитьЗначения(ПолучитьСоответствиеПродукцииНоменклатуре(ТекЗначение));
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ОбработатьВыборНаСервере(ВыбранноеЗначение);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСоответствиеПродукцииНоменклатуре(Номенклатура)
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СоответствиеПродукцииНоменклатуреУчетнойСистемы.Продукция
		|ИЗ
		|	РегистрСведений.СоответствиеПродукцииНоменклатуреУчетнойСистемы КАК СоответствиеПродукцииНоменклатуреУчетнойСистемы
		|ГДЕ
		|	СоответствиеПродукцииНоменклатуреУчетнойСистемы.НоменклатураУчетнойСистемы = &Номенклатура
		|
		|СГРУППИРОВАТЬ ПО
		|	СоответствиеПродукцииНоменклатуреУчетнойСистемы.Продукция";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СписокПродукции = Новый СписокЗначений;
	СписокПродукции = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Продукция");
	
	Возврат СписокПродукции;
КонецФункции

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаСервере
Процедура ВыполнитьСозданиеНаСервере()
	
	ТаблицаВыбранныхПредприятий = Новый ТаблицаЗначений;
	ТаблицаВыбранныхПредприятий.Колонки.Добавить("Предприятие", Новый ОписаниеТипов("СправочникСсылка.Предприятия"));
	
	Для Каждого ТекЭлемент Из СписокПредприятий Цикл
		Если ТекЭлемент.Пометка Тогда
			НоваяСтрока = ТаблицаВыбранныхПредприятий.Добавить();
			НоваяСтрока.Предприятие = ТекЭлемент;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ТекСтрока Из ТаблицаНоменклатуры Цикл
		
		НачатьТранзакцию();
		
		ТекстОшибки = "";
		Продукция = "";
		Номенклатура = ТекСтрока.Номенклатура;
		
		// Новая продукция
		Если ТекСтрока.Продукция.Количество() = 0 Или СоздаватьПриСуществующейСвязи Тогда
			
			СоздатьПродукцию(Продукция, ТаблицаВыбранныхПредприятий, ПодвидПродукции, ТекСтрока, ТекстОшибки);
			
			Если ПустаяСтрока(ТекстОшибки) Тогда
				ДобавитьСоответствиеПродукцииНоменклатуреУчетнойСистемы(Продукция, Номенклатура, ТекстОшибки);
			КонецЕсли;
			
			Если ПустаяСтрока(ТекстОшибки) Тогда
				
				ТекСтрока.Продукция.Добавить(Продукция);
				
				Если РегистрироватьПродукциюВМеркурии Тогда
					ЗарегистрироватьПродукцию(Продукция, ТекстОшибки);
				КонецЕсли;
				
			КонецЕсли;
			
		// Продукция уже есть
		Иначе
			
			Для каждого ТекСтрокаПродукция Из ТекСтрока.Продукция Цикл
				Продукция = ТекСтрокаПродукция.Значение;
				GUID_Меркурий = Продукция.GUID_Меркурий;
				Если Не ЗначениеЗаполнено(GUID_Меркурий) И РегистрироватьПродукциюВМеркурии Тогда
					ЗарегистрироватьПродукцию(Продукция, ТекстОшибки);
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
		Если ПустаяСтрока(ТекстОшибки) Тогда
			ЗафиксироватьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Операция выполнена успешно.'");
			ТекСтрока.Статус = 2;
			ТекСтрока.СтатусСообщение = ТекстСообщения;
		Иначе
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'В результате выполнения операции произошла ошибка:
			|%1'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, СокрЛП(ТекстОшибки));
			ТекСтрока.Статус = 1;
			ТекСтрока.СтатусСообщение = ТекстСообщения;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьПродукцию(Продукция, ТаблицаВыбранныхПредприятий, ПодвидПродукции, ТекСтрока, ТекстОшибки)
	
	ПродукцияОбъект = Справочники.Продукция.СоздатьЭлемент();
	ПродукцияОбъект.Код                = ТекСтрока.Номенклатура.Код;
	ПродукцияОбъект.Наименование       = ТекСтрока.Номенклатура.Наименование;
	ПродукцияОбъект.НаименованиеПолное = ТекСтрока.Номенклатура.Наименование;
	ПродукцияОбъект.Артикул            = ТекСтрока.Номенклатура.Артикул;
	ПродукцияОбъект.Владелец           = ПодвидПродукции;
	ПродукцияОбъект.ПроизводителиПродукции.Загрузить(ТаблицаВыбранныхПредприятий);
	
	Попытка
		ПродукцияОбъект.ОбменДанными.Загрузка = Истина;
		ПродукцияОбъект.Записать();
		Продукция = ПродукцияОбъект.Ссылка;
	Исключение
		ТекстОшибки = ОписаниеОшибки();
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура ЗарегистрироватьПродукцию(Продукция, ТекстОшибки)
	
	МассивПродукции = Новый Массив;
	МассивПродукции.Добавить(Продукция);
	РезультатВыполненияОперации = ИнтеграцияВетисAPIВызовСервера.ОбновитьДанныеПоПродукции(МассивПродукции, Организация, Пользователи.ТекущийПользователь());
	
	Если ЗначениеЗаполнено(РезультатВыполненияОперации.ОписаниеОшибки) Тогда
		
		ТекстОшибки = РезультатВыполненияОперации.ОписаниеОшибки;
		
	Иначе
		
		ДанныеРезультата = РезультатВыполненияОперации.Продукция;
		
		Для Каждого ТекРезультат Из ДанныеРезультата Цикл
			
			Если ЗначениеЗаполнено(ТекРезультат.ОписаниеОшибки) Тогда
				
				ТекстОшибки = ТекРезультат.ОписаниеОшибки;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьСоответствиеПродукцииНоменклатуреУчетнойСистемы(Продукция, Номенклатура, ТекстОшибки)
	
	МенеджерЗаписи = РегистрыСведений.СоответствиеПродукцииНоменклатуреУчетнойСистемы.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Продукция = Продукция;
	МенеджерЗаписи.НоменклатураУчетнойСистемы = Номенклатура;
	
	Попытка
		МенеджерЗаписи.Записать();
	Исключение
		ТекстОшибки = ОписаниеОшибки();
	КонецПопытки;
	
КонецПроцедуры	

&НаКлиенте
Процедура ВыполнитьСоздание(Команда)
	
	Если ПроверитьЗаполнение() Тогда
		ВыполнитьСозданиеНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСписокВыбранныхПредприятий(Команда)
	
	Отмеченные = Новый СписокЗначений;
	Отмеченные.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Предприятия");
	Если СписокПредприятий.Количество() = 0 Тогда
		СписокПредприятийКонтрагента = ОбщегоНазначенияУВСВызовСервера.ПредприятияПоКонтрагенту(Контрагент, Истина);
	Иначе
		СписокПредприятийКонтрагента = СписокПредприятий;
		Для Каждого ТекЭлемент Из СписокПредприятийКонтрагента Цикл
			Если ТекЭлемент.Пометка Тогда
				Отмеченные.Добавить(ТекЭлемент.Значение, ТекЭлемент.Представление);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ОграничиватьВыборУказаннымиЗначениями", Истина);
	ПараметрыФормы.Вставить("ОписаниеТипов"    , Новый ОписаниеТипов("СправочникСсылка.Предприятия"));
	ПараметрыФормы.Вставить("ЗначенияДляВыбора", СписокПредприятийКонтрагента);
	ПараметрыФормы.Вставить("Отмеченные"       , Отмеченные);
	
	Обработчик = Новый ОписаниеОповещения("СписокВыбранныхПредприятийЗавершениеВыбора", ЭтотОбъект);
	
	ОткрытьФорму("ОбщаяФорма.ВводЗначенийСпискомСФлажками", ПараметрыФормы, ЭтотОбъект,,,, Обработчик, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбранныхПредприятийЗавершениеВыбора(РезультатВыбора, ПараметрыОбработчика) Экспорт
	
	Если ТипЗнч(РезультатВыбора) <> Тип("СписокЗначений") Тогда
		Возврат;
	КонецЕсли;
	
	СписокПредприятий = РезультатВыбора;
	
	Элементы.ОткрытьСписокВыбранныхПредприятий.Заголовок = СтрСоединить(РезультатВыбора.ВыгрузитьЗначения(), ";");
КонецПроцедуры

#КонецОбласти