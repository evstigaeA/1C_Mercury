#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Документ = Неопределено Тогда
		ВызватьИсключение НСтр("ru='Предусмотрено открытие обработки только из документов.'");
	КонецЕсли;
	
	ИнициализацияФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если ПеренестиВДокумент Тогда
		АдресПродукцииВХранилище = АдресПродукцииВХранилище(ЭтаФорма.ВладелецФормы.УникальныйИдентификатор);
	Иначе
		АдресПродукцииВХранилище = Неопределено;
	КонецЕсли;
	
	Если АдресПродукцииВХранилище <> Неопределено Тогда
		ОповеститьОВыборе(АдресПродукцииВХранилище);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПродукцииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.СписокПродукции.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	СтруктураСтроки = Новый Структура("ЗаписьСкладскогоЖурнала");
	ЗаполнитьЗначенияСвойств(СтруктураСтроки, ТекущиеДанные);
	
	ОбработатьВыборЗначения(СтруктураСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПродукцииПриАктивизацииСтроки(Элемент)
	
	УстановитьОтбораНаВетеринарныеМероприятия();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПродукцииПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ИерархияПродукцииПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ИерархияПродукции.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураОтбора = Новый Структура("ТипПродукции, ВидПродукции, ПодвидПродукции");
	
	ЗаполнитьЗначенияСвойств(СтруктураОтбора, ТекущиеДанные);
	
	Для Каждого ТекЭлемент Из СтруктураОтбора Цикл
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокПродукции, ТекЭлемент.Ключ,
				ТекЭлемент.Значение, ВидСравненияКомпоновкиДанных.Равно, Строка(ТипЗнч(ТекЭлемент.Значение)), ЗначениеЗаполнено(ТекЭлемент.Значение));
	КонецЦикла;

	УстановитьОтбораНаВетеринарныеМероприятия();
	
КонецПроцедуры

&НаКлиенте
Процедура ИерархияПродукцииПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтбораНаВетеринарныеМероприятия()
	
	ТекущиеДанные = Элементы.СписокПродукции.ТекущиеДанные;
	
	ТекущаяЗапись = Неопределено;
	Если Не ТекущиеДанные = Неопределено Тогда
		ТекущаяЗапись = ТекущиеДанные.ЗаписьСкладскогоЖурнала;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокЛабораторныеИсследования, "ЗаписьСкладскогоЖурнала", ТекущаяЗапись);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокСведенияОбИммунизации, "ЗаписьСкладскогоЖурнала", ТекущаяЗапись);
	
КонецПроцедуры

&НаКлиенте
Процедура ИерархияПродукцииПередРазворачиванием(Элемент, Строка, Отказ)
	
	Если Строка.ИмяГруппировки = "ПодвидПродукции" Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ТаблицаПодобраннаяПродукция

&НаКлиенте
Процедура ПодобраннаяПродукцияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодобраннаяПродукцияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ПодобраннаяПродукция.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Поле.Имя = "ПодобраннаяПродукцияЗаписьСкладскогоЖурнала" Тогда
		
		ПоказатьЗначение(, ТекущиеДанные.ЗаписьСкладскогоЖурнала);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	
	ПеренестиВДокумент = Истина;
	Закрыть(КодВозвратаДиалога.OK);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИнициализацияФормы()
	
	Параметры.Свойство("Организация"   , Организация);
	Параметры.Свойство("Предприятие"   , Предприятие);
	Параметры.Свойство("ТолькоПросмотр", ТолькоПросмотр);
	
	МассивРазрешенныхСтатусов = ИнтеграцияВетисAPIСлужебныйПовтИсп.РазрешенныеСтатусыЗаписейСкладскогоЖурналаДляВыполненияОпераций();
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокПродукции,   "Организация", Организация);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокПродукции,   "Предприятие", Предприятие);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокПродукции,   "МассивРазрешенныхСтатусов", МассивРазрешенныхСтатусов);
		
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ИерархияПродукции, "Организация", Организация);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ИерархияПродукции, "Предприятие", Предприятие);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ИерархияПродукции, "МассивРазрешенныхСтатусов", МассивРазрешенныхСтатусов);
	
	Если ЗначениеЗаполнено(Параметры.Заголовок) Тогда
		ЭтаФорма.АвтоЗаголовок = Ложь;
		ЭтаФорма.Заголовок     = Параметры.Заголовок;
	КонецЕсли;
	
	Элементы.ПодобраннаяПродукция.ТолькоПросмотр = ТолькоПросмотр;
	
	ТаблицаПродукции = ПолучитьИзВременногоХранилища(Параметры.АдресХраненияДанных);
	Для Каждого ТекПродукция Из ТаблицаПродукции Цикл
		НоваяСтрока = ПодобраннаяПродукция.Добавить();
		НоваяСтрока.ЗаписьСкладскогоЖурнала = ТекПродукция.ЗаписьСкладскогоЖурнала;
		НоваяСтрока.ЭтоСтрокаИзДокумента = Истина;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборЗначения(СтруктураСтроки)

	СтруктураПоиска = Новый Структура("ЗаписьСкладскогоЖурнала", СтруктураСтроки.ЗаписьСкладскогоЖурнала);
	
	НайденныеСтроки = ПодобраннаяПродукция.НайтиСтроки(СтруктураПоиска);
	
	Если НайденныеСтроки.Количество() = 0 Тогда
		
		ТекущаяСтрока = ПодобраннаяПродукция.Добавить();
		ТекущаяСтрока.ЗаписьСкладскогоЖурнала = СтруктураСтроки.ЗаписьСкладскогоЖурнала;
		
		Элементы.ПодобраннаяПродукция.ТекущаяСтрока = ТекущаяСтрока.ПолучитьИдентификатор();
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция АдресПродукцииВХранилище(УникальныйИдентификаторВладельца)
	
	АдресВХранилище = Неопределено;
	
	Если ПеренестиВДокумент Тогда
		
		СтруктураДанных = СтруктураДанныхПодбора();
		
		АдресВХранилище = ПоместитьВоВременноеХранилище(СтруктураДанных, УникальныйИдентификаторВладельца);
	
	КонецЕсли;
	
	Возврат АдресВХранилище;
КонецФункции

&НаСервере
Функция СтруктураДанныхПодбора()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаЗаписей.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
		|	ТаблицаЗаписей.ЭтоСтрокаИзДокумента КАК ЭтоСтрокаИзДокумента
		|ПОМЕСТИТЬ ВТ_ТаблицаЗаписей
		|ИЗ
		|	&ТаблицаЗаписей КАК ТаблицаЗаписей
		|ГДЕ
		|	НЕ ТаблицаЗаписей.ЭтоСтрокаИзДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТаблицаЗаписей.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала
		|ПОМЕСТИТЬ ВТ_ТаблицаПродукции
		|ИЗ
		|	ВТ_ТаблицаЗаписей КАК ВТ_ТаблицаЗаписей
		|ГДЕ
		|	НЕ ВТ_ТаблицаЗаписей.ЭтоСтрокаИзДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТаблицаПродукции.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала
		|ИЗ
		|	ВТ_ТаблицаПродукции КАК ВТ_ТаблицаПродукции
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЛабораторныеИсследования.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
		|	ЛабораторныеИсследования.ИдентификаторСобытия КАК ИдентификаторСобытия,
		|	ЛабораторныеИсследования.ДатаПолученияРезультата КАК ДатаПолученияРезультата,
		|	ЛабораторныеИсследования.МетодИсследования КАК МетодИсследования,
		|	ЛабораторныеИсследования.ПоказательБолезни КАК ПоказательБолезни,
		|	ЛабораторныеИсследования.НомерЭкспертизы КАК НомерЭкспертизы,
		|	ЛабораторныеИсследования.ОрганизацияОператор КАК ОрганизацияОператор,
		|	ЛабораторныеИсследования.ПоказательБезопасности КАК ПоказательБезопасности,
		|	ЛабораторныеИсследования.РезультатИсследования КАК РезультатИсследования,
		|	ЛабораторныеИсследования.ТипМероприятия КАК ТипМероприятия,
		|	ЛабораторныеИсследования.ДополнительныеСведения КАК ДополнительныеСведения,
		|	ЛабораторныеИсследования.Заключение КАК Заключение
		|ИЗ
		|	РегистрСведений.ЛабораторныеИсследования КАК ЛабораторныеИсследования
		|ГДЕ
		|	ЛабораторныеИсследования.ЗаписьСкладскогоЖурнала В
		|			(ВЫБРАТЬ
		|				ВТ_ТаблицаПродукции.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала
		|			ИЗ
		|				ВТ_ТаблицаПродукции КАК ВТ_ТаблицаПродукции)
		|	И ЛабораторныеИсследования.РезультатИсследования = ЗНАЧЕНИЕ(Справочник.РезультатыЛабораторногоИсследования.РезультатНеизвестен)
		|	И ЛабораторныеИсследования.ИдентификаторСобытия <> """"
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СведенияОбИммунизации.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
		|	СведенияОбИммунизации.ИдентификаторСобытия КАК ИдентификаторСобытия,
		|	СведенияОбИммунизации.ДатаСобытия КАК ДатаСобытия,
		|	СведенияОбИммунизации.Препарат КАК Препарат,
		|	СведенияОбИммунизации.СерияПрепарата КАК СерияПрепарата,
		|	СведенияОбИммунизации.ТипМероприятия КАК ТипМероприятия
		|ИЗ
		|	РегистрСведений.СведенияОбИммунизации КАК СведенияОбИммунизации
		|ГДЕ
		|	СведенияОбИммунизации.ЗаписьСкладскогоЖурнала В
		|			(ВЫБРАТЬ
		|				ВТ_ТаблицаПродукции.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала
		|			ИЗ
		|				ВТ_ТаблицаПродукции КАК ВТ_ТаблицаПродукции)
		|	И НЕ СведенияОбИммунизации.ИдентификаторСгенерированУВС
		|	И СведенияОбИммунизации.ИдентификаторСобытия <> """"";
	
	Запрос.УстановитьПараметр("ТаблицаЗаписей", ПодобраннаяПродукция.Выгрузить());
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("Продукция"               , РезультатЗапроса[2].Выгрузить());
	СтруктураДанных.Вставить("ЛабораторныеИсследования", РезультатЗапроса[3].Выгрузить());
	СтруктураДанных.Вставить("Иммунизация"             , РезультатЗапроса[4].Выгрузить());
	
	Возврат СтруктураДанных;
КонецФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	Элемент = СписокЛабораторныеИсследования.УсловноеОформление.Элементы.Добавить();
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("РезультатИсследования");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Справочники.РезультатыЛабораторногоИсследования.РезультатНеизвестен;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветОсобогоТекста);
	
	ИнтеграцияВетисAPIСервер.УстановитьУсловноеОформлениеФорматовДат(СписокПродукции);
	
КонецПроцедуры

#КонецОбласти