#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если НЕ Параметры.ПрограммноеОткрытие Тогда
		ВызватьИсключение НСтр("ru = 'Обработка не предназначена для непосредственного использования.'");
	КонецЕсли;
	
	Обработки.ЗагрузкаДанныхИзВнешнихФайлов.ЗаполнитьШаблоныДанных(Параметры.Сценарий, ИнформацияПоКолонкам, ШаблонСДанными);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗагрузитьИзФайла(Команда)
	
	ИмяФайла = "";
	
	ЭтотОбъект.КлючУникальности = Новый УникальныйИдентификатор();
	
	Оповещение = Новый ОписаниеОповещения("ЗагрузитьДанныеИзФайла", ЭтотОбъект);
	ЗагрузкаДанныхИзФайлаКлиент.ДиалогЗагрузкиФайла(Оповещение, ИмяФайла);

КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьШаблонВФайл(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ВыгрузитьШаблонВФайлЗавершение", ЭтотОбъект);
	НачатьПодключениеРасширенияРаботыСФайлами(Оповещение);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыгрузитьШаблонВФайлЗавершение(Подключено, ДополнительныеПараметры) Экспорт
	
	Если Подключено Тогда
		Оповещение = Новый ОписаниеОповещения("ПослеВыбораФайлаДляСохранения", ЭтотОбъект);
		ИмяФайла = НСтр("ru = 'Шаблон файла для загрузки'");
		ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
		ДиалогВыбораФайла.Фильтр                      = НСтр("ru='Книга Excel 97 (*.xls)|*.xls|Книга Excel 2007 (*.xlsx)|*.xlsx|Электронная таблица OpenDocument (*.ods)|*.ods|Текстовый документ c разделителями (*.csv)|*.csv|Табличный документ (*.mxl)|*.mxl'");
		ДиалогВыбораФайла.Расширение                  = "xls";
		ДиалогВыбораФайла.МножественныйВыбор = Ложь;
		ДиалогВыбораФайла.ИндексФильтра               = 0;
		ДиалогВыбораФайла.ПолноеИмяФайла = ИмяФайла;
		ДиалогВыбораФайла.Показать(Оповещение);
	Иначе
		Оповещение = Новый ОписаниеОповещения("ПослеВыбораРасширенияФайла", ЭтотОбъект);
		ОткрытьФорму("Обработка.ЗагрузкаДанныхИзФайла.Форма.РасширениеФайла",, ЭтотОбъект, Истина,,, Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьРезультатОперации(РезультатВыполненияОперации)
	
	МассивЗначений = РезультатВыполненияОперации.МассивЗначений;
	МассивОшибок   = РезультатВыполненияОперации.МассивОшибок;
	
	Если МассивЗначений.Количество() = 0 И МассивОшибок.Количество() = 0 Тогда
		
		ПоказатьПредупреждение(, (НСтр("ru ='Невозможно выполнить загрузку данных.
			|Возможно, имена колонок в файле не соответствуют колонкам в бланке.'")));
		
	ИначеЕсли МассивОшибок.Количество() > 0 Тогда
		
		ТекстВсехОшибок = Новый ТекстовыйДокумент;
		ТекстВсехОшибок.ДобавитьСтроку(НСтр("ru = 'Загрузка данных из файла завершена с ошибками:'"));
		Для Каждого ТекстЭтойОшибки Из МассивОшибок Цикл
			ТекстВсехОшибок.ДобавитьСтроку("");
			ТекстВсехОшибок.ДобавитьСтроку(ТекстЭтойОшибки);
		КонецЦикла;
		ТекстВсехОшибок.Показать(НСтр("ru = 'Отчет об ошибках.'"));
		
	КонецЕсли;
	
	Если МассивЗначений.Количество() > 0 Тогда
		
		Закрыть(МассивЗначений);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьТаблицуВCSVФайл(ПолноеИмяФайла)
	Обработки.ЗагрузкаДанныхИзВнешнихФайлов.СохранитьТаблицуВCSVФайл(ПолноеИмяФайла, ИнформацияПоКолонкам);
КонецПроцедуры

#Область ДлительныеОперации

&НаКлиенте
Процедура ВывестиСообщениеОбОшибке(ТекстОшибкиДляПользователя, ТехническаяИнформация)
	ТекстСообщенияОбОшибке = ТекстОшибкиДляПользователя + Символы.ПС
		+ НСтр("ru = 'Возможная причина: Загружаемые данные некорректные.
					|Техническая информация: %1'");
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрШаблон(ТекстСообщенияОбОшибке, ТехническаяИнформация));
КонецПроцедуры

#КонецОбласти

////////////////////// Работа с файлами //////////////////////

&НаКлиенте
Процедура ПослеВыбораФайлаДляСохранения(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		ПутьКФайлу = Результат[0];
		ВыбранныйФайл = ОбщегоНазначенияКлиентСервер.РазложитьПолноеИмяФайла(ПутьКФайлу);
		РасширениеФайла = ОбщегоНазначенияКлиентСервер.РасширениеБезТочки(ВыбранныйФайл.Расширение);
		
		Если ЗначениеЗаполнено(ВыбранныйФайл.Имя) Тогда
			Если РасширениеФайла = "csv" Тогда
				СохранитьТаблицуВCSVФайл(ПутьКФайлу);
			Иначе
				Если РасширениеФайла = "xlsx" Тогда
					ТипФайла = ТипФайлаТабличногоДокумента.XLSX;
				ИначеЕсли РасширениеФайла = "mxl" Тогда
					ТипФайла = ТипФайлаТабличногоДокумента.MXL;
				ИначеЕсли РасширениеФайла = "xls" Тогда
					ТипФайла = ТипФайлаТабличногоДокумента.XLS;
				ИначеЕсли РасширениеФайла = "ods" Тогда
					ТипФайла = ТипФайлаТабличногоДокумента.ODS;
				Иначе
					ПоказатьПредупреждение(, НСтр("ru = 'Шаблон файла не был сохранен.'"));
					Возврат;
				КонецЕсли;
				Оповещение = Новый ОписаниеОповещения("ПослеЗаписиТабличногоДокументаВФайл", ЭтотОбъект);
				ШаблонСДанными.НачатьЗапись(Оповещение, ПутьКФайлу, ТипФайла);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписиТабличногоДокументаВФайл(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = Ложь Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Шаблон файла не был сохранен.'"));
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьДанныеИзФайла(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		ИмяФайла                 = Результат[0].Имя;
		АдресВременногоХранилища = Результат[0].Хранение;
		Расширение = ОбщегоНазначенияКлиентСервер.РасширениеБезТочки(ОбщегоНазначенияКлиентСервер.ПолучитьРасширениеИмениФайла(ИмяФайла));
	
		ФоновоеЗадание = ЗагрузитьФайлСДаннымиНаСервере(АдресВременногоХранилища, Расширение);
		НастройкиОжидания                                = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		НастройкиОжидания.ВыводитьОкноОжидания           = Ложь;
		НастройкиОжидания.ОповещениеОПрогрессеВыполнения = Новый ОписаниеОповещения("ПрогрессВыполнения", ЭтотОбъект);
		Обработчик = Новый ОписаниеОповещения("ПослеЗагрузкиФайлаСДанными", ЭтотОбъект);
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ФоновоеЗадание, Обработчик, НастройкиОжидания);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораРасширенияФайла(Результат, Параметр) Экспорт
	Если ЗначениеЗаполнено(Результат) Тогда
		АдресВоВременномХранилище = ЭтотОбъект.УникальныйИдентификатор;
		СохранитьШаблонВоВременноеХранилище(Результат, АдресВоВременномХранилище);
		ПолучитьФайл(АдресВоВременномХранилище, НСтр("ru = 'Шаблон файла для загрузки'") + "." + Результат, Истина);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СохранитьШаблонВоВременноеХранилище(РасширениеФайла, АдресВоВременномХранилище)
	
	ИмяФайла = ПолучитьИмяВременногоФайла(РасширениеФайла);
	Если РасширениеФайла = "csv" Тогда 
		//СохранитьТаблицуВCSVФайл(ИмяФайла);
	ИначеЕсли РасширениеФайла = "xlsx" Тогда
		ШаблонСДанными.Записать(ИмяФайла, ТипФайлаТабличногоДокумента.XLSX);
	ИначеЕсли РасширениеФайла = "xls" Тогда
		ШаблонСДанными.Записать(ИмяФайла, ТипФайлаТабличногоДокумента.XLS);
	ИначеЕсли РасширениеФайла = "ods" Тогда
		ШаблонСДанными.Записать(ИмяФайла, ТипФайлаТабличногоДокумента.ODS);
	Иначе 
		ШаблонСДанными.Записать(ИмяФайла, ТипФайлаТабличногоДокумента.MXL);
	КонецЕсли;
	ДвоичныеДанные = Новый ДвоичныеДанные(ИмяФайла);
	
	АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанные, АдресВоВременномХранилище);
	
	ЗагрузкаДанныхИзФайла.УдалитьВременныйФайл(ИмяФайла);
	
КонецПроцедуры

#КонецОбласти

#Область ФоновыеЗадания

// Фоновая загрузка файла с данными

&НаСервере
Функция ЗагрузитьФайлСДаннымиНаСервере(АдресВременногоХранилища, Расширение)
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла(Расширение);
	ДвоичныеДанные = ПолучитьИЗВременногоХранилища(АдресВременногоХранилища);
	ДвоичныеДанные.Записать(ИмяВременногоФайла);
	
	ПараметрыВызоваСервера = Новый Структура();
	ПараметрыВызоваСервера.Вставить("Расширение", Расширение);
	ПараметрыВызоваСервера.Вставить("ИмяВременногоФайла", ИмяВременногоФайла);
	ПараметрыВызоваСервера.Вставить("ИнформацияПоКолонкам", РеквизитФормыВЗначение("ИнформацияПоКолонкам"));
	
	ПараметрыВыполненияВФоне = ДлительныеОперации.ПараметрыВыполненияВФоне(ЭтотОбъект.УникальныйИдентификатор);
	ПараметрыВыполненияВФоне.НаименованиеФоновогоЗадания = НСтр("ru = 'Подсистема ЗагрузкаДанныхИзФайла: Выполнение серверного метода загрузка данных из файла'");
	
	ФоновоеЗадание = ДлительныеОперации.ВыполнитьВФоне("Обработки.ЗагрузкаДанныхИзВнешнихФайлов.ЗагрузитьФайлВМассив",
		ПараметрыВызоваСервера, ПараметрыВыполненияВФоне);
	
	Возврат ФоновоеЗадание;
	
КонецФункции

&НаКлиенте
Процедура ПослеЗагрузкиФайлаСДанными(ФоновоеЗадание, ДополнительныеПараметры) Экспорт

	Если ФоновоеЗадание.Статус = "Выполнено" Тогда
		РезультатВыполненияОперации = ПолучитьИзВременногоХранилища(ФоновоеЗадание.АдресРезультата);
		ОбработатьРезультатОперации(РезультатВыполненияОперации);
	Иначе
		ВывестиСообщениеОбОшибке(НСтр("ru = 'Не удалось произвести загрузку данных.'"), ФоновоеЗадание.КраткоеПредставлениеОшибки);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПрогрессВыполнения(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат.Статус = "Выполняется" Тогда
		Прогресс = ПрочитатьПрогресс(Результат.ИдентификаторЗадания);
		Если Прогресс <> Неопределено Тогда
			ФоновоеЗаданиеПроцент = Прогресс.Процент;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПрочитатьПрогресс(ИдентификаторЗадания)
	Возврат ДлительныеОперации.ПрочитатьПрогресс(ИдентификаторЗадания);
КонецФункции

#КонецОбласти