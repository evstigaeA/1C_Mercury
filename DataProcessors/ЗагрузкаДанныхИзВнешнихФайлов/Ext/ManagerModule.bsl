#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Процедура ЗаполнитьШаблоныДанных(Сценарий, ИнформацияПоКолонкам, ШаблонСДанными) Экспорт
	
	Если Сценарий = "ЗагрузкаИдентификаторовВСД" Тогда
		
		НоваяСтрока = ИнформацияПоКолонкам.Добавить();
		НоваяСтрока.ИмяКолонки = "Идентификатор";
		НоваяСтрока.ПредставлениеКолонки = "Идентификатор (GUID)";
		НоваяСтрока.Синоним = "Идентификатор";
		НоваяСтрока.ТипКолонки = ОбщегоНазначения.ОписаниеТипаСтрока(39);//Может прийти в таком виде XXXX-XXXX-XXXX-XXXX-XXXX-XXXX-XXXX-XXXX
		НоваяСтрока.ОбязательнаДляЗаполнения = Истина;
		
	ИначеЕсли Сценарий = "ЗагрузкаИдентификаторов" Тогда
		
		НоваяСтрока = ИнформацияПоКолонкам.Добавить();
		НоваяСтрока.ИмяКолонки = "Идентификатор";
		НоваяСтрока.ПредставлениеКолонки = "Идентификатор (GUID)";
		НоваяСтрока.Синоним = "Идентификатор";
		НоваяСтрока.ТипКолонки = ОбщегоНазначения.ОписаниеТипаСтрока(36);
		НоваяСтрока.ОбязательнаДляЗаполнения = Истина;
		
	ИначеЕсли Сценарий = "ЗагрузкаGLN" Тогда
		
		НоваяСтрока = ИнформацияПоКолонкам.Добавить();
		НоваяСтрока.ИмяКолонки = "GLN";
		НоваяСтрока.ПредставлениеКолонки = "GLN";
		НоваяСтрока.Синоним = "GLN";
		НоваяСтрока.ТипКолонки = ОбщегоНазначения.ОписаниеТипаСтрока(13);
		НоваяСтрока.ОбязательнаДляЗаполнения = Истина;
		
	КонецЕсли;

	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ОбластьЗаголовок = ПолучитьМакет("ПримерШаблона").ПолучитьОбласть("Заголовок");
	
	Для Позиция = 0 По ИнформацияПоКолонкам.Количество() -1 Цикл
		Колонка = ИнформацияПоКолонкам.Получить(Позиция);
		ОбластьИмяКолонки = ОбластьЗаголовок.Область(1, 1, 1, 1);
		ОбластьИмяКолонки.Имя = Колонка.ИмяКолонки;
		ОбластьИмяКолонки.Шрифт = ?(Колонка.ОбязательнаДляЗаполнения, Новый Шрифт(,, Истина), Новый Шрифт(,, Ложь));
		ОбластьЗаголовок.Параметры.Заголовок = ?(ПустаяСтрока(Колонка.Синоним), Колонка.ПредставлениеКолонки, Колонка.Синоним);
		ТабличныйДокумент.Присоединить(ОбластьЗаголовок);
	КонецЦикла;
	
	ШаблонСДанными = ТабличныйДокумент;
	
КонецПроцедуры

#Область СлужебныеФункции

Процедура ИнициализироватьКолонки(ИнформацияПоКолонкам, ШаблонСДанными, ВысотаШапки = 1)
	
	Для каждого Строка Из ИнформацияПоКолонкам Цикл
		Строка.Позиция = -1;
	КонецЦикла;
	
	Для НомерКолонки = 1 По ШаблонСДанными.ШиринаТаблицы Цикл
		ЯчейкаЗаголовок = ШаблонСДанными.ПолучитьОбласть(ВысотаШапки, НомерКолонки, ВысотаШапки, НомерКолонки).ТекущаяОбласть;
		
		Если ЗначениеЗаполнено(ЯчейкаЗаголовок.Текст) Тогда
			Отбор = Новый Структура("Синоним", СокрЛП(ЯчейкаЗаголовок.Текст));
			НайденныеКолонка = ИнформацияПоКолонкам.НайтиСтроки(Отбор);
			Если НайденныеКолонка.Количество() > 0 Тогда
				НайденныеКолонка[0].Позиция = НомерКолонки;
			Иначе
				Отбор = Новый Структура("ПредставлениеКолонки",  СокрЛП(ЯчейкаЗаголовок.Текст));
				НайденныеКолонка = ИнформацияПоКолонкам.НайтиСтроки(Отбор);
				Если НайденныеКолонка.Количество() > 0 Тогда
					НайденныеКолонка[0].Позиция = НомерКолонки;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗагрузитьФайлВМассив(ПараметрыВызоваСервера, АдресХранилища) Экспорт
	
	Расширение = ПараметрыВызоваСервера.Расширение;
	ИмяВременногоФайла = ПараметрыВызоваСервера.ИмяВременногоФайла;
	ИнформацияПоКолонкам = ПараметрыВызоваСервера.ИнформацияПоКолонкам;
	
	Если Расширение = "csv" Тогда
		
		ЗагруженныеДанные = Новый Структура;
		ЗагруженныеДанные.Вставить("МассивЗначений", Новый Массив);
		ЗагруженныеДанные.Вставить("МассивОшибок"  , Новый Массив);
		ЗагрузитьCSVФайлВМассив(ИмяВременногоФайла, ИнформацияПоКолонкам, ЗагруженныеДанные);
		
	Иначе
		ЗагруженныйШаблонСДанными = Новый ТабличныйДокумент;
		ЗагруженныйШаблонСДанными.Прочитать(ИмяВременногоФайла);
		
		Адрес = "";
		ТабличныйДокументВМассив(ЗагруженныйШаблонСДанными, ИнформацияПоКолонкам, Адрес);
		ЗагруженныеДанные = ПолучитьИзВременногоХранилища(Адрес);
		
	КонецЕсли;
	
	АдресХранилища = ПоместитьВоВременноеХранилище(ЗагруженныеДанные, АдресХранилища);
	
	ЗагрузкаДанныхИзФайла.УдалитьВременныйФайл(ИмяВременногоФайла);
	
КонецПроцедуры

#Область РаботаСCSVФайлами

Процедура ЗагрузитьCSVФайлВМассив(ИмяФайла, ИнформацияПоКолонкам, ЗагруженныеДанные)
	
	Файл = Новый Файл(ИмяФайла);
	Если НЕ Файл.Существует() Тогда 
		Возврат;
	КонецЕсли;
	
	ЧтениеТекста = Новый ЧтениеТекста(ИмяФайла);
	Строка = ЧтениеТекста.ПрочитатьСтроку();
	Если Строка = Неопределено Тогда 
		ТекстСообщения = НСтр("ru = 'Не получилось загрузить данные из этого файла. Убедитесь в корректности данных в файле.'");
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	МассивЗначений = ЗагруженныеДанные.МассивЗначений;
	МассивОшибок   = ЗагруженныеДанные.МассивОшибок;
	
	КолонкиШапки = СтрРазделить(Строка, ";", Ложь);
	ПозицияКолонкиВФайле = Новый Соответствие();
	
	Позиция = 1;
	Для каждого Колонка Из КолонкиШапки Цикл
		НайденнаяКолонка = НайтиИнформациюОКолонке(ИнформацияПоКолонкам, "Синоним", Колонка);
		Если НайденнаяКолонка = Неопределено Тогда
			НайденнаяКолонка = НайтиИнформациюОКолонке(ИнформацияПоКолонкам, "ПредставлениеКолонки", Колонка);
		КонецЕсли;
		Если НайденнаяКолонка <> Неопределено Тогда
			ПозицияКолонкиВФайле.Вставить(Позиция, НайденнаяКолонка.ИмяКолонки);
			Позиция = Позиция + 1;
		КонецЕсли;
	КонецЦикла;
	
	Если Позиция = 1 Тогда
		МассивОшибок.Добавить(НСтр("ru = 'Не получилось загрузить данные из этого файла. Убедитесь в корректности данных в файле.'"));
		Возврат;
	КонецЕсли;
	
	КоличествоКолонок = Позиция - 1;
	
	Строка = ЧтениеТекста.ПрочитатьСтроку();//Первой строкой должна быть строка с наименвоание колонки, необходимо пропустить
	Пока Строка <> Неопределено Цикл
			
		Позиция = СтрНайти(Строка, ";");
		Индекс = 0;
		Пока Позиция > 0 Цикл
			Если КоличествоКолонок < Индекс + 1 Тогда
				Прервать;
			КонецЕсли;
			ИмяКолонки = ПозицияКолонкиВФайле.Получить(Индекс + 1);
			Если ИмяКолонки <> Неопределено Тогда
				МассивЗначений.Добавить(Лев(Строка, Позиция - 1));
			КонецЕсли;
			Строка = Сред(Строка, Позиция + 1);
			Позиция = СтрНайти(Строка, ";");
			Индекс = Индекс + 1;
		КонецЦикла;
		
		Если КоличествоКолонок = Индекс + 1 Тогда
			МассивЗначений.Добавить(Строка);
		КонецЕсли;
		
		Строка = ЧтениеТекста.ПрочитатьСтроку();
	КонецЦикла;
	
КонецПроцедуры

Процедура СохранитьТаблицуВCSVФайл(ПутьКФайлу, ИнформацияПоКолонкам) Экспорт
	
	ФорматЗаголовкаДляCSV = "";
	
	Для каждого Колонка Из ИнформацияПоКолонкам Цикл 
		ФорматЗаголовкаДляCSV = ФорматЗаголовкаДляCSV + Колонка.ПредставлениеКолонки + ";";
	КонецЦикла;
	
	Если СтрДлина(ФорматЗаголовкаДляCSV) > 0 Тогда
		ФорматЗаголовкаДляCSV = Лев(ФорматЗаголовкаДляCSV, СтрДлина(ФорматЗаголовкаДляCSV)-1);
	КонецЕсли;
	
	Файл = Новый ЗаписьТекста(ПутьКФайлу);
	Файл.ЗаписатьСтроку(ФорматЗаголовкаДляCSV);
	Файл.Закрыть();
	
КонецПроцедуры

#КонецОбласти

// Создает таблицу значений по данным из шаблона и сохраняет ее во временное хранилище.
//
Процедура ТабличныйДокументВМассив(ШаблонСДанными, ИнформацияПоКолонкам, АдресЗагруженныхДанных) Экспорт
	
	ОписаниеТипаЧисло  = Новый ОписаниеТипов("Число");
	ОписаниеТипаСтрока = Новый ОписаниеТипов("Строка");
	МассивЗначений     = Новый Массив;
	МассивОшибок       = Новый Массив;
	
	ТаблицаИнформацияПоКолонкам = ИнформацияПоКолонкам.Скопировать();
	
	ИнициализироватьКолонки(ТаблицаИнформацияПоКолонкам, ШаблонСДанными);
	
	Для НомерСтроки = 2 По ШаблонСДанными.ВысотаТаблицы Цикл
		СтрокаТаблицыПустая = Истина;
		Для НомерКолонки = 1 По ШаблонСДанными.ШиринаТаблицы Цикл
			Ячейка = ШаблонСДанными.ПолучитьОбласть(НомерСтроки, НомерКолонки, НомерСтроки, НомерКолонки).ТекущаяОбласть;
			
			НайденнаяКолонка = НайтиИнформациюОКолонке(ТаблицаИнформацияПоКолонкам, "Позиция", НомерКолонки);
			Если НайденнаяКолонка <> Неопределено Тогда
				ИмяКолонки = НайденнаяКолонка.ИмяКолонки;
				
				ТекстОшибки    = "";
				ОписаниеОшибки = НСтр("ru = 'В строке файла %1 допущена ошибка: %2. Строка будет пропущена.'");
				
				Значение = ПриведениеЗначениеКТипу(Ячейка.Текст, НайденнаяКолонка.ТипКолонки, ТекстОшибки);
				
				Если ЗначениеЗаполнено(ТекстОшибки) Тогда
					
					МассивОшибок.Добавить(
						СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							ОписаниеОшибки, НомерСтроки, ТекстОшибки));
							
				ИначеЕсли ЗначениеЗаполнено(Значение) Тогда
					МассивЗначений.Добавить(Значение);
					
				ИначеЕсли НайденнаяКолонка.ОбязательнаДляЗаполнения Тогда
					
					МассивОшибок.Добавить(
						СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							ОписаниеОшибки, НомерСтроки, "не указано значение"));
							
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	СтруктураРезультата = Новый Структура;
	СтруктураРезультата.Вставить("МассивЗначений", МассивЗначений);
	СтруктураРезультата.Вставить("МассивОшибок", МассивОшибок);
	
	АдресЗагруженныхДанных = ПоместитьВоВременноеХранилище(СтруктураРезультата);
КонецПроцедуры

Функция ПриведениеЗначениеКТипу(Значение, ОписаниеТипов, ТекстОшибки)
	
	Для каждого Тип Из ОписаниеТипов.Типы() Цикл
		Если Тип = Тип("Дата") Тогда
			Возврат СтроковыеФункцииКлиентСервер.СтрокаВДату(Значение);
		ИначеЕсли Тип = Тип("Число") Тогда
			ОписаниеТипаЧисло = Новый ОписаниеТипов("Число");
			Возврат ОписаниеТипаЧисло.ПривестиЗначение(Значение);
		ИначеЕсли Тип = Тип("Строка") Тогда
			Если СтрДлина(Значение) <> ОписаниеТипов.КвалификаторыСтроки.Длина Тогда
				ТекстОшибки = СтрЗаменить(НСтр("ru = 'Длина не соответствует установленной. Необходимая длина %1'"), "%1", ОписаниеТипов.КвалификаторыСтроки.Длина);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Значение;
	
КонецФункции

Функция НайтиИнформациюОКолонке(ТаблицаИнформацияПоКолонкам, ИмяКолонки, Значение)
	
	Отбор = Новый Структура(ИмяКолонки, Значение);
	НайденныеКолонки = ТаблицаИнформацияПоКолонкам.НайтиСтроки(Отбор);
	Колонка = Неопределено;
	Если НайденныеКолонки.Количество() > 0 Тогда 
		Колонка = НайденныеКолонки[0];
	КонецЕсли;
	
	Возврат Колонка;
КонецФункции

#КонецОбласти

#КонецЕсли