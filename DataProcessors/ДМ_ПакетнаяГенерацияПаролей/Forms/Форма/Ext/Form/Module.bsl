
&НаКлиенте
Процедура СнятьВсе(Команда)
	
	Для Каждого лСтрока Из ТаблицаПользователей Цикл
		лСтрока.Выбран = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВсе(Команда)
	
	Для Каждого лСтрока Из ТаблицаПользователей Цикл
		лСтрока.Выбран = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Подбор(Команда)
	
	лСтруктура = Новый Структура("РежимВыбора,ЗакрыватьПриВыборе",Истина,Ложь);
	лФорма = ПолучитьФорму("Справочник.Пользователи.ФормаСписка",лСтруктура,Элементы.ТаблицаПользователей);
	лФорма.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПользователейОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Пользователи") Тогда
		лСтроки = ТаблицаПользователей.НайтиСтроки(Новый Структура("Пользователь",ВыбранноеЗначение));
		Если лСтроки.Количество() > 0 Тогда //не добавляем уже выбранные значения
			Возврат;
		КонецЕсли;
		лСтрока = ТаблицаПользователей.Добавить();
		лСтрока.Пользователь = ВыбранноеЗначение;
		лСтрока.Выбран = Истина;
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		Для Каждого лЗначение Из ВыбранноеЗначение Цикл
			Если ТипЗнч(лЗначение) = Тип("СправочникСсылка.Пользователи") Тогда
				лСтроки = ТаблицаПользователей.НайтиСтроки(Новый Структура("Пользователь",лЗначение));
				Если лСтроки.Количество() > 0 Тогда //не добавляем уже выбранные значения
					Продолжить;
				КонецЕсли;
				лСтрока = ТаблицаПользователей.Добавить();
				лСтрока.Пользователь = лЗначение;
				лСтрока.Выбран = Истина;
			КонецЕсли;	
		КонецЦикла;
	Иначе	
		//Ничего не делаем
	КонецЕсли;

КонецПроцедуры


&НаКлиенте
Процедура Сгенерировать(Команда)
	
	СгенерироватьНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СгенерироватьНаСервере()
	
	МинимальнаяДлинаПароля = ПолучитьМинимальнуюДлинуПаролейПользователей();
		
	Если МинимальнаяДлинаПароля <= 8 Тогда
		МинимальнаяДлинаПароля = 8;
	КонецЕсли;
	лСтруктураПисьма = Новый Структура();
	лСтруктураПисьма.Вставить("Тема","Изменен пароль от Вашей учетной записи в базе 1С Меркурий");
	лРольПолныеПрава = Метаданные.Роли.АдминистраторСистемы;
	ПараметрыПароля = ПользователиСлужебный.ПараметрыПароля(МинимальнаяДлинаПароля, Истина);
	ГСЧ = Новый ГенераторСлучайныхЧисел();
	Для Каждого лСтрока Из ТаблицаПользователей Цикл
		Если лСтрока.Выбран И Не лСтрока.Сохранен = "ОК" Тогда
			лСтрока.Пароль = ПользователиСлужебный.СоздатьПароль(ПараметрыПароля,ГСЧ);
		КонецЕсли;
		
		лПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(лСтрока.Пользователь.ИдентификаторПользователяИБ);
		Если лПользовательИБ = Неопределено Тогда
			лСтрока.Сохранен = "Не найден пользователь ИБ";
			Продолжить;
		КонецЕсли;
		
		Если лПользовательИБ.Роли.Содержит(лРольПолныеПрава) Тогда
			лСтрока.Пароль = "Администратору нельзя генерировать пароль";
			лСтрока.Сохранен = "Администратору нельзя генерировать пароль";
			Продолжить;
		КонецЕсли;
		
		лСтруктураПисьма.Вставить("Текст","Установлен новый пароль: "+лСтрока.Пароль);
		лСтруктураПисьма.Вставить("Получатель",лСтрока.Пользователь);
		
		Если ОтправитьНаПочту И Не лСтрока.Отправлен = "ОК" Тогда
			ДМ_СлужебныйПривилегированный.ОтправитьУведомлениеНаEmail(лСтруктураПисьма);
			Если лСтруктураПисьма.Свойство("ОписаниеОшибки") Тогда
				лСтрока.Отправлен = лСтруктураПисьма.ОписаниеОшибки;
			Иначе
				лСтрока.Отправлен = "ОК";
			КонецЕсли;
		КонецЕсли;
		
		
		
		лПользовательИБ.Пароль = лСтрока.Пароль;
		Попытка
			лПользовательИБ.Записать();
			лСтрока.Сохранен = "ОК";
		Исключение
			лОшибка = ОписаниеОшибки();
			лСтрока.Сохранен = лОшибка;
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьВXLS(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	СохранитьВXLSПродолжениеНаСервере();
	ТабличныйДокумент.Записать(Объект.ПутьКФайлу,ТипФайлаТабличногоДокумента.XLSX);
	
КонецПроцедуры


&НаСервере
Процедура СохранитьВXLSПродолжениеНаСервере()
	
	ТабличныйДокумент.Очистить();
	лМакет = Обработки.ДМ_ПакетнаяГенерацияПаролей.ПолучитьМакет("Макет");
	лШапка = лМакет.ПолучитьОбласть("ШапкаТЗ");
	лСтрокаОбласть = лМакет.ПолучитьОбласть("СтрокаТЗ");
	
	ТабличныйДокумент.Вывести(лШапка);
	Для Каждого лСтрока Из ТаблицаПользователей Цикл
		ЗаполнитьЗначенияСвойств(лСтрокаОбласть.Параметры,лСтрока);
		ТабличныйДокумент.Вывести(лСтрокаОбласть);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("Пользователи") Тогда
		//заполняем список пользователей из массива
		Для каждого лПользователь Из Параметры.Пользователи Цикл
		
			лНоваяСтрока = ЭтотОбъект.ТаблицаПользователей.Добавить();
			лНоваяСтрока.Пользователь = лПользователь;
			лНоваяСтрока.Выбран = Истина;
		
		КонецЦикла;
		
	КонецЕсли;
	Если Параметры.Свойство("ПутьКФайлу") Тогда
		Объект.ПутьКФайлу = Параметры.ПутьКФайлу;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПутьКФайлуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	#Если ВебКлиент Тогда
		Если Не РаботаСФайламиСлужебныйКлиент.РасширениеРаботыСФайламиПодключено() Тогда
			РаботаСФайламиСлужебныйКлиент.ПоказатьПредупреждениеОНеобходимостиРасширенияРаботыСФайлами(Неопределено);
			Возврат;
		КонецЕсли;
	#КонецЕсли
	
	лОтбор = Новый Структура( "Выбран", Истина );
	лМассив = ТаблицаПользователей.НайтиСтроки( лОтбор );
	Если лМассив.Количество() = 0 Тогда
		лРежимДиалога = РежимДиалогаВыбораФайла.Открытие;
	Иначе
		лРежимДиалога = РежимДиалогаВыбораФайла.Сохранение;
	КонецЕсли;
	Диалог = Новый ДиалогВыбораФайла(лРежимДиалога);
	Диалог.Заголовок = "Выбор файла";
	Диалог.Фильтр = "Excel файлы(*.xls;*.xlsx)|*.xls;*.xlsx";
	Диалог.ИндексФильтра = 0;
	Диалог.ПредварительныйПросмотр = Ложь;
	Диалог.ПроверятьСуществованиеФайла = (лРежимДиалога = РежимДиалогаВыбораФайла.Открытие);
	Диалог.МножественныйВыбор = Ложь;
	Диалог.ПолноеИмяФайла = Объект.ПутьКФайлу;
	
	Диалог.Показать(Новый ОписаниеОповещения("ПутьКФайлуНачалоВыбораЗавершение", ЭтотОбъект, Новый Структура("Диалог", Диалог)));
	
КонецПроцедуры

&НаКлиенте
Процедура ПутьКФайлуНачалоВыбораЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Диалог = ДополнительныеПараметры.Диалог;
	
	Если (ВыбранныеФайлы <> Неопределено) Тогда
		Объект.ПутьКФайлу = Диалог.ПолноеИмяФайла;
	КонецЕсли;

КонецПроцедуры


&НаКлиенте
Процедура ЗагрузитьИзXLS(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Файл = Новый Файл(СокрЛП(Объект.ПутьКФайлу));
	РасширениеФайла =  Файл.Расширение;
	ПолноеИмяФайла = Файл.ПолноеИмя;
		
	Если НЕ ЗначениеЗаполнено(ПолноеИмяФайла) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Вы не выбрали файл для загрузки.'; en = 'You did not select a file to upload.'"),
			,"ПутьКФайлу", "Объект"
		);
		Возврат;
	КонецЕсли;	
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("РасширениеФайла", РасширениеФайла);
	
	//Сохранение файла во временное хранилище.
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьФайлВХранилище", ЭтаФорма, ДополнительныеПараметры);
	НачатьПомещениеФайла(ОписаниеОповещения, , ПолноеИмяФайла, Ложь, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьФайлВХранилище(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
	
	Если Не Результат Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru='Не удалось открыть файл!';en='Could not open file!'"),
			,"ПутьКФайлу");
		Возврат;	
	КонецЕсли; 
	
	ЗагрузитьДанныеИзФайлаНаСервере(Адрес, ДополнительныеПараметры);	
	 
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьДанныеИзФайлаНаСервере(Знач АдресВХранилище,ДополнительныеПараметры)			
			
	ФайлВременногоХранилища = ПолучитьИзВременногоХранилища(АдресВХранилище);	
	лИмяФайла = ПолучитьИмяВременногоФайла(ДополнительныеПараметры.РасширениеФайла);
	ФайлВременногоХранилища.Записать(лИмяФайла);
	УдалитьИзВременногоХранилища(АдресВХранилище);
	
	ТабДокумент = Новый ТабличныйДокумент;
	Попытка
		ТабДокумент.Прочитать(лИмяФайла, СпособЧтенияЗначенийТабличногоДокумента.Значение);    
	Исключение
		лОписаниеОшибки = ОписаниеОшибки();
		Попытка
			УдалитьФайлы(лИмяФайла);
		Исключение
			лОписаниеОшибки = ОписаниеОшибки();
		КонецПопытки;
		ВызватьИсключение;
	КонецПопытки;
	
	Попытка
		УдалитьФайлы(лИмяФайла);
	Исключение
		лОписаниеОшибки = ОписаниеОшибки();
	КонецПопытки;
	
	НачальныйНомерСтроки = 2;
	
	
	УстановитьПривилегированныйРежим( Истина );
	
	лПустойПользователь = Справочники.Пользователи.ПустаяСсылка();
		
	лВысотаТаблицы = ТабДокумент.ВысотаТаблицы;
	Для н = НачальныйНомерСтроки По лВысотаТаблицы Цикл
	
		лИмя = СокрЛП(ТабДокумент.Область( н, 1 ).Текст);
			
		лПользователь = Пользователи.НайтиПоИмени( лИмя );
		Если ЗначениеЗаполнено(лПользователь) Тогда
			лСтруктура = Новый Структура("Пользователь",лПользователь);
			лСтроки = ТаблицаПользователей.НайтиСтроки(лСтруктура);
			Если лСтроки.Количество() = 0 Тогда
				лНоваяСтрока = ЭтотОбъект.ТаблицаПользователей.Добавить();
				лНоваяСтрока.Пользователь = лПользователь;
				лНоваяСтрока.Выбран = Истина;
			Иначе
				Для Каждого лСтрока Из лСтроки Цикл
					лСтрока.Выбран = Истина;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	УстановитьПривилегированныйРежим( Ложь );
	
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьСписокНаСервере()
	
	лЗапрос  = Новый Запрос(
	"ВЫБРАТЬ
	|	Пользователи.Ссылка КАК Ссылка,
	|	Пользователи.ИдентификаторПользователяИБ КАК ИдентификаторПользователяИБ
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|ГДЕ
	|	Пользователи.Недействителен = ЛОЖЬ
	|	И Пользователи.ПометкаУдаления = ЛОЖЬ
	|	И Пользователи.Служебный = ЛОЖЬ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Пользователи.Наименование"
	);
	лРезультат = лЗапрос.Выполнить();
	лВыборка = лРезультат.Выбрать();
	Пока лВыборка.Следующий() Цикл
	
		Если Пользователи.РолиДоступны( "ПолныеПрава,Администрирование,АдминистраторСистемы", лВыборка.Ссылка, Ложь )
			Тогда
		
			Продолжить;
		
		КонецЕсли;
		
		лСвойстваПользователяИБ = Пользователи.СвойстваПользователяИБ( лВыборка.ИдентификаторПользователяИБ );
		Если лСвойстваПользователяИБ = Неопределено
			Или лСвойстваПользователяИБ.АутентификацияОС = Истина
			Тогда
		
			Продолжить;
		
		КонецЕсли;
		
		лСтрока = ТаблицаПользователей.Добавить();
		лСтрока.Пользователь = лВыборка.Ссылка;
		лСтрока.Выбран = Истина;
	
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура ЗаполнитьСписок(Команда)
	ТаблицаПользователей.Очистить();
	ЗаполнитьСписокНаСервере();
КонецПроцедуры


&НаСервере
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Настройки)
	
	Если Параметры.Свойство("ПутьКФайлу") Тогда
		Настройки.Вставить("Объект.ПутьКФайлу", Параметры.ПутьКФайлу);
	КонецЕсли;
	
КонецПроцедуры

