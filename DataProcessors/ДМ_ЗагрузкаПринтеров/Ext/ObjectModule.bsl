
Процедура ЗагрузитьДанныеРегламентнымЗаданием() Экспорт

	Объект = ЭтотОбъект;
	Файл = Новый Файл(СокрЛП(Объект.ИмяФайла));
	Если Не Файл.Существует() Тогда
	
		лТекстСообщения = НСтр("ru = 'Файл для загрузки не найден: %1'");
		лТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку( лТекстСообщения, Объект.ИмяФайла );
		Если Не ПустаяСтрока( Объект.ИмяФайлаПротоколаЗагрузки ) Тогда
			
			лТекстовыйДокумент = Новый ТекстовыйДокумент;
			лТекстовыйДокумент.ДобавитьСтроку( "Начало загрузки принтеров: " + ТекущаяДата() );
			лТекстовыйДокумент.ДобавитьСтроку( лТекстСообщения );
			лТекстовыйДокумент.Записать( Объект.ИмяФайлаПротоколаЗагрузки, КодировкаТекста.UTF8 );
			
		КонецЕсли;
		ВызватьИсключение(лТекстСообщения);
	
	КонецЕсли;
	
	РасширениеФайла =  Файл.Расширение;
	ПолноеИмяФайла = Файл.ПолноеИмя;
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("РасширениеФайла", РасширениеФайла);
	
	лРезультат = ЗагрузитьДанныеИзФайла(Неопределено, ДополнительныеПараметры, Ложь );
	
	Если Не ПустаяСтрока( Объект.ИмяФайлаПротоколаЗагрузки ) Тогда
	
		лТекстовыйДокумент = Новый ТекстовыйДокумент;
		лТекстовыйДокумент.УстановитьТекст( лРезультат );
		лТекстовыйДокумент.Записать( Объект.ИмяФайлаПротоколаЗагрузки, КодировкаТекста.UTF8 );
	
	КонецЕсли;

КонецПроцедуры

Функция ЗагрузитьДанныеИзФайла(Знач АдресВХранилище, ДополнительныеПараметры, ВОкноСообщений = Истина) Экспорт
	
	НастройкиВывода = Новый Структура;
	НастройкиВывода.Вставить("СтрокаСообщений", "");
	
	Если ВОкноСообщений Тогда
		НастройкиВывода.Вставить("НаправлениеВывода", "ВОкноСообщений");
	Иначе
		НастройкиВывода.Вставить("НаправлениеВывода", "ВЛог");
	КонецЕсли;
	
	лИмяФайла = ПолучитьИмяВременногоФайла(ДополнительныеПараметры.РасширениеФайла);
	Если АдресВХранилище = Неопределено Тогда
		КопироватьФайл( ЭтотОбъект.ИмяФайла, лИмяФайла );
		НастройкиВывода.Вставить("ИмяФайлаИсточника", ЭтотОбъект.ИмяФайла);
	Иначе
		ФайлВременногоХранилища = ПолучитьИзВременногоХранилища(АдресВХранилище);	
		ФайлВременногоХранилища.Записать(лИмяФайла);
		УдалитьИзВременногоХранилища(АдресВХранилище);
		НастройкиВывода.Вставить("ИмяФайлаИсточника", ДополнительныеПараметры.ИмяФайлаИсточника);
	КонецЕсли;
	
	Попытка
		лДанные = ДМ_РаботаСФайламиEXCEL1С.ЗагрузитьМетодом_EXCEL1C( лИмяФайла,, 1, 2 );
	Исключение
		лОписаниеОшибки = ОписаниеОшибки();
		Попытка
			УдалитьФайлы(лИмяФайла);
		Исключение
			лОписаниеОшибки = ОписаниеОшибки();
		КонецПопытки;
		ВызватьИсключение( лОписаниеОшибки );
	КонецПопытки;
	
	Попытка
		УдалитьФайлы(лИмяФайла);
	Исключение
		лОписаниеОшибки = ОписаниеОшибки();
	КонецПопытки;
	
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
	
	лРезультат = Неопределено;
	
	Попытка
	
		лРезультат = ЗагрузитьДанные(лДанные, НастройкиВывода);
	
	Исключение
		лОписаниеОшибки = ОписаниеОшибки();
		Если ТранзакцияАктивна() Тогда
			ОтменитьТранзакцию();
		КонецЕсли;
	    ВызватьИсключение;
	КонецПопытки;
	
	ЗафиксироватьТранзакцию();
	Возврат лРезультат;

КонецФункции

Функция ЗагрузитьДанные(Данные, НастройкиВывода)
	
	БлокировкаДанных = Новый БлокировкаДанных;
	ЭлементБлокировкиДанных = БлокировкаДанных.Добавить("РегистрСведений.ДМ_Принтеры");
	ЭлементБлокировкиДанных.Режим = РежимБлокировкиДанных.Исключительный;
	БлокировкаДанных.Заблокировать();
	
	НомерСтроки = 2;
	
	лВсегоСтрокДанных = Данные.Количество();
	Если лВсегоСтрокДанных < 2 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Данные.Колонки["N1"].Имя = "Принтер";
	Данные.Колонки["N2"].Имя = "НомерПланта";
	Данные.Колонки["N3"].Имя = "Основной";
	
	ЗагруженоСтрок 	= 0;
	ВсегоСтрок 		= 0;
		
	НаборЗаписей = РегистрыСведений.ДМ_Принтеры.СоздатьНаборЗаписей();
	//для проверки дублей строк перед записью в регистр
	ЗаписиДляПроверки = НаборЗаписей.Выгрузить();
	ЗаписиДляПроверки.Очистить();
	
	НастройкиВывода.Вставить("ЗаголовокДокумента", "Начало загрузки принтеров: " + ТекущаяДата() + "   ");
	ВывестиСтрокуСообщения("и", НастройкиВывода.ИмяФайлаИсточника, НастройкиВывода);
	Для н=НомерСтроки По лВсегоСтрокДанных Цикл
		
		СтрокаДанные = Данные[н-1];
		ОшибкаВСтроке = Ложь;
		
		НастройкиВывода.Вставить("ЗаголовокДокумента", "Строка " + СтрокаДанные.НомерСтроки + ": ");
		
		СтрокаДанные.Принтер		= СокрЛП(СтрокаДанные.Принтер);
		СтрокаДанные.НомерПланта	= СокрЛП(СтрЗаменить(СтрокаДанные.НомерПланта, Символы.НПП, ""));
		СтрокаДанные.Основной		= СокрЛП(НРег(СтрокаДанные.Основной));
		
		Если ПустаяСтрока(СтрокаДанные.Принтер) И ПустаяСтрока(СтрокаДанные.НомерПланта) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ПустаяСтрока(СтрокаДанные.НомерПланта) Тогда
			ВывестиСтрокуСообщения("!", "Значение ""Плант"" не заполнено", НастройкиВывода, ОшибкаВСтроке);		
		Иначе
			Склад = ДМ_СлужебныйПривилегированный.НайтиЭлементСправочникаПоРеквизиту("Предприятия","ДМ_НомерПланта",СтрокаДанные.НомерПланта);
			Если Склад.Пустая() Тогда
				ВывестиСтрокуСообщения("!", "Не найдено предприятие с номером планта """ + СтрокаДанные.НомерПланта + """", НастройкиВывода, ОшибкаВСтроке);
			КонецЕсли;
		КонецЕсли;
		
		Если ПустаяСтрока(СтрокаДанные.Принтер) Тогда
			ВывестиСтрокуСообщения("!", "Значение ""Наименование принтера"" не заполнено", НастройкиВывода, ОшибкаВСтроке);
		КонецЕсли;			
		
		Основной = (СтрокаДанные.Основной = "да");
		Если НЕ (ПустаяСтрока(СтрокаДанные.Основной) ИЛИ СтрокаДанные.Основной = "да" ИЛИ СтрокаДанные.Основной = "нет") Тогда
			ВывестиСтрокуСообщения("!", "Значение ""Основной принтер"" должно быть ""Да"", ""Нет"" или не заполнено", НастройкиВывода, ОшибкаВСтроке);
		КонецЕсли;		
		
		Если НЕ ОшибкаВСтроке И ЗаписиДляПроверки.НайтиСтроки(Новый Структура("Склад,Принтер", Склад, СтрокаДанные.Принтер)).Количество() <> 0 Тогда
			ВывестиСтрокуСообщения("!", "Комбинация принтера и планта уже присутствует в загружаемом файле", НастройкиВывода, ОшибкаВСтроке);
		КонецЕсли;
		
		НастройкиВывода.Удалить("ЗаголовокДокумента");
		
		Если ОшибкаВСтроке Тогда						
			ВывестиСтрокуСообщения(" ", "Строка " + СтрокаДанные.НомерСтроки + " пропущена", НастройкиВывода);
		Иначе
			Запись = НаборЗаписей.Добавить();
			Запись.Склад		= Склад;
			Запись.Принтер		= СтрокаДанные.Принтер;
			Запись.Основной		= Основной;
			
			ЗаполнитьЗначенияСвойств(ЗаписиДляПроверки.Добавить(), Запись);
		КонецЕсли;
		
		ВсегоСтрок = ВсегоСтрок + 1;
		Если НЕ ОшибкаВСтроке Тогда
			ЗагруженоСтрок = ЗагруженоСтрок + 1;
		КонецЕсли;
		
	КонецЦикла;
	
	НастройкиВывода.Удалить("ЗаголовокДокумента");
	
	Попытка
		НаборЗаписей.Записать();
		ВывестиСтрокуСообщения("и", "Загружено " + ЗагруженоСтрок + " из " + ВсегоСтрок + " строк", НастройкиВывода);
	Исключение
		ВывестиСтрокуСообщения("!", "Не удалось записать РС: " + ОписаниеОшибки(), НастройкиВывода);
	КонецПопытки;	
	
	Возврат НастройкиВывода.СтрокаСообщений;
	
КонецФункции

Процедура ВывестиСтрокуСообщения(Статус, пСообщение, НастройкиВывода, Отказ = Неопределено, ВыводЗаголовка = Истина)
	
	Отказ = Истина;
	
	Если ВыводЗаголовка И НастройкиВывода.Свойство("ЗаголовокДокумента") Тогда
		ВывестиСтрокуСообщения(Статус, НастройкиВывода.ЗаголовокДокумента + пСообщение, НастройкиВывода, , Ложь);
		Возврат;
	КонецЕсли;
	
	Если Статус = " " Тогда
		СтатусПеречисление = СтатусСообщения.БезСтатуса;
	ИначеЕсли Статус = "-" Тогда
		СтатусПеречисление = СтатусСообщения.Обычное;
	ИначеЕсли Статус = "и" Тогда
		СтатусПеречисление = СтатусСообщения.Информация;
	ИначеЕсли Статус = "!" Тогда
		СтатусПеречисление = СтатусСообщения.Внимание;
	ИначеЕсли Статус = "!!" Тогда
		СтатусПеречисление = СтатусСообщения.Важное;
	ИначеЕсли Статус = "!!!" Тогда
		СтатусПеречисление = СтатусСообщения.ОченьВажное;
	Иначе
		СтатусПеречисление = СтатусСообщения.Внимание;
	КонецЕсли;
	
	Если НастройкиВывода.НаправлениеВывода = "ВЛог" Тогда
		НастройкиВывода.СтрокаСообщений = НастройкиВывода.СтрокаСообщений + пСообщение + Символы.ПС;	
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю( пСообщение );
	КонецЕсли;
	
КонецПроцедуры
