
#Область СервисныеФункции

Процедура СформироватьЗаявки(МассивДокументов, ЕстьОшибки = Ложь, ПрограммныйВызов = Истина, ВызовИзФормыСписка = Истина) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIОтправкаЗаявокНаОформление");

	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.СформироватьЗаявки(МассивДокументов, ЕстьОшибки, ПрограммныйВызов, ВызовИзФормыСписка);
	КонецЕсли;

КонецПроцедуры

Процедура ОтправкаПроизводственныхОпераций() Экспорт
	
	Попытка
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.ОтправкаПроизводственныхОпераций);
	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIОтправкаЗаявокНаОформление");
	
	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.ОтправкаПроизводственныхОпераций();
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьУспешноеВыполнениеРегЗадания( "ОтправкаПроизводственныхОпераций" );
	Иначе
		лОписаниеОшибки = "Ошибка создания защищенного объекта конфигурации ИнтеграцияВетисAPIОтправкаЗаявокНаОформление";
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьОшибкуВыполненияРегЗадания( "ОтправкаПроизводственныхОпераций", лОписаниеОшибки );
	КонецЕсли;
	Исключение
		лОписаниеОшибки = ОписаниеОшибки();
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьОшибкуВыполненияРегЗадания( "ОтправкаПроизводственныхОпераций", лОписаниеОшибки );
		ВызватьИсключение;
	КонецПопытки
	
КонецПроцедуры

Процедура ОтправкаТранспортныхОпераций() Экспорт
	
	Попытка
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.ОтправкаТранспортныхОпераций);
	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIОтправкаЗаявокНаОформление");
	
	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.ОтправкаТранспортныхОпераций();
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьУспешноеВыполнениеРегЗадания( "ОтправкаТранспортныхОпераций" );
	Иначе
		лОписаниеОшибки = "Ошибка создания защищенного объекта конфигурации ИнтеграцияВетисAPIОтправкаЗаявокНаОформление";
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьОшибкуВыполненияРегЗадания( "ОтправкаТранспортныхОпераций", лОписаниеОшибки );
	КонецЕсли;
	Исключение
		лОписаниеОшибки = ОписаниеОшибки();
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьОшибкуВыполненияРегЗадания( "ОтправкаТранспортныхОпераций", лОписаниеОшибки );
		ВызватьИсключение;
	КонецПопытки
	
КонецПроцедуры

Процедура ОтправкаПриходныхОпераций() Экспорт
	
	Попытка
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.ОтправкаПриходныхОпераций);
	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIОтправкаЗаявокНаОформление");
	
	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.ОтправкаПриходныхОпераций();
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьУспешноеВыполнениеРегЗадания( "ОтправкаПриходныхОпераций" );
	Иначе
		лОписаниеОшибки = "Ошибка создания защищенного объекта конфигурации ИнтеграцияВетисAPIОтправкаЗаявокНаОформление";
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьОшибкуВыполненияРегЗадания( "ОтправкаПриходныхОпераций", лОписаниеОшибки );
	КонецЕсли;
	Исключение
		лОписаниеОшибки = ОписаниеОшибки();
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьОшибкуВыполненияРегЗадания( "ОтправкаПриходныхОпераций", лОписаниеОшибки );
		ВызватьИсключение;
	КонецПопытки
	
КонецПроцедуры

Процедура ОтправкаИнвентаризаций() Экспорт
	
	Попытка
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.ОтправкаИнвентаризаций);
	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIОтправкаЗаявокНаОформление");
	
	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.ОтправкаИнвентаризаций();
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьУспешноеВыполнениеРегЗадания( "ОтправкаИнвентаризаций" );
	Иначе
		лОписаниеОшибки = "Ошибка создания защищенного объекта конфигурации ИнтеграцияВетисAPIОтправкаЗаявокНаОформление";
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьОшибкуВыполненияРегЗадания( "ОтправкаИнвентаризаций", лОписаниеОшибки );
	КонецЕсли
	Исключение
		лОписаниеОшибки = ОписаниеОшибки();
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьОшибкуВыполненияРегЗадания( "ОтправкаИнвентаризаций", лОписаниеОшибки );
		ВызватьИсключение;
	КонецПопытки
	
КонецПроцедуры

Процедура ОтправкаОбъединенийЗаписейСкладскогоЖурнала() Экспорт
	
	Попытка
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.ОтправкаОбъединенийЗаписейСкладскогоЖурнала);
	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIОтправкаЗаявокНаОформление");
	
	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.ОтправкаОбъединенийЗаписейСкладскогоЖурнала();
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьУспешноеВыполнениеРегЗадания( "ОтправкаОбъединенийЗаписейСкладскогоЖурнала" );
	Иначе
		лОписаниеОшибки = "Ошибка создания защищенного объекта конфигурации ИнтеграцияВетисAPIОтправкаЗаявокНаОформление";
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьОшибкуВыполненияРегЗадания( "ОтправкаОбъединенийЗаписейСкладскогоЖурнала", лОписаниеОшибки );
	КонецЕсли;
	Исключение
		лОписаниеОшибки = ОписаниеОшибки();
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьОшибкуВыполненияРегЗадания( "ОтправкаОбъединенийЗаписейСкладскогоЖурнала", лОписаниеОшибки );
		ВызватьИсключение;
	КонецПопытки
	
КонецПроцедуры

Процедура ОтправкаАннулированийВСД() Экспорт
	
	Попытка
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.ОтправкаАннулированийВСД);
	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIОтправкаЗаявокНаОформление");
	
	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.ОтправкаАннулированийВСД();
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьУспешноеВыполнениеРегЗадания( "ОтправкаАннулированийВСД" );
	Иначе
		лОписаниеОшибки = "Ошибка создания защищенного объекта конфигурации ИнтеграцияВетисAPIОтправкаЗаявокНаОформление";
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьОшибкуВыполненияРегЗадания( "ОтправкаАннулированийВСД", лОписаниеОшибки );
	КонецЕсли
	Исключение
		лОписаниеОшибки = ОписаниеОшибки();
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьОшибкуВыполненияРегЗадания( "ОтправкаАннулированийВСД", лОписаниеОшибки );
		ВызватьИсключение;
	КонецПопытки
	
КонецПроцедуры

Процедура ОтправкаВнесенийНомеровТранспортныхСредств() Экспорт
	
	Попытка
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.ОтправкаВнесенийНомеровТранспортныхСредств);
	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIОтправкаЗаявокНаОформление");
	
	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.ОтправкаВнесенийНомеровТранспортныхСредств();
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьУспешноеВыполнениеРегЗадания( "ОтправкаВнесенийНомеровТранспортныхСредств" );
	Иначе
		лОписаниеОшибки = "Ошибка создания защищенного объекта конфигурации ИнтеграцияВетисAPIОтправкаЗаявокНаОформление";
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьОшибкуВыполненияРегЗадания( "ОтправкаВнесенийНомеровТранспортныхСредств", лОписаниеОшибки );
	КонецЕсли
	Исключение
		лОписаниеОшибки = ОписаниеОшибки();
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьОшибкуВыполненияРегЗадания( "ОтправкаВнесенийНомеровТранспортныхСредств", лОписаниеОшибки );
		ВызватьИсключение;
	КонецПопытки
	
КонецПроцедуры

Процедура ОтправкаВнесенийЛабораторныхИсследований() Экспорт
	
	Попытка
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.ОтправкаВнесенийЛабораторныхИсследований);
	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIОтправкаЗаявокНаОформление");
	
	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.ОтправкаВнесенийЛабораторныхИсследований();
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьУспешноеВыполнениеРегЗадания( "ОтправкаВнесенийЛабораторныхИсследований" );
	Иначе
		лОписаниеОшибки = "Ошибка создания защищенного объекта конфигурации ИнтеграцияВетисAPIОтправкаЗаявокНаОформление";
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьОшибкуВыполненияРегЗадания( "ОтправкаВнесенийЛабораторныхИсследований", лОписаниеОшибки );
	КонецЕсли;
	Исключение
		лОписаниеОшибки = ОписаниеОшибки();
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьОшибкуВыполненияРегЗадания( "ОтправкаВнесенийЛабораторныхИсследований", лОписаниеОшибки );
		ВызватьИсключение;
	КонецПопытки
	
КонецПроцедуры

#КонецОбласти

#Область ЗаявкиНаОформлениеОпераций

#Область Регионализация

Функция ОтправитьДанныеНаПроверкуВозможностиОсуществленияПеревозки(Организация, Пользователь, ТаблицаДокументов) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIОтправкаЗаявокНаОформление");

	Если Не ОбъектСЛК = Неопределено Тогда
		Возврат ОбъектСЛК.ОтправитьДанныеНаПроверкуВозможностиОсуществленияПеревозки(Организация, Пользователь, ТаблицаДокументов);
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

#КонецОбласти

#Область ВСД

#Область ЗагрузкаИзмененийПоВСД

Процедура ЗагрузкаИзмененийПоТранспортнымВСД() Экспорт
	
	Попытка
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.ЗагрузкаТранспортныхВСД);
	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIОтправкаЗаявокНаОформление");
	
	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.ЗагрузкаИзмененийПоТранспортнымВСД();
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьУспешноеВыполнениеРегЗадания( "ЗагрузкаТранспортныхВСД" );
	Иначе
		лОписаниеОшибки = "Ошибка создания защищенного объекта конфигурации ИнтеграцияВетисAPIОтправкаЗаявокНаОформление";
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьОшибкуВыполненияРегЗадания( "ЗагрузкаТранспортныхВСД", лОписаниеОшибки );
	КонецЕсли;
	Исключение
		лОписаниеОшибки = ОписаниеОшибки();
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьОшибкуВыполненияРегЗадания( "ЗагрузкаТранспортныхВСД", лОписаниеОшибки );
		ВызватьИсключение;
	КонецПопытки
	
КонецПроцедуры

Процедура ЗагрузкаИзмененийПоПроизводственнымВСД() Экспорт
	
	Попытка
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.ЗагрузкаПроизводственныхВСД);
	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIОтправкаЗаявокНаОформление");
	
	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.ЗагрузкаИзмененийПоПроизводственнымВСД();
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьУспешноеВыполнениеРегЗадания( "ЗагрузкаПроизводственныхВСД" );
	Иначе
		лОписаниеОшибки = "Ошибка создания защищенного объекта конфигурации ИнтеграцияВетисAPIОтправкаЗаявокНаОформление";
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьОшибкуВыполненияРегЗадания( "ЗагрузкаПроизводственныхВСД", лОписаниеОшибки );
	КонецЕсли;
	Исключение
		лОписаниеОшибки = ОписаниеОшибки();
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьОшибкуВыполненияРегЗадания( "ЗагрузкаПроизводственныхВСД", лОписаниеОшибки );
		ВызватьИсключение;
	КонецПопытки

	
КонецПроцедуры

Процедура ЗагрузкаВСДЗаПериод(ПараметрыОперации, АдресРезультата) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIОтправкаЗаявокНаОформление");

	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.ЗагрузкаВСДЗаПериод(ПараметрыОперации, АдресРезультата);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ПолучениеДанныхВСДПоИдентификатору

Функция СформироватьЗаявкуНаПолучениеДанныхВСД(ПараметрыПодключения, ИдентификаторВСД, Предприятие, Контрагент) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIОтправкаЗаявокНаОформление");

	Если Не ОбъектСЛК = Неопределено Тогда
		Возврат ОбъектСЛК.СформироватьЗаявкуНаПолучениеДанныхВСД(ПараметрыПодключения, ИдентификаторВСД, Предприятие, Контрагент);
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

#КонецОбласти

#Область ЗагрузкаСпискаВсехВСДПредприятия

Процедура ЗагрузкаСпискаВСДПредприятия(ПараметрыОперации, АдресРезультата) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIОтправкаЗаявокНаОформление");

	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.ЗагрузкаСпискаВСДПредприятия(ПараметрыОперации, АдресРезультата);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ЗаписиСкладскогоЖурнала

#Область ЗагрузкаИзмененийПоЗаписямСкладскогоЖурнала

Процедура ЗагрузкаИзмененийПоЗаписямСкладскогоЖурнала() Экспорт
	
	Попытка
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.ЗагрузкаОбновленийВерсийЗаписейСкладскогоЖурнала);
	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIОтправкаЗаявокНаОформление");
	
	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.ЗагрузкаИзмененийПоЗаписямСкладскогоЖурнала();
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьУспешноеВыполнениеРегЗадания( "ЗагрузкаОбновленийВерсийЗаписейСкладскогоЖурнала" );
	Иначе
		лОписаниеОшибки = "Ошибка создания защищенного объекта конфигурации ИнтеграцияВетисAPIОтправкаЗаявокНаОформление";
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьОшибкуВыполненияРегЗадания( "ЗагрузкаОбновленийВерсийЗаписейСкладскогоЖурнала", лОписаниеОшибки );
	КонецЕсли;
	
	Исключение
		лОписаниеОшибки = ОписаниеОшибки();
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьОшибкуВыполненияРегЗадания( "ЗагрузкаОбновленийВерсийЗаписейСкладскогоЖурнала", лОписаниеОшибки );
		ВызватьИсключение;
	КонецПопытки
	
КонецПроцедуры

#КонецОбласти

#Область ПолучениеДанныхЗаписиПоИдентификатору

Функция СформироватьЗаявкуНаПолучениеДанныхЗаписиСкладскогоЖурнала(ПараметрыПодключения, ЗаписьСкладскогоЖурнала, Предприятие, ДанныеРезультата = Неопределено) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIОтправкаЗаявокНаОформление");

	Если Не ОбъектСЛК = Неопределено Тогда
		Возврат ОбъектСЛК.СформироватьЗаявкуНаПолучениеДанныхЗаписиСкладскогоЖурнала(ПараметрыПодключения, ЗаписьСкладскогоЖурнала, Предприятие, ДанныеРезультата);
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

#КонецОбласти

#КонецОбласти

#Область ЗагрузкаАктуальныхОстатков

Процедура ФоновоеЗаданиеЗагрузкаАктуальныхОстатков(Параметры, АдресРезультата) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIОтправкаЗаявокНаОформление");

	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.ФоновоеЗаданиеЗагрузкаАктуальныхОстатков(Параметры, АдресРезультата);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область Пользователи

Функция СформироватьЗаявкуНаРегистрациюПользователей(ПараметрыПодключения, РеквизитыОперации) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIОтправкаЗаявокНаОформление");

	Если Не ОбъектСЛК = Неопределено Тогда
		Возврат ОбъектСЛК.СформироватьЗаявкуНаРегистрациюПользователей(ПараметрыПодключения, РеквизитыОперации);
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

Функция СформироватьЗаявкуНаИзменениеПравПользователей(ПараметрыПодключения, РеквизитыОперации) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIОтправкаЗаявокНаОформление");

	Если Не ОбъектСЛК = Неопределено Тогда
		Возврат ОбъектСЛК.СформироватьЗаявкуНаИзменениеПравПользователей(ПараметрыПодключения, РеквизитыОперации);
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

Функция СформироватьЗаявкуНаНазначениеЗонОтветственностиПользователей(ПараметрыПодключения, РеквизитыОперации) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIОтправкаЗаявокНаОформление");

	Если Не ОбъектСЛК = Неопределено Тогда
		Возврат ОбъектСЛК.СформироватьЗаявкуНаНазначениеЗонОтветственностиПользователей(ПараметрыПодключения, РеквизитыОперации);
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

Функция СформироватьЗаявкуНаУдалениеСвязиПользователейСХозяйствующимСубъектом(ПараметрыПодключения, РеквизитыОперации) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIОтправкаЗаявокНаОформление");

	Если Не ОбъектСЛК = Неопределено Тогда
		Возврат ОбъектСЛК.СформироватьЗаявкуНаУдалениеСвязиПользователейСХозяйствующимСубъектом(ПараметрыПодключения, РеквизитыОперации);
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

Функция СформироватьЗаявкуНаПолучениеДанныхПользователя(ПараметрыПодключения, ПользовательМеркурия = Неопределено, Логин = "", Идентификатор = "") Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIОтправкаЗаявокНаОформление");

	Если Не ОбъектСЛК = Неопределено Тогда
		Возврат ОбъектСЛК.СформироватьЗаявкуНаПолучениеДанныхПользователя(ПараметрыПодключения, ПользовательМеркурия, Логин, Идентификатор);
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

Функция СформироватьЗаявкуНаПолучениеСпискаПользователейКонтрагента(ПараметрыПодключения) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIОтправкаЗаявокНаОформление");

	Если Не ОбъектСЛК = Неопределено Тогда
		Возврат ОбъектСЛК.СформироватьЗаявкуНаПолучениеСпискаПользователейКонтрагента(ПараметрыПодключения);
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

Функция СформироватьЗаявкуНаПолучениеСпискаПравПользователейСистемыМеркурий(ПараметрыПодключения, КоличествоПопыток = 0) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIОтправкаЗаявокНаОформление");

	Если Не ОбъектСЛК = Неопределено Тогда
		Возврат ОбъектСЛК.СформироватьЗаявкуНаПолучениеСпискаПравПользователейСистемыМеркурий(ПараметрыПодключения, КоличествоПопыток);
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

#КонецОбласти

#КонецОбласти
