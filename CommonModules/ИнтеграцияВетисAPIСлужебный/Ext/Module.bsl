
#Область ОписаниеВебСервисов

Функция ПолучитьWSСтруктуру(ТипЗагружаемогоОбъекта, ИмяТипаЗапросаФабрикиXDTO, ПараметрыАвторизации) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIСлужебный");

	Если Не ОбъектСЛК = Неопределено Тогда
		Возврат ОбъектСЛК.ПолучитьWSСтруктуру(ТипЗагружаемогоОбъекта, ИмяТипаЗапросаФабрикиXDTO, ПараметрыАвторизации);
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

#КонецОбласти

#Область АутентификацияВетисAPI

Функция ПараметрыПодключенияПользователя(Пользователь = Неопределено) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIСлужебный");

	Если Не ОбъектСЛК = Неопределено Тогда
		Возврат ОбъектСЛК.ПараметрыПодключенияПользователя(Пользователь);
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

Функция ПараметрыПодключенияКВетисAPI(Организация, Пользователь = Неопределено, ПолучатьНастройкиПользователя = Истина, ВидОперацииОбменаВетисAPI = Неопределено) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIСлужебный");

	Если Не ОбъектСЛК = Неопределено Тогда
		Возврат ОбъектСЛК.ПараметрыПодключенияКВетисAPI(Организация, Пользователь, ПолучатьНастройкиПользователя, ВидОперацииОбменаВетисAPI);
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

Функция ПараметрыПодключенияДляРаботыСоСправочнойИнформацией(ВидОперацииОбменаВетисAPI = Неопределено) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIСлужебный");

	Если Не ОбъектСЛК = Неопределено Тогда
		Возврат ОбъектСЛК.ПараметрыПодключенияДляРаботыСоСправочнойИнформацией(ВидОперацииОбменаВетисAPI);
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

Функция НастройкиОбменаВетисAPI(ВидОперацииОбменаВетисAPI, ТекстОшибки = "") Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIСлужебный");

	Если Не ОбъектСЛК = Неопределено Тогда
		Возврат ОбъектСЛК.НастройкиОбменаВетисAPI(ВидОперацииОбменаВетисAPI, ТекстОшибки);
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

Функция ФабрикаXDTO_Заявка() Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIСлужебный");

	Если Не ОбъектСЛК = Неопределено Тогда
		Возврат ОбъектСЛК.ФабрикаXDTO_Заявка();
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

#КонецОбласти

#Область ЗаполнениеДаынныхЗапроса

Функция ПараметрыЗапросаИнтервалДат(ДатаНачалаИнтервала, ДатаОкончанияИнтервала = Неопределено, СмещениеДатыНачалаИнтервала = 0) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIСлужебный");

	Если Не ОбъектСЛК = Неопределено Тогда
		Возврат ОбъектСЛК.ПараметрыЗапросаИнтервалДат(ДатаНачалаИнтервала, ДатаОкончанияИнтервала, СмещениеДатыНачалаИнтервала);
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

Процедура СформироватьЗапросПоСправочнойИнформации(ЗапросФабрики, ПараметрыЗапроса, ТипОбъекта, ПараметрыАвторизации, РезультатВыполненияОперации) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIСлужебный");

	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.СформироватьЗапросПоСправочнойИнформации(ЗапросФабрики, ПараметрыЗапроса, ТипОбъекта, ПараметрыАвторизации, РезультатВыполненияОперации);
	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьСвойстваОбъектаXDTO(Фабрика, Знач Запрос, Соответствие, Родитель = "", ОшибкиЗаполнения = Неопределено) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIСлужебный");

	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.ЗаполнитьСвойстваОбъектаXDTO(Фабрика, Запрос, Соответствие, Родитель, ОшибкиЗаполнения);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОтправкаИПолучениеРезультатаВВетисAPI

Процедура ОтправкаЗаявки(НастройкиПодключенияКВетисAPI, ДатаДокумента, ИмяОперации, ПараметрыОперации, РезультатВыполненияОперации, ДокументСсылка = Неопределено) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIСлужебный");

	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.ОтправкаЗаявки(НастройкиПодключенияКВетисAPI, ДатаДокумента, ИмяОперации, ПараметрыОперации, РезультатВыполненияОперации, ДокументСсылка);
	КонецЕсли;

КонецПроцедуры

Процедура ПолучениеРезультатаЗаявки(НастройкиПодключенияКВетисAPI, ИдентификаторЗаявки, РезультатВыполненияОперации, ДокументСсылка = Неопределено) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIСлужебный");

	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.ПолучениеРезультатаЗаявки(НастройкиПодключенияКВетисAPI, ИдентификаторЗаявки, РезультатВыполненияОперации, ДокументСсылка);
	КонецЕсли;

КонецПроцедуры

Процедура ПолучениеРезультатаЗаявкиСПовторнымОпросомСервера(НастройкиПодключенияКВетисAPI, ИдентификаторЗаявки, РезультатВыполненияОперации, ДокументСсылка = Неопределено) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIСлужебный");

	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.ПолучениеРезультатаЗаявкиСПовторнымОпросомСервера(НастройкиПодключенияКВетисAPI, ИдентификаторЗаявки, РезультатВыполненияОперации, ДокументСсылка);
	КонецЕсли;

КонецПроцедуры

Функция ЗаявкаПолучениеРезультатаИзВетисAPI(НастройкаПодключения, ЗаявкаОтправка_GUID, ТекстЗапроса = "", ДокументСсылка = Неопределено) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIСлужебный");

	Если Не ОбъектСЛК = Неопределено Тогда
		Возврат ОбъектСЛК.ЗаявкаПолучениеРезультатаИзВетисAPI(НастройкаПодключения, ЗаявкаОтправка_GUID, ТекстЗапроса, ДокументСсылка);
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

#КонецОбласти

#Область ОтправкаИПолучениеРезультатаВВетисAPIНовое

Процедура ОтправкаЗаявкиФрагмент(ПараметрыПодключения, РеквизитыСообщения, ДатаОперации, ИмяОперации, ЗапросДляОбработки) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIСлужебный");

	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.ОтправкаЗаявкиФрагмент(ПараметрыПодключения, РеквизитыСообщения, ДатаОперации, ИмяОперации, ЗапросДляОбработки);
	КонецЕсли;

КонецПроцедуры

Процедура ПолучениеРезультатаЗаявкиФрагмент(ПараметрыПодключения, РеквизитыСообщения) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIСлужебный");

	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.ПолучениеРезультатаЗаявкиФрагмент(ПараметрыПодключения, РеквизитыСообщения);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ФормированиеСпискаДокументовДляОбработки

Функция ВыборкаЗаявокНаОформлениеОперацийКОтправке(ВидОперации) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIСлужебный");

	Если Не ОбъектСЛК = Неопределено Тогда
		Возврат ОбъектСЛК.ВыборкаЗаявокНаОформлениеОперацийКОтправке(ВидОперации);
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

#КонецОбласти

#Область ИнформацияОХодеВыполненииОбмена

Процедура СформироватьРезультатВыполненияОперации(ДатаНачалаВыполненияОперации, ВидОперации, ОшибкиПриВыполненииОпераций, ВыводитьСообщения = Ложь) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIСлужебный");

	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.СформироватьРезультатВыполненияОперации(ДатаНачалаВыполненияОперации, ВидОперации, ОшибкиПриВыполненииОпераций, ВыводитьСообщения);
	КонецЕсли;

КонецПроцедуры

Процедура УстановитьТекущийСтатусСостоянийЗаявокНаОформлениеОпераций(Ссылка = Неопределено, Статус, ИдентификаторЗаявки = "", Текст = "", ТекстОшибки = "") Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIСлужебный");

	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.УстановитьТекущийСтатусСостоянийЗаявокНаОформлениеОпераций(Ссылка, Статус, ИдентификаторЗаявки, Текст, ТекстОшибки);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьТекстЗапросаДляОбновленияОбъекта(ТипОбъекта) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIСлужебный");

	Если Не ОбъектСЛК = Неопределено Тогда
		Возврат ОбъектСЛК.ПолучитьТекстЗапросаДляОбновленияОбъекта(ТипОбъекта);
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

Функция ВыполнитьПреобразованиеИзСтрокиXML(Тип, ЗначениеДляПреобразования, ЕстьОшибкиПреобразованияКТипу) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIСлужебный");

	Если Не ОбъектСЛК = Неопределено Тогда
		Возврат ОбъектСЛК.ВыполнитьПреобразованиеИзСтрокиXML(Тип, ЗначениеДляПреобразования, ЕстьОшибкиПреобразованияКТипу);
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

Функция ПолучитьСтруктуруРезультата() Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIСлужебный");

	Если Не ОбъектСЛК = Неопределено Тогда
		Возврат ОбъектСЛК.ПолучитьСтруктуруРезультата();
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

Процедура УстановитьТаймаут(ТаймаутОпросаСервера = 0) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIСлужебный");

	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.УстановитьТаймаут(ТаймаутОпросаСервера);
	КонецЕсли;

КонецПроцедуры

Функция НайтиЭлементСправочника(ИмяСправочника, СтруктураРеквизитовПоиска) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIСлужебный");

	Если Не ОбъектСЛК = Неопределено Тогда
		Возврат ОбъектСЛК.НайтиЭлементСправочника(ИмяСправочника, СтруктураРеквизитовПоиска);
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

Процедура ЗаписатьОбъект(Объект, ТекстОшибки = "") Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIСлужебный");

	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.ЗаписатьОбъект(Объект, ТекстОшибки);
	КонецЕсли;

КонецПроцедуры

Функция ИдентификаторВерсииОбъекта(Объект) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIСлужебный");

	Если Не ОбъектСЛК = Неопределено Тогда
		Возврат ОбъектСЛК.ИдентификаторВерсииОбъекта(Объект);
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

Процедура ДобавитьЗаписьВРегистрВерсийОбъектов(Объект, СтруктураСвойств, ТекстОшибки = "") Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIСлужебный");

	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.ДобавитьЗаписьВРегистрВерсийОбъектов(Объект, СтруктураСвойств, ТекстОшибки);
	КонецЕсли;

КонецПроцедуры

Функция ВариантВеденияЖурналаЗагрузкиДанных(ВидОбъекта) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIСлужебный");

	Если Не ОбъектСЛК = Неопределено Тогда
		Возврат ОбъектСЛК.ВариантВеденияЖурналаЗагрузкиДанных(ВидОбъекта);
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

Функция ВыполняетсяТекущееФоновоеЗадание(РегламентноеЗадание, ЗнакСравнения = "=") Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIСлужебный");

	Если Не ОбъектСЛК = Неопределено Тогда
		Возврат ОбъектСЛК.ВыполняетсяТекущееФоновоеЗадание(РегламентноеЗадание, ЗнакСравнения);
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

#КонецОбласти
