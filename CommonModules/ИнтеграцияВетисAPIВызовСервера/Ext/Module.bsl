#Область СлужебныеПроцедурыИФункции

#Область Контрагенты

Функция ОбновитьДанныеПоКонтрагентам(МассивКонтрагентов, Организация, Пользователь, ОснованиеДобавленияИзменения) Экспорт
	
	Возврат ИнтеграцияВетисAPIКонтрагентыПредприятия.ЗарегистрироватьОбновитьДанныеКонтрагента(МассивКонтрагентов, Организация, Пользователь, ОснованиеДобавленияИзменения);
	
КонецФункции

Функция ПолучитьАктуальныеДанныеПоКонтрагентам(МассивКонтрагентов) Экспорт
	
	Возврат ИнтеграцияВетисAPIКонтрагентыПредприятия.ПолучитьАктуальныеДанныеПоКонтрагентам(МассивКонтрагентов);
	
КонецФункции

Функция ПолучитьДанныеКонтрагентаПоФильтру(ИНН = "", КПП = "", ОГРН = "", ПолноеНаименование = "", GUID = "") Экспорт
	
	Возврат ИнтеграцияВетисAPIКонтрагентыПредприятия.ПолучитьДанныеКонтрагентаПоФильтру(ИНН, КПП, ОГРН, ПолноеНаименование, GUID);
	
КонецФункции

#КонецОбласти 

#Область Предприятия

Функция ОбновитьДанныеПоПредприятиям(МассивПредприятий, Организация, Пользователь, ОснованиеДобавленияИзменения) Экспорт
	
	Возврат ИнтеграцияВетисAPIКонтрагентыПредприятия.ЗарегистрироватьОбновитьДанныеПредприятий(МассивПредприятий, Организация, Пользователь, ОснованиеДобавленияИзменения);
	
КонецФункции

Функция ПолучитьАктуальныеДанныеПоПредприятию(МассивПредприятий) Экспорт
	
	Возврат ИнтеграцияВетисAPIКонтрагентыПредприятия.ПолучитьАктуальныеДанныеПредприятий(МассивПредприятий);
	
КонецФункции

#КонецОбласти

#Область Продукция

Функция ОбновитьДанныеПоПродукции(МассивПродукции, Организация, Пользователь, Удалить = Ложь) Экспорт
	
	Возврат ИнтеграцияВетисAPIПродукция.ЗарегистрироватьОбновитьДанныеПродукции(МассивПродукции, Организация, Пользователь, Удалить);
	
КонецФункции

Функция ПолучитьАктуальныеДанныеПоПродукции(МассивПродукции) Экспорт
	
	Возврат ИнтеграцияВетисAPIПродукция.ПолучитьАктуальныеДанныеПоПродукции(МассивПродукции);
	
КонецФункции

Функция СписокПроизводителейПродукции(ПродукцияПроизводителя, СтранаПроисхождения, Текст = "") Экспорт
	
	Возврат ИнтеграцияВетисAPIСервер.СписокПроизводителейПродукции(ПродукцияПроизводителя, СтранаПроисхождения, Текст);
	
КонецФункции

Функция ЭтоЗарегистрированнаяПродукция(Продукция) Экспорт
	
	Возврат ИнтеграцияВетисAPIСервер.ЭтоЗарегистрированнаяПродукция(Продукция);
	
КонецФункции

Функция ПродукцияПринадлежитТипуЖивыхЖивотных(Продукция, ПроверятьПродукцию = Истина) Экспорт
	
	МассивИдентификаторов = ИнтеграцияВетисAPIСлужебныйПовтИсп.ПродукцияИсключениеИзТипаЖивыеЖивотные();
	
	Результат = Новый Соответствие;
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ВидыПродукции.Ссылка КАК ВидПродукции
		|ПОМЕСТИТЬ ВТ_ИсключенияИзЖивыхЖивотных
		|ИЗ
		|	Справочник.ВидыПродукции КАК ВидыПродукции
		|ГДЕ
		|	ВидыПродукции.GUID_Меркурий В(&МассивИдентификаторов)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВидПродукции";
		
		Если ПроверятьПродукцию Тогда
			
			ТекстЗапроса = ТекстЗапроса + "
				|;
				|ВЫБРАТЬ
				|	Продукция.Ссылка КАК Ссылка,
				|	ВЫБОР
				|		КОГДА Продукция.Владелец.Владелец.Владелец = ЗНАЧЕНИЕ(Справочник.ТипыПродукции.ЖивыеЖивотные)
				|				И НЕ Продукция.Владелец.Владелец В
				|						(ВЫБРАТЬ
				|							ВТ_ИсключенияИзЖивыхЖивотных.ВидПродукции КАК ВидПродукции
				|						ИЗ
				|							ВТ_ИсключенияИзЖивыхЖивотных КАК ВТ_ИсключенияИзЖивыхЖивотных)
				|			ТОГДА ИСТИНА
				|		ИНАЧЕ ЛОЖЬ
				|	КОНЕЦ КАК ЭтоЖивоеЖивотное
				|ИЗ
				|	Справочник.Продукция КАК Продукция
				|ГДЕ
				|	Продукция.Ссылка В(&МассивПродукции)";
			
		Иначе
			
			ТекстЗапроса = ТекстЗапроса + "
				|;
				|ВЫБРАТЬ
				|	СвойстваЗаписейСкладскогоЖурнала.Ссылка КАК Ссылка,
				|	ВЫБОР
				|		КОГДА СвойстваЗаписейСкладскогоЖурнала.ТипПродукции = ЗНАЧЕНИЕ(Справочник.ТипыПродукции.ЖивыеЖивотные)
				|				И НЕ СвойстваЗаписейСкладскогоЖурнала.ВидПродукции В
				|						(ВЫБРАТЬ
				|							ВТ_ИсключенияИзЖивыхЖивотных.ВидПродукции КАК ВидПродукции
				|						ИЗ
				|							ВТ_ИсключенияИзЖивыхЖивотных КАК ВТ_ИсключенияИзЖивыхЖивотных)
				|			ТОГДА ИСТИНА
				|		ИНАЧЕ ЛОЖЬ
				|	КОНЕЦ КАК ЭтоЖивоеЖивотное
				|ИЗ
				|	Справочник.СвойстваЗаписейСкладскогоЖурнала КАК СвойстваЗаписейСкладскогоЖурнала
				|ГДЕ
				|	СвойстваЗаписейСкладскогоЖурнала.Ссылка В(&МассивПродукции)";
			
		КонецЕсли;
		
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("МассивИдентификаторов", МассивИдентификаторов);
	Запрос.УстановитьПараметр("МассивПродукции"      , Продукция);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Результат.Вставить(Выборка.Ссылка, Выборка.ЭтоЖивоеЖивотное);
	КонецЦикла;
	
	Если ТипЗнч(Продукция) = Тип("СправочникСсылка.Продукция")
		ИЛИ ТипЗнч(Продукция) = Тип("СправочникСсылка.СвойстваЗаписейСкладскогоЖурнала") Тогда
		Возврат Результат[Продукция] = Истина;
	Иначе
		Возврат Результат;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область УполномоченноеГашение

Функция КонтрагентыУполномоченногоГашения(Организация, Предприятие = Неопределено, Текст = "") Экспорт
	
	Возврат РегистрыСведений.УполномоченноеГашение.КонтрагентыУполномоченногоГашения(Организация, Предприятие, Текст);
	
КонецФункции

Функция ПредприятияУполномоченногоГашения(Организация, Контрагент = Неопределено, Текст = "") Экспорт
	
	Возврат РегистрыСведений.УполномоченноеГашение.ПредприятияУполномоченногоГашения(Организация, Контрагент, Текст);
	
КонецФункции

#КонецОбласти

#Область Пользователи

Функция ТекущиеПраваПользователя(Организация, Пользователь) Экспорт
	
	Возврат РегистрыСведений.ПраваПользователейСистемыМеркурий.ТекущиеПраваПользователя(Организация, Пользователь);
	
КонецФункции

#КонецОбласти

#Область РаботаСДатамиВыработкиИСроковГодности

Функция ДопустимыеФорматыДат(Продукция, СкоропортящаясяПродукция) Экспорт
	
	Возврат ИнтеграцияВетисAPIСлужебныйПовтИсп.ДопустимыеФорматыДат(Продукция, СкоропортящаясяПродукция);
	
КонецФункции

#КонецОбласти

#Область ОбменСУчетнойСистемой

Процедура ВыгрузитьПриходнуюОперацию(МассивДокументов) Экспорт 
	
	ОбменУВСУчетнаяСистемаСервер.ВыгрузитьПриходнуюОперацию(МассивДокументов);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти