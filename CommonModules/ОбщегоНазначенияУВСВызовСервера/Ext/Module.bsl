
#Область СлужебныеПроцедурыИФункции

Функция ТекущийСтатусДокумента(ДокументСсылка) Экспорт 

	Возврат РегистрыСведений.ЖурналРегистрацииСостоянийЗаявокНаОформлениеОпераций.ТекущийСтатусДокумента(ДокументСсылка)	

КонецФункции

Функция ТекущийСтатусВСД(ДокументСсылка) Экспорт 

	Возврат РегистрыСведений.СтатусыВСД.ТекущийСтатусДокумента(ДокументСсылка)	

КонецФункции

Функция МассивСтатусовСЗапретомРедактированияФормы() Экспорт

	Возврат РегистрыСведений.ЖурналРегистрацииСостоянийЗаявокНаОформлениеОпераций.МассивСтатусовСЗапретомРедактированияФормы()

КонецФункции

Функция МассивИнформационныхСтатусов() Экспорт

	Возврат РегистрыСведений.ЖурналРегистрацииСостоянийЗаявокНаОформлениеОпераций.МассивИнформационныхСтатусов()	

КонецФункции

Функция МассивСтатусыОбработанныхЗаявок() Экспорт

	Возврат РегистрыСведений.ЖурналРегистрацииСостоянийЗаявокНаОформлениеОпераций.МассивСтатусыОбработанныхЗаявок()	

КонецФункции

Функция МассивСтатусовУспешноОбработано() Экспорт

	Возврат РегистрыСведений.ЖурналРегистрацииСостоянийЗаявокНаОформлениеОпераций.МассивСтатусовУспешноОбработано()	

КонецФункции

Функция МассивСтатусовВПроцессеОбработки() Экспорт

	Возврат РегистрыСведений.ЖурналРегистрацииСостоянийЗаявокНаОформлениеОпераций.МассивСтатусовВПроцессеОбработки()	

КонецФункции

Функция МассивСтатусовОшибок() Экспорт

	Возврат РегистрыСведений.ЖурналРегистрацииСостоянийЗаявокНаОформлениеОпераций.МассивСтатусовОшибок()	

КонецФункции

Функция ПоместитьТаблицуФормыВоВременноеХранилище(Знач Таблица, УникальныйИдентификаторФормы) Экспорт

	Возврат ПоместитьВоВременноеХранилище(Таблица.Выгрузить(), УникальныйИдентификаторФормы);

КонецФункции

Функция ПоместитьТаблицуУпаковокВоВременноеХранилище(Объект, ИдентификаторСтроки, ТабЧасть, УникальныйИдентификатор) Экспорт
	
	Если ЗначениеЗаполнено(ИдентификаторСтроки) Тогда
		ТаблицаУпаковок = Объект[ТабЧасть].Выгрузить(Новый Структура("GUIDСтроки", ИдентификаторСтроки));
	Иначе
		ТаблицаУпаковок = Объект[ТабЧасть].Выгрузить();
	КонецЕсли;
	
	Возврат ПоместитьВоВременноеХранилище(ТаблицаУпаковок, УникальныйИдентификатор);
	
КонецФункции

Функция КонтрагентыПоПредприятию(Предприятие, ТребуетсяСписокЗначений = Ложь, Текст = "", Основной = Ложь) Экспорт 

	Возврат РегистрыСведений.СвязиМеждуКонтрагентамиИПредприятиями.КонтрагентыПоПредприятию(Предприятие, ТребуетсяСписокЗначений, Текст, Основной)
	
КонецФункции

Функция ПредприятияПоКонтрагенту(Контрагент, ТребуетсяСписокЗначений = Ложь, Текст = "") Экспорт 

	Возврат РегистрыСведений.СвязиМеждуКонтрагентамиИПредприятиями.ПредприятияПоКонтрагенту(Контрагент, ТребуетсяСписокЗначений, Текст)

КонецФункции

Процедура ЗаполнитьДанныеПараметровОстатков() Экспорт
	Организация = ОрганизацияТекущегоПользователя();
	Контрагент  = КонтрагентПоОрганизации(Организация);
	СписокПредприятия = ПредприятияПоКонтрагенту(Контрагент);
	
	Для Каждого Предприятия Из СписокПредприятия Цикл
		Если Не Предприятия.НеИспользуется Тогда
			НовыеЗаписи = РегистрыСведений.ПараметрыАктуальныхОстатков.СоздатьНаборЗаписей();
			НовыеЗаписи.Отбор.Предприятие.Установить(Предприятия);
			НовыеЗаписи.Отбор.Контрагент.Установить(Контрагент);
			НовыеЗаписи.Отбор.Организация.Установить(Организация);
			НовыеЗаписи.Прочитать();
			Если Не НовыеЗаписи.Количество() > 0 Тогда
				НоваяЗапись = НовыеЗаписи.Добавить();
				НоваяЗапись.Контрагент = Контрагент;
				НоваяЗапись.Организация = Организация;
				НоваяЗапись.Предприятие = Предприятия;
				НоваяЗапись.СмещениеВперед = 600;
				НоваяЗапись.СмещениеНазад  = 3600;
				НовыеЗаписи.Записать();
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция КонтрагентПредприятиеСвязаны(Контрагент, Предприятие) Экспорт

	Возврат РегистрыСведений.СвязиМеждуКонтрагентамиИПредприятиями.КонтрагентПредприятиеСвязаны(Контрагент, Предприятие);

КонецФункции // ()

Функция КонтрагентПоОрганизации(Организация) Экспорт 

	Возврат ОбщегоНазначенияУВССервер.КонтрагентПоОрганизации(Организация);
	
КонецФункции

Функция ПродукцияПредприятия(ПараметрыПодбора, Текст) Экспорт
	
	Возврат Справочники.Продукция.ПродукцияПредприятия(ПараметрыПодбора, Текст);
	
КонецФункции

Функция ПродукцияПолучателяПродукции(ПараметрыПодбора, Текст) Экспорт
	
	Возврат Справочники.Продукция.ПродукцияПолучателя(ПараметрыПодбора, Текст);
	
КонецФункции

Функция ОрганизацияТекущегоПользователя() Экспорт
	Возврат ОбщегоНазначенияУВССервер.ОрганизацияТекущегоПользователя();
КонецФункции

Функция ВидСервераВетисAPI() Экспорт 
	Возврат ОбщегоНазначенияУВССервер.ВидСервераВетисAPI();
КонецФункции

Функция НастройкаПодключенияКВетисAPI(Организация) Экспорт 

	Возврат ОбщегоНазначенияУВССервер.НастройкаПодключенияКВетисAPI(Организация);
	
КонецФункции

Функция ПолучитьПредприятияОбслуживаемыеТекущимПользователем(Организация, ТребуетсяСписокЗначений = Ложь, Текст = "") Экспорт
	
	Возврат ОбщегоНазначенияУВССервер.ПолучитьПредприятияОбслуживаемыеТекущимПользователем(Организация, ТребуетсяСписокЗначений, Текст);
	
КонецФункции

Функция ПолучитьСвойстваПродукции(Продукция) Экспорт
	
	Возврат ОбщегоНазначенияУВССервер.ПолучитьСвойстваПродукции(Продукция);
	
КонецФункции

#Область ОбработчикиСобытий_НоменклатураУчетнойСистемы

Функция НоменклатураУчетнойСистемыПоПродукции(ЗаписьСкладскогоЖурнала) Экспорт
	
	Возврат Справочники.НоменклатураУчетнойСистемы.НоменклатураУчетнойСистемыПоПродукции(ЗаписьСкладскогоЖурнала);
	
КонецФункции

Процедура НоменклатураУчетнойСистемыАвтоПодбор(ДанныеВыбора, Текст, ЗаписьСкладскогоЖурнала) Экспорт
	
	ДанныеВыбора = Справочники.НоменклатураУчетнойСистемы.НоменклатураУчетнойСистемыПоПродукции(ЗаписьСкладскогоЖурнала, Текст);
	
КонецПроцедуры

Процедура НоменклатураУчетнойСистемыОкончаниеВводаТекста(ДанныеВыбора, Текст, ЗаписьСкладскогоЖурнала) Экспорт
	
	ДанныеВыбора = Справочники.НоменклатураУчетнойСистемы.НоменклатураУчетнойСистемыПоПродукции(ЗаписьСкладскогоЖурнала, Текст);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти