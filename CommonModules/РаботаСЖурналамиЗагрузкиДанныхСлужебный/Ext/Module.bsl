
#Область СлужебныйПрограммныйИнтерфейс

Процедура ОчиститьНенужныеДанные() Экспорт
	
	Попытка
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.ОчисткаЖурналовЗагрузкиДанных);
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НастройкиВеденияЖурналовЗагрузкиДанных.ВидОбъекта.ПолноеИмя КАК ВидОбъектаПолноеИмя,
		|	НастройкиВеденияЖурналовЗагрузкиДанных.СрокХраненияДанных КАК СрокХраненияДанных
		|ИЗ
		|	РегистрСведений.НастройкиВеденияЖурналовЗагрузкиДанных КАК НастройкиВеденияЖурналовЗагрузкиДанных
		|ГДЕ
		|	НастройкиВеденияЖурналовЗагрузкиДанных.ВариантОчисткиДанныхЖурнала = ЗНАЧЕНИЕ(Перечисление.ВариантыОчисткиЖурналовЗагрузкиДанных.Очистить)";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ВидОбъектаПолноеИмя = "РегистрСведений.ЖурналЗагрузкиДанныхПоВСД" Тогда
			
			ВыполнитьОчисткуЖурнала("ЖурналЗагрузкиДанныхПоВСД", Выборка.СрокХраненияДанных);
			
		ИначеЕсли Выборка.ВидОбъектаПолноеИмя = "РегистрСведений.ЖурналЗагрузкиДанныхПоЗаписямСкладскогоЖурнала" Тогда
			
			ВыполнитьОчисткуЖурнала("ЖурналЗагрузкиДанныхПоЗаписямСкладскогоЖурнала", Выборка.СрокХраненияДанных);
			
		ИначеЕсли Выборка.ВидОбъектаПолноеИмя = "РегистрСведений.ЖурналВыполненияРегламентныхЗаданий" Тогда
			
			ВыполнитьОчисткуЖурналаВыполненияРегламентныхЗаданий(Выборка.СрокХраненияДанных);
			
		ИначеЕсли Выборка.ВидОбъектаПолноеИмя = "РегистрСведений.ЖурналРегистрацииСостоянийЗаявокНаОформлениеОпераций" Тогда
			
			ВыполнитьОчисткуЖурналаРегистрацииСостоянийЗаявокНаОформлениеОпераций(Выборка.СрокХраненияДанных);
			
		КонецЕсли;
		
	КонецЦикла;
	
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьУспешноеВыполнениеРегЗадания( "ОчисткаЖурналовЗагрузкиДанных" );
	Исключение
		лОписаниеОшибки = ОписаниеОшибки();
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьОшибкуВыполненияРегЗадания( "ОчисткаЖурналовЗагрузкиДанных", лОписаниеОшибки );
		ВызватьИсключение;
	КонецПопытки
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВыполнитьОчисткуЖурнала(ИмяРегистра, СрокХраненияДанных)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1000
		|	ЖурналЗагрузкиДанных.Идентификатор КАК Идентификатор,
		|	ЖурналЗагрузкиДанных.Организация КАК Организация,
		|	ЖурналЗагрузкиДанных.Предприятие КАК Предприятие
		|ИЗ
		|	РегистрСведений." + ИмяРегистра + " КАК ЖурналЗагрузкиДанных
		|ГДЕ
		|	ЖурналЗагрузкиДанных.ДатаНачала < ДОБАВИТЬКДАТЕ(&ТекущаяДата, ДЕНЬ, -&СрокХраненияДанных)";
	
	Запрос.УстановитьПараметр("ТекущаяДата"       , ТекущаяДата());
	Запрос.УстановитьПараметр("СрокХраненияДанных", СрокХраненияДанных);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			НаборЗаписей = РегистрыСведений[ИмяРегистра].СоздатьНаборЗаписей();
			
			НаборЗаписей.Отбор.Идентификатор.Установить(Выборка.Идентификатор);
			НаборЗаписей.Отбор.Организация.Установить(Выборка.Организация);
			НаборЗаписей.Отбор.Предприятие.Установить(Выборка.Предприятие);
			
			НаборЗаписей.Записать(Истина);
			
		КонецЦикла;
		
		ВыполнитьОчисткуЖурнала(ИмяРегистра, СрокХраненияДанных);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьОчисткуЖурналаВыполненияРегламентныхЗаданий(СрокХраненияДанных)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1000
		|	ЖурналВыполненияРегламентныхЗаданий.Идентификатор КАК Идентификатор
		|ИЗ
		|	РегистрСведений.ЖурналВыполненияРегламентныхЗаданий КАК ЖурналВыполненияРегламентныхЗаданий
		|ГДЕ
		|	ЖурналВыполненияРегламентныхЗаданий.ДатаНачалаВыполнения < ДОБАВИТЬКДАТЕ(&ТекущаяДата, ДЕНЬ, -&СрокХраненияДанных)";
	
	Запрос.УстановитьПараметр("ТекущаяДата"       , ТекущаяДата());
	Запрос.УстановитьПараметр("СрокХраненияДанных", СрокХраненияДанных);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			НаборЗаписей = РегистрыСведений.ЖурналВыполненияРегламентныхЗаданий.СоздатьНаборЗаписей();
			
			НаборЗаписей.Отбор.Идентификатор.Установить(Выборка.Идентификатор);
			
			НаборЗаписей.Записать(Истина);
			
		КонецЦикла;
		
		ВыполнитьОчисткуЖурналаВыполненияРегламентныхЗаданий(СрокХраненияДанных);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьОчисткуЖурналаРегистрацииСостоянийЗаявокНаОформлениеОпераций(СрокХраненияДанных)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1000
	|	ЖурналЗагрузкиДанных.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрСведений.ЖурналРегистрацииСостоянийЗаявокНаОформлениеОпераций КАК ЖурналЗагрузкиДанных
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЖурналРегистрацииСостоянийЗаявокНаОформлениеОпераций.СрезПоследних КАК ТаблицаТекущийСтатусДокумента
	|		ПО ЖурналЗагрузкиДанных.ДокументСсылка = ТаблицаТекущийСтатусДокумента.ДокументСсылка
	|ГДЕ
	|	ЖурналЗагрузкиДанных.ДокументСсылка.Дата < ДОБАВИТЬКДАТЕ(&ТекущаяДата, ДЕНЬ, -&СрокХраненияДанных)
	|	И ЖурналЗагрузкиДанных.Регистратор <> ТаблицаТекущийСтатусДокумента.Регистратор
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЖурналЗагрузкиДанных.Период";
	
	Запрос.УстановитьПараметр("ТекущаяДата"       , ТекущаяДата());
	Запрос.УстановитьПараметр("СрокХраненияДанных", СрокХраненияДанных);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			НачатьТранзакцию();
			
			Попытка
				
				ДокументОбъект = Выборка.Регистратор.ПолучитьОбъект();
				ДокументОбъект.УстановитьПометкуУдаления(Истина);
				ДокументОбъект.Удалить();
				
				ЗафиксироватьТранзакцию();
				
			Исключение
				
				ОтменитьТранзакцию();
				
				// Записать ошибку в журнал регистрации.
				ЗаписьЖурналаРегистрации(НСтр("ru = 'Очистка Журнала состояний заявок на оформление операций'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
					УровеньЖурналаРегистрации.Ошибка,, Выборка.Регистратор, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				
			КонецПопытки;
			
		КонецЦикла;
		
		ВыполнитьОчисткуЖурналаРегистрацииСостоянийЗаявокНаОформлениеОпераций(СрокХраненияДанных)
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти