#Область ПрограммныйИнтерфейс

Процедура ЗаполнитьРеквизитыДокументовПоУмолчаниюОбработкаЗаполнения(Источник, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	ЗаполнитьРеквизитыДокументовПоУмолчанию(Источник, ДанныеЗаполнения, СтандартнаяОбработка);
	
КонецПроцедуры

// Функция - Получить значения реквизитов табличной части
//
// Параметры:
//  Объект				 - ДокументОбъект	 - объект, из которого происходит вызов функции.
//  ИмяТабличнойЧасти	 - Строка			 - Имя табличной части документа.
// 
// Возвращаемое значение:
//  Структура - список реквизитов табличной части, заполняемых по умолчанию.
//
Функция ПолучитьЗначенияРеквизитовТабличнойЧасти(Объект, ИмяТабличнойЧасти) Экспорт
	
	ПолноеИмя = Объект.Ссылка.Метаданные().ПолноеИмя();
	
	СтруктураРеквизитов = ПолучитьЗначенияРеквизитовЗаполнения(ПолноеИмя, ИмяТабличнойЧасти);
	
	Возврат СтруктураРеквизитов;
КонецФункции

// Проверяет существование реквизита шапки объекта
//
// Параметры
//  Вид  - Строка - Наименование объекта, как оно задано в конфигураторе
//  ИмяРеквизита  - Строка - Наименование реквизита объекта, как оно задано в конфигураторе
//
// Возвращаемое значение:
//   Булево   - Истина - реквизит существует, ложь - не существует.
//
Функция СуществуетРеквизитШапки(Вид, ИмяРеквизита)

	Возврат (Метаданные.Документы[Вид].Реквизиты.Найти(ИмяРеквизита)<>Неопределено);

КонецФункции // СуществуетРеквизитШапки()

// Заполняет безусловные значения по умолчанию в справочники и документы. 
//
// Параметры:
//  Объект				 - ДокументОбъект - Объект, который заполняется
//  ДанныеЗаполнения	 - Структура, Неопределено, ДокументСсылка, СправочникСсылка - Данные для заполнения реквизитов
//  СтандартнаяОбработка - Булево - Признак стандартной обработки заполнения объекта после
//                 выполнения данной процедуры
Процедура ЗаполнитьРеквизитыДокументовПоУмолчанию(Объект, ДанныеЗаполнения, СтандартнаяОбработка)

	Перем Вид;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ЭтоВводНаОсновании = Ложь;
		Если ОбщегоНазначения.ЭтоСсылка(ТипЗнч(ДанныеЗаполнения)) И ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
			ЭтоВводНаОсновании = Истина;
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
			Если ДанныеЗаполнения.Свойство("ВводНаОсновании") Тогда
				ЭтоВводНаОсновании = Истина;
			КонецЕсли;
		КонецЕсли;
		
		ПолноеИмя = Объект.Ссылка.Метаданные().ПолноеИмя();
		ЧастиИмени = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ПолноеИмя, ".");
		
		Вид = ЧастиИмени[1];
		
		Пользователь = ПользователиКлиентСервер.АвторизованныйПользователь();
		
		// Заполнение ответственного
		Если СуществуетРеквизитШапки(Вид, "Ответственный") И
			НЕ ЗначениеЗаполнено(Объект.Ответственный) Тогда
			
			Объект.Ответственный = Пользователь;
			
		КонецЕсли;
		
		Объект.Дата = ТекущаяДата();
		
		// Заполнение организации
		Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
			Объект.Организация = Пользователь.ОсновнаяОрганизация;
		КонецЕсли;
		
		Если Вид = "ПриходныеОперации" ИЛИ Вид = "ПриходныеОперацииСводно" Тогда
			Если Объект.УполномоченноеГашение Тогда
				Если НЕ ЗначениеЗаполнено(Объект.КонтрагентОтправитель) Тогда
					Объект.КонтрагентОтправитель = ОбщегоНазначенияУВСВызовСервера.КонтрагентПоОрганизации(Объект.Организация);
				КонецЕсли;
			Иначе
				Если НЕ ЗначениеЗаполнено(Объект.КонтрагентПолучатель) Тогда
					Объект.КонтрагентПолучатель = ОбщегоНазначенияУВССервер.КонтрагентПоОрганизации(Объект.Организация);
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли Вид = "ВСД" Тогда
			Если НЕ ЗначениеЗаполнено(Объект.КонтрагентПолучатель) Тогда
				Объект.КонтрагентПолучатель = ОбщегоНазначенияУВССервер.КонтрагентПоОрганизации(Объект.Организация);
			КонецЕсли;
		ИначеЕсли Вид = "ТранспортныеОперации" И
			НЕ ЗначениеЗаполнено(Объект.КонтрагентОтправитель) Тогда
			Объект.КонтрагентОтправитель = ОбщегоНазначенияУВССервер.КонтрагентПоОрганизации(Объект.Организация);
		ИначеЕсли НЕ ЗначениеЗаполнено(Объект.Контрагент) Тогда
			Объект.Контрагент = ОбщегоНазначенияУВССервер.КонтрагентПоОрганизации(Объект.Организация);
		КонецЕсли;
		
		Если ЭтоВводНаОсновании И Вид <> "ПриходныеОперации" Тогда
			// при вводе на основании реквизиты заполняются в обработчике документа
			Возврат;
		КонецЕсли;
		
		СтруктураРеквизитов = ПолучитьЗначенияРеквизитовЗаполнения(ПолноеИмя);
		
		Для каждого ТекКлюч Из СтруктураРеквизитов Цикл
		
			Если СуществуетРеквизитШапки(Вид, ТекКлюч.Ключ)
				И (НЕ ЗначениеЗаполнено(Объект[ТекКлюч.Ключ]) ИЛИ ТипЗнч(Объект[ТекКлюч.Ключ]) = Тип("Булево")) Тогда
			
				Объект[ТекКлюч.Ключ]=ТекКлюч.Значение;
			
			КонецЕсли;
		
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

// Получает значения реквизитов для безусловного заполнения при создании документа
//
// Параметры:
//  ПолноеИмя			 - Строка	 - Полное имя типа объекта
//  ИмяТабличнойЧасти	 - Строка	 - Имя табличной части объекта .
// 
// Возвращаемое значение:
//  Структура - список реквизитов табличной части, заполняемых по умолчанию.
//
Функция ПолучитьЗначенияРеквизитовЗаполнения(ПолноеИмя, ИмяТабличнойЧасти = "") Экспорт

	СтруктураРеквизитов = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	ИдентификаторыОбъектовМетаданных.Ссылка КАК Ссылка
	             |ПОМЕСТИТЬ ОбъектМетаданных
	             |ИЗ
	             |	Справочник.ИдентификаторыОбъектовМетаданных КАК ИдентификаторыОбъектовМетаданных
	             |ГДЕ
	             |	ИдентификаторыОбъектовМетаданных.ПолноеИмя = &ПолноеИмя
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ЗначениеРеквизитовПоУмолчанию.ИмяРеквизита КАК ИмяРеквизита,
	             |	ЗначениеРеквизитовПоУмолчанию.ЗначениеРеквизита КАК ЗначениеРеквизита
	             |ИЗ
	             |	РегистрСведений.ЗначениеРеквизитовПоУмолчанию КАК ЗначениеРеквизитовПоУмолчанию
	             |ГДЕ
	             |	ЗначениеРеквизитовПоУмолчанию.ВидОбъекта В
	             |			(ВЫБРАТЬ
	             |				ОбъектМетаданных.Ссылка
	             |			ИЗ
	             |				ОбъектМетаданных)
	             |	И ЗначениеРеквизитовПоУмолчанию.ИмяТабличнойЧасти = &ИмяТабличнойЧасти";
	
	Запрос.УстановитьПараметр("ПолноеИмя"        , ПолноеИмя);
	Запрос.УстановитьПараметр("ИмяТабличнойЧасти", ИмяТабличнойЧасти);
	
	РезультатВыборки = Запрос.Выполнить().Выбрать();
	Пока РезультатВыборки.Следующий() Цикл
		
		СтруктураРеквизитов.Вставить(РезультатВыборки.ИмяРеквизита, РезультатВыборки.ЗначениеРеквизита);
		
	КонецЦикла;
	Возврат СтруктураРеквизитов;
	
КонецФункции

#КонецОбласти
