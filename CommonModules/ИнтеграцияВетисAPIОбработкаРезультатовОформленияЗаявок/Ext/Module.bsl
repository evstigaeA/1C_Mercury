
#Область СервисныеФункции

Процедура ОбработкаРезультатовПроизводственныеОперации() Экспорт
	
	Попытка
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.ОбработкаОтветаПоПроизводственнымОперациям);
	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIОбработкаРезультатовОформленияЗаявок");
	
	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.ОбработкаРезультатовПроизводственныеОперации();
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьУспешноеВыполнениеРегЗадания( "ОбработкаОтветаПоПроизводственнымОперациям" );
	Иначе
		лОписаниеОшибки = "Ошибка создания защищенного объекта конфигурации ИнтеграцияВетисAPIОбработкаРезультатовОформленияЗаявок";
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьОшибкуВыполненияРегЗадания( "ОбработкаОтветаПоПроизводственнымОперациям", лОписаниеОшибки );
	КонецЕсли;
	Исключение
		лОписаниеОшибки = ОписаниеОшибки();
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьОшибкуВыполненияРегЗадания( "ОбработкаОтветаПоПроизводственнымОперациям", лОписаниеОшибки );
		ВызватьИсключение;
	КонецПопытки
	
КонецПроцедуры

Процедура ОбработкаРезультатовТранспортныеОперации() Экспорт
	
	Попытка
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.ОбработкаОтветаПоТранспортнымОперациям);
	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIОбработкаРезультатовОформленияЗаявок");
	
	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.ОбработкаРезультатовТранспортныеОперации();
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьУспешноеВыполнениеРегЗадания( "ОбработкаОтветаПоТранспортнымОперациям" );
	Иначе
		лОписаниеОшибки = "Ошибка создания защищенного объекта конфигурации ИнтеграцияВетисAPIОбработкаРезультатовОформленияЗаявок";
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьОшибкуВыполненияРегЗадания( "ОбработкаОтветаПоТранспортнымОперациям", лОписаниеОшибки );
	КонецЕсли;
	Исключение
		лОписаниеОшибки = ОписаниеОшибки();
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьОшибкуВыполненияРегЗадания( "ОбработкаОтветаПоТранспортнымОперациям", лОписаниеОшибки );
		ВызватьИсключение;
	КонецПопытки
	
КонецПроцедуры

Процедура ОбработкаРезультатовПриходныеОперации() Экспорт
	
	Попытка
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.ОбработкаОтветаПоПриходнымОперациям);
	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIОбработкаРезультатовОформленияЗаявок");
	
	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.ОбработкаРезультатовПриходныеОперации();
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьУспешноеВыполнениеРегЗадания( "ОбработкаОтветаПоПриходнымОперациям" );
	Иначе
		лОписаниеОшибки = "Ошибка создания защищенного объекта конфигурации ИнтеграцияВетисAPIОбработкаРезультатовОформленияЗаявок";
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьОшибкуВыполненияРегЗадания( "ОбработкаОтветаПоПриходнымОперациям", лОписаниеОшибки );
	КонецЕсли;
	Исключение
		лОписаниеОшибки = ОписаниеОшибки();
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьОшибкуВыполненияРегЗадания( "ОбработкаОтветаПоПриходнымОперациям", лОписаниеОшибки );
		ВызватьИсключение;
	КонецПопытки
	
КонецПроцедуры

Процедура ОбработкаРезультатовИнвентаризации() Экспорт
	
	Попытка
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.ОбработкаОтветаПоИнвентаризациям);
	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIОбработкаРезультатовОформленияЗаявок");
	
	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.ОбработкаРезультатовИнвентаризации();
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьУспешноеВыполнениеРегЗадания( "ОбработкаОтветаПоИнвентаризациям" );
	Иначе
		лОписаниеОшибки = "Ошибка создания защищенного объекта конфигурации ИнтеграцияВетисAPIОбработкаРезультатовОформленияЗаявок";
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьОшибкуВыполненияРегЗадания( "ОбработкаОтветаПоИнвентаризациям", лОписаниеОшибки );
	КонецЕсли;
	Исключение
		лОписаниеОшибки = ОписаниеОшибки();
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьОшибкуВыполненияРегЗадания( "ОбработкаОтветаПоИнвентаризациям", лОписаниеОшибки );
		ВызватьИсключение;
	КонецПопытки
	
КонецПроцедуры

Процедура ОбработкаРезультатовОбъединениеЗаписейСкладскогоЖурнала() Экспорт
	
	Попытка
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.ОбработкаОтветаПоОбъединениямЗаписейСкладскогоЖурнала);
	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIОбработкаРезультатовОформленияЗаявок");
	
	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.ОбработкаРезультатовОбъединениеЗаписейСкладскогоЖурнала();
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьУспешноеВыполнениеРегЗадания( "ОбработкаОтветаПоОбъединениямЗаписейСкладскогоЖурнала" );
	Иначе
		лОписаниеОшибки = "Ошибка создания защищенного объекта конфигурации ИнтеграцияВетисAPIОбработкаРезультатовОформленияЗаявок";
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьОшибкуВыполненияРегЗадания( "ОбработкаОтветаПоОбъединениямЗаписейСкладскогоЖурнала", лОписаниеОшибки );
	КонецЕсли;
	Исключение
		лОписаниеОшибки = ОписаниеОшибки();
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьОшибкуВыполненияРегЗадания( "ОбработкаОтветаПоОбъединениямЗаписейСкладскогоЖурнала", лОписаниеОшибки );
		ВызватьИсключение;
	КонецПопытки
	
КонецПроцедуры

Процедура ОбработкаРезультатовАннулированияВСД() Экспорт
	
	Попытка
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.ОбработкаОтветаПоАннулированиюВСД);
	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIОбработкаРезультатовОформленияЗаявок");
	
	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.ОбработкаРезультатовАннулированияВСД();
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьУспешноеВыполнениеРегЗадания( "ОбработкаОтветаПоАннулированиюВСД" );
	Иначе
		лОписаниеОшибки = "Ошибка создания защищенного объекта конфигурации ИнтеграцияВетисAPIОбработкаРезультатовОформленияЗаявок";
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьОшибкуВыполненияРегЗадания( "ОбработкаОтветаПоАннулированиюВСД", лОписаниеОшибки );
	КонецЕсли;
	Исключение
		лОписаниеОшибки = ОписаниеОшибки();
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьОшибкуВыполненияРегЗадания( "ОбработкаОтветаПоАннулированиюВСД", лОписаниеОшибки );
		ВызватьИсключение;
	КонецПопытки
	
КонецПроцедуры

Процедура ОбработкаОтветаПоВнесениюНомеровТранспортныхСредств() Экспорт
	
	Попытка
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.ОбработкаОтветаПоВнесениюНомеровТранспортныхСредств);
	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIОбработкаРезультатовОформленияЗаявок");
	
	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.ОбработкаОтветаПоВнесениюНомеровТранспортныхСредств();
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьУспешноеВыполнениеРегЗадания( "ОбработкаОтветаПоВнесениюНомеровТранспортныхСредств" );
	Иначе
		лОписаниеОшибки = "Ошибка создания защищенного объекта конфигурации ИнтеграцияВетисAPIОбработкаРезультатовОформленияЗаявок";
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьОшибкуВыполненияРегЗадания( "ОбработкаОтветаПоВнесениюНомеровТранспортныхСредств", лОписаниеОшибки );
	КонецЕсли;
	Исключение
		лОписаниеОшибки = ОписаниеОшибки();
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьОшибкуВыполненияРегЗадания( "ОбработкаОтветаПоВнесениюНомеровТранспортныхСредств", лОписаниеОшибки );
		ВызватьИсключение;
	КонецПопытки
	
КонецПроцедуры

Процедура ОбработкаОтветаПоВнесениюЛабораторныхИсследований() Экспорт
	
	Попытка
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.ОбработкаОтветаПоВнесениюЛабораторныхИсследований);
	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIОбработкаРезультатовОформленияЗаявок");
	
	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.ОбработкаОтветаПоВнесениюЛабораторныхИсследований();
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьУспешноеВыполнениеРегЗадания( "ОбработкаОтветаПоВнесениюЛабораторныхИсследований" );
	Иначе
		лОписаниеОшибки = "Ошибка создания защищенного объекта конфигурации ИнтеграцияВетисAPIОбработкаРезультатовОформленияЗаявок";
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьОшибкуВыполненияРегЗадания( "ОбработкаОтветаПоВнесениюЛабораторныхИсследований", лОписаниеОшибки );
	КонецЕсли;
	Исключение
		лОписаниеОшибки = ОписаниеОшибки();
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьОшибкуВыполненияРегЗадания( "ОбработкаОтветаПоВнесениюЛабораторныхИсследований", лОписаниеОшибки );
		ВызватьИсключение;
	КонецПопытки
	
КонецПроцедуры

#КонецОбласти

#Область ОбрабоктаЗаявокБезЗаписиВРегистр

#Область Регионализация

Функция ОбработатьОтветНаВозможностьОсуществленияПеревозки(ПараметрыПодключения, ТаблицаДанных, МассивИдентификаторовЗаявок) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIОбработкаРезультатовОформленияЗаявок");

	Если Не ОбъектСЛК = Неопределено Тогда
		Возврат ОбъектСЛК.ОбработатьОтветНаВозможностьОсуществленияПеревозки(ПараметрыПодключения, ТаблицаДанных, МассивИдентификаторовЗаявок);
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

#КонецОбласти

#Область ВСД

#Область ПолучениеДанныхПоИзмененнымВСД

Процедура ОбработатьРезультатЗаявкиНаПолученияИзмененныхДанныхПоВСД(ДанныеЗаявки, РезультатВыполнения) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIОбработкаРезультатовОформленияЗаявок");

	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.ОбработатьРезультатЗаявкиНаПолученияИзмененныхДанныхПоВСД(ДанныеЗаявки, РезультатВыполнения);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ПолучениеДанныхВСДПоИдентификатору

Процедура ОбработатьРезультатЗаявкиНаПолучениеДанныхВСД(ДанныеЗаявки) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIОбработкаРезультатовОформленияЗаявок");

	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.ОбработатьРезультатЗаявкиНаПолучениеДанныхВСД(ДанныеЗаявки);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ПолучениеСпискаВсехВСДПредприятия

Процедура ОбработатьРезультатЗаявкиНаПолучениеСпискаВсехВСДПредприятия(ДанныеЗаявки, РезультатВыполнения) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIОбработкаРезультатовОформленияЗаявок");

	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.ОбработатьРезультатЗаявкиНаПолучениеСпискаВсехВСДПредприятия(ДанныеЗаявки, РезультатВыполнения);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ЗаписиСкласдкогоЖурнала

#Область ПолучениеАктуальныхЗаписейСкладскогоЖурнала

Процедура ОбработатьОтветНаПолучениеАктуальногоСпискаЗаписейСкладскогоЖурнала(ДанныеЗаявки, РезультатВыполнения) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIОбработкаРезультатовОформленияЗаявок");

	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.ОбработатьОтветНаПолучениеАктуальногоСпискаЗаписейСкладскогоЖурнала(ДанныеЗаявки, РезультатВыполнения);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ПолучениеЗаписиСкладскогоЖурналаПоИдентификатору

Процедура ОбработатьРезультатЗаявкиНаПолученияДанныхЗаписиСкладскогоЖурнала(ДанныеЗаявки) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIОбработкаРезультатовОформленияЗаявок");

	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.ОбработатьРезультатЗаявкиНаПолученияДанныхЗаписиСкладскогоЖурнала(ДанныеЗаявки);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ПолучениеИзмененийЗаписейСкладскогоЖурнала

Процедура ОбработатьРезультатЗаявкиНаПолученияИзмененныхДанныхПоЗаписямСкладскогоЖурнала(ДанныеЗаявки, РезультатВыполнения) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIОбработкаРезультатовОформленияЗаявок");

	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.ОбработатьРезультатЗаявкиНаПолученияИзмененныхДанныхПоЗаписямСкладскогоЖурнала(ДанныеЗаявки, РезультатВыполнения);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область Пользователи

Процедура ОбработатьРезультатЗаявки(ПараметрыПодключения, РеквизитыСообщения, ДополнительныеПараметры = Неопределено) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIОбработкаРезультатовОформленияЗаявок");

	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.ОбработатьРезультатЗаявки(ПараметрыПодключения, РеквизитыСообщения, ДополнительныеПараметры);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецОбласти
