
#Область ОбработкаСправочникаВидыПродукции

Функция ПолучитьВидПродукции(ПараметрыПодключения, GUID = "", ТипПродукции = Неопределено, ТекстОшибки = "") Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIБазоваяНСИ");

	Если Не ОбъектСЛК = Неопределено Тогда
		Возврат ОбъектСЛК.ПолучитьВидПродукции(ПараметрыПодключения, GUID, ТипПродукции, ТекстОшибки);
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

#КонецОбласти

#Область ОбработкаСправочникаПодвидыПродукции

Функция ПолучитьПодвидПродукции(ПараметрыПодключения, GUID = "", ВидПродукции = Неопределено, ТекстОшибки = "") Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIБазоваяНСИ");

	Если Не ОбъектСЛК = Неопределено Тогда
		Возврат ОбъектСЛК.ПолучитьПодвидПродукции(ПараметрыПодключения, GUID, ВидПродукции, ТекстОшибки);
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

#КонецОбласти

#Область ОбработкаСправочникаКлассификаторЕдиницИзмерения

Функция ПолучитьЕдиницуИзмерения(ПараметрыПодключения, GUID = "", ТекстОшибки = "") Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIБазоваяНСИ");

	Если Не ОбъектСЛК = Неопределено Тогда
		Возврат ОбъектСЛК.ПолучитьЕдиницуИзмерения(ПараметрыПодключения, GUID, ТекстОшибки);
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

#КонецОбласти

#Область ОбработкаСправочникаУпаковки

Функция ПолучитьУпаковку(ПараметрыПоиска, ТекстОшибки = "") Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIБазоваяНСИ");

	Если Не ОбъектСЛК = Неопределено Тогда
		Возврат ОбъектСЛК.ПолучитьУпаковку(ПараметрыПоиска, ТекстОшибки);
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

#КонецОбласти

#Область ОбработкаСправочникаСтраныМира

Функция ПолучитьСтрануМира(ПараметрыПодключения, GUID = "", ТекстОшибки = "") Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIБазоваяНСИ");

	Если Не ОбъектСЛК = Неопределено Тогда
		Возврат ОбъектСЛК.ПолучитьСтрануМира(ПараметрыПодключения, GUID, ТекстОшибки);
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

#КонецОбласти

#Область ОбработкаСправочникаНазначениеГрузов

Функция ПолучитьНазначениеГруза(ПараметрыПодключения, GUID = "", ТекстОшибки = "") Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIБазоваяНСИ");

	Если Не ОбъектСЛК = Неопределено Тогда
		Возврат ОбъектСЛК.ПолучитьНазначениеГруза(ПараметрыПодключения, GUID, ТекстОшибки);
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

#КонецОбласти

#Область ОбработкаСправочникаЗаболевания

Функция ПолучитьЗаболевание(ПараметрыПодключения, GUID = "", ДанныеЗаполнения = Неопределено, ТекстОшибки = "") Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIБазоваяНСИ");

	Если Не ОбъектСЛК = Неопределено Тогда
		Возврат ОбъектСЛК.ПолучитьЗаболевание(ПараметрыПодключения, GUID, ДанныеЗаполнения, ТекстОшибки);
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

#КонецОбласти

#Область ОбновлениеСправочникаУсловияПеремещения

Функция ПолучитьУсловиеПеремещения(ПараметрыПодключения, УсловиеXDTO, ТекстОшибки = "") Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIБазоваяНСИ");

	Если Не ОбъектСЛК = Неопределено Тогда
		Возврат ОбъектСЛК.ПолучитьУсловиеПеремещения(ПараметрыПодключения, УсловиеXDTO, ТекстОшибки);
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

#КонецОбласти

#Область РегламентноеЗадание

Процедура РегламентноеЗаданиеЗагрузкаБазовойНСИИСМеркурий(ВыводитьСообщения = Ложь) Экспорт
	
	Попытка
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.ЗагрузкаБазовойНСИИСМеркурий);
	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIБазоваяНСИ");
	
	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.РегламентноеЗаданиеЗагрузкаБазовойНСИИСМеркурий(ВыводитьСообщения);
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьУспешноеВыполнениеРегЗадания( "ЗагрузкаБазовойНСИИСМеркурий" );
	Иначе
		лПараметрыЗадания = Новый Структура("ВыводитьСообщения",ВыводитьСообщения);
		лОписаниеОшибки = "Ошибка создания защищенного объекта конфигурации ИнтеграцияВетисAPIБазоваяНСИ";
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьОшибкуВыполненияРегЗадания( "ЗагрузкаБазовойНСИИСМеркурий", лОписаниеОшибки, лПараметрыЗадания );
	КонецЕсли;
	Исключение
		лОписаниеОшибки = ОписаниеОшибки();
		лПараметрыЗадания = Новый Структура("ВыводитьСообщения",ВыводитьСообщения);
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьОшибкуВыполненияРегЗадания( "ЗагрузкаБазовойНСИИСМеркурий", лОписаниеОшибки, лПараметрыЗадания );
		ВызватьИсключение;
	КонецПопытки
	
КонецПроцедуры

#КонецОбласти
