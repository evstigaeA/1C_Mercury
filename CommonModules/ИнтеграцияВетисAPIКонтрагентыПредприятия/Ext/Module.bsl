
#Область ОбработкаСправочникаКонтрагенты

Функция ПолучитьКонтрагента(ПараметрыПодключения, GUID = "", UUID = "", ИНН = "", ТекстОшибки = "", БезусловноеСоздание = Истина) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIКонтрагентыПредприятия");

	Если Не ОбъектСЛК = Неопределено Тогда
		Возврат ОбъектСЛК.ПолучитьКонтрагента(ПараметрыПодключения, GUID, UUID, ИНН, ТекстОшибки, БезусловноеСоздание);
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

Процедура ФоновоеЗаданиеПолучениеСпискаКонтрагентовПоФильтру(Параметры, АдресРезультата) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIКонтрагентыПредприятия");

	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.ФоновоеЗаданиеПолучениеСпискаКонтрагентовПоФильтру(Параметры, АдресРезультата);
	КонецЕсли;

КонецПроцедуры

Процедура ФоновоеЗаданиеЗагрузкаСпискаПредприятийКонтрагента(Параметры, АдресРезультата) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIКонтрагентыПредприятия");

	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.ФоновоеЗаданиеЗагрузкаСпискаПредприятийКонтрагента(Параметры, АдресРезультата);
	КонецЕсли;

КонецПроцедуры

Функция ЗарегистрироватьОбновитьДанныеКонтрагента(МассивКонтрагентов, Организация, Пользователь, ОснованиеДобавленияИзменения) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIКонтрагентыПредприятия");

	Если Не ОбъектСЛК = Неопределено Тогда
		Возврат ОбъектСЛК.ЗарегистрироватьОбновитьДанныеКонтрагента(МассивКонтрагентов, Организация, Пользователь, ОснованиеДобавленияИзменения);
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

Функция ПолучитьАктуальныеДанныеПоКонтрагентам(МассивКонтрагентов) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIКонтрагентыПредприятия");

	Если Не ОбъектСЛК = Неопределено Тогда
		Возврат ОбъектСЛК.ПолучитьАктуальныеДанныеПоКонтрагентам(МассивКонтрагентов);
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

Процедура СоздатьОбновитьДанныеКонтрагентов(ДанныеКонтрагентов) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIКонтрагентыПредприятия");

	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.СоздатьОбновитьДанныеКонтрагентов(ДанныеКонтрагентов);
	КонецЕсли;

КонецПроцедуры

Функция ПолучитьДанныеКонтрагентаПоФильтру(ИНН = "", КПП = "", ОГРН = "", ПолноеНаименование = "", GUID = "") Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIКонтрагентыПредприятия");

	Если Не ОбъектСЛК = Неопределено Тогда
		Возврат ОбъектСЛК.ПолучитьДанныеКонтрагентаПоФильтру(ИНН, КПП, ОГРН, ПолноеНаименование, GUID);
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

Процедура АктуализацияСправочникаКонтрагенты() Экспорт
	
	Попытка
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.АктуализацияСправочникаКонтрагентов);
	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIКонтрагентыПредприятия");
	
	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.АктуализацияСправочникаКонтрагенты();
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьУспешноеВыполнениеРегЗадания( "АктуализацияСправочникаКонтрагентов" );
	Иначе
		лОписаниеОшибки = "Ошибка создания защищенного объекта конфигурации ИнтеграцияВетисAPIКонтрагентыПредприятия";
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьОшибкуВыполненияРегЗадания( "АктуализацияСправочникаКонтрагентов", лОписаниеОшибки );
	КонецЕсли;
	Исключение
		лОписаниеОшибки = ОписаниеОшибки();
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьОшибкуВыполненияРегЗадания( "АктуализацияСправочникаКонтрагентов", лОписаниеОшибки );
		ВызватьИсключение;
	КонецПопытки
	
КонецПроцедуры

#КонецОбласти

#Область ОбработкаСправочникаПредприятия

Функция ПолучитьПредприятие(ПараметрыПодключения, GUID = "", UUID = "", ТекстОшибки = "", БезусловноеСоздание = Истина) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIКонтрагентыПредприятия");

	Если Не ОбъектСЛК = Неопределено Тогда
		Возврат ОбъектСЛК.ПолучитьПредприятие(ПараметрыПодключения, GUID, UUID, ТекстОшибки, БезусловноеСоздание);
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

Процедура ФоновоеЗаданиеПолучениеСпискаПредприятийПоФильтру(Параметры, АдресРезультата) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIКонтрагентыПредприятия");

	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.ФоновоеЗаданиеПолучениеСпискаПредприятийПоФильтру(Параметры, АдресРезультата);
	КонецЕсли;

КонецПроцедуры

Функция ЗарегистрироватьОбновитьДанныеПредприятий(МассивПредприятий, Организация, Пользователь, ОснованиеДобавленияИзменения) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIКонтрагентыПредприятия");

	Если Не ОбъектСЛК = Неопределено Тогда
		Возврат ОбъектСЛК.ЗарегистрироватьОбновитьДанныеПредприятий(МассивПредприятий, Организация, Пользователь, ОснованиеДобавленияИзменения);
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

Функция ПолучитьАктуальныеДанныеПредприятий(МассивПредприятий) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIКонтрагентыПредприятия");

	Если Не ОбъектСЛК = Неопределено Тогда
		Возврат ОбъектСЛК.ПолучитьАктуальныеДанныеПредприятий(МассивПредприятий);
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

Процедура СоздатьОбновитьДанныеПредприятий(ДанныеПредприятий, Контрагент = Неопределено, ТекстОшибки = "") Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIКонтрагентыПредприятия");

	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.СоздатьОбновитьДанныеПредприятий(ДанныеПредприятий, Контрагент, ТекстОшибки);
	КонецЕсли;

КонецПроцедуры

Процедура АктуализацияСправочникаПредприятия() Экспорт
	
	Попытка
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.АктуализацияСправочникаПредприятий);
	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIКонтрагентыПредприятия");
	
	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.АктуализацияСправочникаПредприятия();
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьУспешноеВыполнениеРегЗадания( "АктуализацияСправочникаПредприятий" );
	Иначе
		лОписаниеОшибки = "Ошибка создания защищенного объекта конфигурации ИнтеграцияВетисAPIКонтрагентыПредприятия";
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьОшибкуВыполненияРегЗадания( "АктуализацияСправочникаПредприятий", лОписаниеОшибки );
	КонецЕсли;
	Исключение
		лОписаниеОшибки = ОписаниеОшибки();
		ДМ_ИнтеграцияВетисAPIСервер.ЗарегистрироватьОшибкуВыполненияРегЗадания( "АктуализацияСправочникаПредприятий", лОписаниеОшибки );
		ВызватьИсключение;
	КонецПопытки
	
КонецПроцедуры

#КонецОбласти

#Область ВзаимосвязиКонтрагентовИПредприятий

Процедура ИзменитьСвязьМеждуКонтрагентомИПредприятиями(Контрагент, ТаблицаПредприятий, Организация, Пользователь, Удаление) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIКонтрагентыПредприятия");

	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.ИзменитьСвязьМеждуКонтрагентомИПредприятиями(Контрагент, ТаблицаПредприятий, Организация, Пользователь, Удаление);
	КонецЕсли;

КонецПроцедуры

Процедура ФоновоеЗаданиеПолучениеСвязиКонтрагентПредприятиеПоGLN(СписокGLN, АдресРезультата) Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIКонтрагентыПредприятия");

	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.ФоновоеЗаданиеПолучениеСвязиКонтрагентПредприятиеПоGLN(СписокGLN, АдресРезультата);
	КонецЕсли;

КонецПроцедуры

Процедура ЗагрузитьСвязиКонтрагентовПредприятийПоGLN(ДанныеДляЗагрузки, ТекстОшибки = "") Экспорт

	ОбъектСЛК = ОбщегоНазначенияУВССервер.СоздатьОбъектСЛК("ИнтеграцияВетисAPIКонтрагентыПредприятия");

	Если Не ОбъектСЛК = Неопределено Тогда
		ОбъектСЛК.ЗагрузитьСвязиКонтрагентовПредприятийПоGLN(ДанныеДляЗагрузки, ТекстОшибки);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти
