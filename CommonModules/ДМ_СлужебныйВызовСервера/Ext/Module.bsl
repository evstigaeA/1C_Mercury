
// Возвращает основной принтер для текущего пользователя для основного предприятия пользователя
//
// Параметры:
//
// Возвращаемое значение:
//   Строка   - имя основного принтера для пользователя
//
Функция ПолучитьИмяПринтераПоУмолчанию() Экспорт

	УстановитьПривилегированныйРежим( Истина );
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДМ_Принтеры.Основной КАК Основной,
		|	ДМ_Принтеры.Принтер КАК Принтер
		|ИЗ
		|	РегистрСведений.ДМ_Принтеры КАК ДМ_Принтеры
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Предприятия КАК Предприятия
		|		ПО ДМ_Принтеры.Склад = Предприятия.Ссылка
		|ГДЕ
		|	Предприятия.ДМ_Организация = &ОсновнаяОрганизация
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДМ_Принтеры.Основной УБЫВ,
		|	ДМ_Принтеры.Принтер";
	
	Запрос.УстановитьПараметр("ОсновнаяОрганизация", ОбщегоНазначенияУВССервер.ОрганизацияТекущегоПользователя());
	лРезультат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим( Ложь );
	
	Если лРезультат.Пустой() Тогда
		Возврат "";
	КонецЕсли;
	
	лВыборка = лРезультат.Выбрать();
	лПринтер = "";
	Пока лВыборка.Следующий() Цикл
	
		Если ЗначениеЗаполнено( лВыборка.Принтер ) Тогда
			лПринтер = лВыборка.Принтер;
			Прервать;
		КонецЕсли;
	
	КонецЦикла;
	
	Возврат лПринтер;

КонецФункции // ПолучитьИмяПринтераПоУмолчанию()

// Возвращает список принтеров для текущего пользователя для основного предприятия пользователя
//
// Параметры:
//
// Возвращаемое значение:
//   Массив   - массив строк с именами принтеров для пользователя
//
Функция ПолучитьСписокПринтеровДляПользователя() Экспорт

	УстановитьПривилегированныйРежим( Истина );
	
	лМассив = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДМ_Принтеры.Основной КАК Основной,
		|	ДМ_Принтеры.Принтер КАК Принтер
		|ИЗ
		|	РегистрСведений.ДМ_Принтеры КАК ДМ_Принтеры
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Предприятия КАК Предприятия
		|		ПО ДМ_Принтеры.Склад = Предприятия.Ссылка
		|ГДЕ
		|	Предприятия.ДМ_Организация = &ОсновнаяОрганизация
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДМ_Принтеры.Основной УБЫВ,
		|	ДМ_Принтеры.Принтер";
	
	Запрос.УстановитьПараметр("ОсновнаяОрганизация", ОбщегоНазначенияУВССервер.ОрганизацияТекущегоПользователя());
	лРезультат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим( Ложь );
	
	Если лРезультат.Пустой() Тогда
		Возврат лМассив;
	КонецЕсли;
	
	лВыборка = лРезультат.Выбрать();
	Пока лВыборка.Следующий() Цикл
	
		Если ЗначениеЗаполнено( лВыборка.Принтер ) Тогда
			лМассив.Добавить( лВыборка.Принтер );
		КонецЕсли;
	
	КонецЦикла;
	
	Возврат лМассив;

КонецФункции // ПолучитьСписокПринтеровДляПользователя()

// Возвращает текст общего макета SetDefaultPrinter_ps1 в виде строки
//
// Параметры:
//  Нет
//
// Возвращаемое значение:
//   Строка   - содержимое общего макета SetDefaultPrinter_ps1
//
Функция ПолучитьОбщийМакетSetDefaultPrinter_ps1() Экспорт

	ТекстСкрипта = ПолучитьОбщийМакет("SetDefaultPrinter_ps1").ПолучитьТекст();
	Возврат ТекстСкрипта;

КонецФункции // ПолучитьОбщийМакетSetDefaultPrinter_ps1()

// Проверяет, что у пользователя есть роль в одном из профилей тех групп доступа в которых он участвует,
// например, роль ПросмотрЖурналаРегистрации, роль ПечатьНепроведенныхДокументов.
//
// Если указан объект (или наборы значений доступа), тогда дополнительно проверяется,
// что группа доступа предоставляет право Чтение указанного объекта (или набор значений доступа разрешен).
//
// Параметры:
//  Роль           - Строка - имя роли.
//
//  СсылкаНаОбъект - Ссылка - на объект для которого заполняются наборы значений доступа
//                   для проверки права Чтение.
//                 - ТаблицаЗначений - таблица произвольных наборов значений доступа с колонками:
//                     * НомерНабора     - Число  - номер, группирующий несколько строк в отдельный набор.
//                     * ВидДоступа      - Строка - имя вида доступа, указанного в переопределяемом модуле.
//                     * ЗначениеДоступа - Ссылка - на тип значения доступа указанного в переопределяемом модуле.
//                       Пустую подготовленную таблицу можно получить с помощью функции.
//                       ТаблицаНаборыЗначенийДоступа общего модуля УправлениеДоступом
//                       (колонки Чтение, Изменение не заполнять).
//
//  Пользователь   - СправочникСсылка.Пользователи, СправочникСсылка.ВнешниеПользователи, Неопределено - если
//                   параметр не указан, тогда право проверяется для текущего пользователя.
//
// Возвращаемое значение:
//  Булево - если Истина, тогда у пользователя есть роль с учетом ограничений.
//
Функция ЕстьРоль(Знач Роль, Знач СсылкаНаОбъект = Неопределено, Знач Пользователь = Неопределено) Экспорт
	Возврат УправлениеДоступом.ЕстьРоль(Роль, СсылкаНаОбъект, Пользователь);
КонецФункции

