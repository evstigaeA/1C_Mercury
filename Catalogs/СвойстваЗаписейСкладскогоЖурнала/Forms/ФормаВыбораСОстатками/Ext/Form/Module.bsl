#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ИнициализацияФормы();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийСписка

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СписокПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ВыполнитьВыбор();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура ИерархияПродукцииПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ИерархияПродукции.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураОтбора = Новый Структура("ТипПродукции, ВидПродукции, ПодвидПродукции");
	
	ЗаполнитьЗначенияСвойств(СтруктураОтбора, ТекущиеДанные);
	
	Для Каждого ТекЭлемент Из СтруктураОтбора Цикл
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокПродукции, ТекЭлемент.Ключ,
				ТекЭлемент.Значение, ВидСравненияКомпоновкиДанных.Равно, Строка(ТипЗнч(ТекЭлемент.Значение)), ЗначениеЗаполнено(ТекЭлемент.Значение));
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ИерархияПродукцииПередРазворачиванием(Элемент, Строка, Отказ)
	
	Если Строка.ИмяГруппировки = "ПодвидПродукции" Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПродукцииПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПродукцииПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьЗначениеЗаписиСкладскогоЖурнала(Команда)
	
	ВыполнитьВыбор();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИнициализацияФормы()
	
	Параметры.Свойство("Организация", Организация);
	Параметры.Свойство("Предприятие", Предприятие);
	
	МножественныйВыбор = Параметры.МножественныйВыбор;
	
	Если ТипЗнч(Параметры.Документ) = Тип("ДокументСсылка.ОбъединениеЗаписейСкладскогоЖурнала") Тогда
		
		ТекстЗапросаДляОбъединения = ТекстЗапросаДинамическогоСпискаДляОбъединенияПродукции();
		
		СписокПродукции.ТекстЗапроса   = СписокПродукции.ТекстЗапроса + ТекстЗапросаДляОбъединения;
		ИерархияПродукции.ТекстЗапроса = ИерархияПродукции.ТекстЗапроса + ТекстЗапросаДляОбъединения;
		
		МассивРазрешенныхСтатусов = ИнтеграцияВетисAPIСлужебныйПовтИсп.РазрешенныеСтатусыЗаписейСкладскогоЖурналаДляВыполненияОпераций();
		
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокПродукции, "ДополнительныйОтбор"      , Истина);
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокПродукции, "ВырабатываемаяПродукция"  , Параметры.ВырабатываемаяПродукция);
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокПродукции, "МассивРазрешенныхСтатусов", МассивРазрешенныхСтатусов);
		
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ИерархияПродукции, "ДополнительныйОтбор"      , Истина);
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ИерархияПродукции, "ВырабатываемаяПродукция"  , Параметры.ВырабатываемаяПродукция);
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ИерархияПродукции, "МассивРазрешенныхСтатусов", МассивРазрешенныхСтатусов);
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокПродукции, "Организация", Параметры.Организация);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокПродукции, "Предприятие", Параметры.Предприятие);
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ИерархияПродукции, "Организация", Организация);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ИерархияПродукции, "Предприятие", Предприятие);
	
	Если ЗначениеЗаполнено(Параметры.Заголовок) Тогда
		ЭтаФорма.АвтоЗаголовок = Ложь;
		ЭтаФорма.Заголовок     = Параметры.Заголовок;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ТекстЗапросаДинамическогоСпискаДляОбъединенияПродукции()
	
	ТекстЗапроса = "
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВерсииЗаписейСкладскогоЖурнала КАК ВерсииЗаписейСкладскогоЖурнала
			|		ПО (СвойстваЗаписейСкладскогоЖурнала.Ссылка = ВерсииЗаписейСкладскогоЖурнала.ЗаписьСкладскогоЖурнала)
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СвойстваЗаписейСкладскогоЖурнала.ПроизводителиПродукции КАК СвойстваЗаписейСкладскогоЖурналаПроизводителиПродукции
			|		ПО (СвойстваЗаписейСкладскогоЖурнала.Ссылка = СвойстваЗаписейСкладскогоЖурналаПроизводителиПродукции.Ссылка)
			|{ГДЕ
			|	(ВерсииЗаписейСкладскогоЖурнала.СтатусВерсииЗаписиСкладскогоЖурнала В (&МассивРазрешенныхСтатусов)),
			|	(ВЫБОР
			|				КОГДА &ВырабатываемаяПродукция
			|					ТОГДА СвойстваЗаписейСкладскогоЖурналаПроизводителиПродукции.Производитель = &Предприятие
			|				ИНАЧЕ НЕ &Предприятие В (СвойстваЗаписейСкладскогоЖурналаПроизводителиПродукции.Производитель)
			|			КОНЕЦ
			|			И СвойстваЗаписейСкладскогоЖурнала.ФорматДатыВыработки <> ЗНАЧЕНИЕ(Перечисление.СпособыЗаданияДаты.Строка)
			|			И СвойстваЗаписейСкладскогоЖурнала.ФорматСрокаГодности <> ЗНАЧЕНИЕ(Перечисление.СпособыЗаданияДаты.Строка))}";
	
	Возврат ТекстЗапроса;
	
КонецФункции

&НаКлиенте
Процедура ВыполнитьВыбор()
	
	Если МножественныйВыбор Тогда
		
		ОповеститьОВыборе(Элементы.СписокПродукции.ВыделенныеСтроки);
		
	Иначе
		
		ОповеститьОВыборе(Элементы.СписокПродукции.ТекущиеДанные);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	ИнтеграцияВетисAPIСервер.УстановитьУсловноеОформлениеФорматовДат(СписокПродукции);
	
КонецПроцедуры

#КонецОбласти