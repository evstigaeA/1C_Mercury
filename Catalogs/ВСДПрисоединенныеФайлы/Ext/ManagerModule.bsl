#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ГрупповоеИзменениеОбъектов

// Возвращает реквизиты объекта, которые разрешается редактировать
// с помощью обработки группового изменения реквизитов.
//
// Возвращаемое значение:
//  Массив - список имен реквизитов объекта.
Функция РеквизитыРедактируемыеВГрупповойОбработке() Экспорт
	
	Возврат РаботаСФайлами.РеквизитыРедактируемыеВГрупповойОбработке();
	
КонецФункции

// Конец СтандартныеПодсистемы.ГрупповоеИзменениеОбъектов

#КонецОбласти

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// Регистрирует данные для обработчика обновления 2.0.8.1
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Файлы.Ссылка КАК ФайлСсылка,
		|	Файлы.ДатаСоздания КАК ДатаСоздания,
		|	Файлы.ВладелецФайла КАК ВладелецФайла
		|ИЗ
		|	Справочник.ВСДПрисоединенныеФайлы КАК Файлы
		|ГДЕ
		|	НЕ Файлы.ПометкаУдаления
		|	И ВЫБОР
		|			КОГДА Файлы.ТипХраненияФайла = ЗНАЧЕНИЕ(Перечисление.ТипыХраненияФайлов.ВТомахНаДиске)
		|				ТОГДА (ВЫРАЗИТЬ(Файлы.ПутьКФайлу КАК СТРОКА(100))) <> """"
		|						ИЛИ НЕ Файлы.Том = ЗНАЧЕНИЕ(Справочник.ТомаХраненияФайлов.ПустаяСсылка)
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|	И Файлы.Наименование = ""Ветеринарная справка""
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаСоздания УБЫВ
		|ИТОГИ ПО
		|	ВладелецФайла";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаВладелецФайла = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаВладелецФайла.Следующий() Цикл
		
		ПервыйФайл = Истина;//Первый файл не удаляем
		ВыборкаДетальныеЗаписи = ВыборкаВладелецФайла.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Если Не ПервыйФайл Тогда
				ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, ВыборкаДетальныеЗаписи.ФайлСсылка);
			КонецЕсли;
			
			ПервыйФайл = Ложь;
			
		КонецЦикла;
		
	КонецЦикла;

КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "Справочник.ВСДПрисоединенныеФайлы";
	
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьСсылкиДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
	Пока Выборка.Следующий() Цикл
		ВыполнитьОчисткуДанныхОФайле(Выборка.Ссылка);
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

// Выполняет удаление дублей файла "Ветеринарная справка"
//
Процедура ВыполнитьОчисткуДанныхОФайле(ФайлСсылка)
	
	ИмяФайлаСПутем = "";
	ИмяФайлаСПутемДляУдаления = "";
	
	НачатьТранзакцию();
	
	Попытка
		
		БлокировкаДанных = Новый БлокировкаДанных;
		ЭлементБлокировкиДанных = БлокировкаДанных.Добавить(Метаданные.НайтиПоТипу(ТипЗнч(ФайлСсылка)).ПолноеИмя());
		ЭлементБлокировкиДанных.УстановитьЗначение("Ссылка", ФайлСсылка);
		БлокировкаДанных.Заблокировать();
		
		ФайлОбъект = ФайлСсылка.ПолучитьОбъект();
		
		ТекстОписания = НСтр("ru = 'Файл удален при очистке ненужных файлов.'")
			+ " " + Формат(ТекущаяДатаСеанса(),"ДЛФ=D") + Символы.ПС;
		
		Если ФайлОбъект.ТипХраненияФайла = Перечисления.ТипыХраненияФайлов.ВТомахНаДиске Тогда
			ИмяФайлаСПутем = РаботаСФайламиСлужебный.ПолныйПутьТома(ФайлОбъект.Том) + ФайлОбъект.ПутьКФайлу;
			ИмяФайлаСПутемДляУдаления = ИмяФайлаСПутем + ".del";
			ФайлНаДиске = Новый Файл(ИмяФайлаСПутем);
			Если ФайлНаДиске.Существует() Тогда
				ФайлНаДиске.УстановитьТолькоЧтение(Ложь);
				// Переместим файл во временный.
				ПереместитьФайл(ИмяФайлаСПутем, ИмяФайлаСПутемДляУдаления);
				ФайлОбъект.Том = Справочники.ТомаХраненияФайлов.ПустаяСсылка();
				ФайлОбъект.ПутьКФайлу = "";
				ФайлОбъект.Описание = ТекстОписания + ФайлОбъект.Описание;
				ФайлОбъект.ПометкаУдаления = Истина;
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(ФайлОбъект);
				// Удалим временный файл, т.к. успешно обновили данные о файле.
				УдалитьФайлы(ИмяФайлаСПутемДляУдаления);
			КонецЕсли;
		Иначе
			РаботаСФайламиСлужебныйВызовСервера.УдалитьЗаписьИзРегистраДвоичныеДанныеФайлов(ФайлСсылка);
			ФайлОбъект.Описание = ТекстОписания + ФайлОбъект.Описание;
			ФайлОбъект.ПометкаУдаления = Истина;
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ФайлОбъект);
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		Если Не ПустаяСтрока(ИмяФайлаСПутем) Тогда
			
			// Записать ошибку в журнал регистрации.
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Очистка ненужных файлов'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Ошибка,, ФайлСсылка, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			// Вернем файл на прежнее место в случае ошибки.
			ПереместитьФайл(ИмяФайлаСПутемДляУдаления, ИмяФайлаСПутем);
			
		КонецЕсли;
		
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
