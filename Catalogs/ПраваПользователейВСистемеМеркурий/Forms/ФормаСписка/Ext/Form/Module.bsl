#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийСпискаФормы

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СписокПравПользователейСистемыМеркурий(Команда)
	
	Организация = ОбщегоНазначенияУВСВызовСервера.ОрганизацияТекущегоПользователя();
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Организация"    , Организация);
	ПараметрыФормы.Вставить("БезПользователя", Истина);
	ПараметрыФормы.Вставить("БезОснования"   , Истина);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВводДополнительныхЗначенийЗавершение", ЭтотОбъект);
	
	ОткрытьФорму("ОбщаяФорма.ФормаВводаДополнительныхЗначений", ПараметрыФормы, ЭтотОбъект,,,, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ВводДополнительныхЗначенийЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не ЗначениеЗаполнено(Результат) Или Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОбмена = Новый Структура;
	ПараметрыОбмена.Вставить("Организация" , Результат.Организация);
	ПараметрыОбмена.Вставить("Пользователь", Результат.Пользователь);
	
	ДлительнаяОперация = ОбновитьСписокПравПользователей(ПараметрыОбмена, УникальныйИдентификатор);
	
	Контекст = Новый Структура;
	Контекст.Вставить("АдресРезультата", ДлительнаяОперация.АдресРезультата);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Неопределено);
	ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Происходит получение списка прав...'");
	ПараметрыОжидания.ВыводитьОкноОжидания       = Истина;
	
	Оповещение = Новый ОписаниеОповещения("ПослеОбновленияСпискаПравПользователей", ЭтотОбъект, Контекст);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Оповещение, ПараметрыОжидания);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеОбновленияСпискаПравПользователей(Результат, Контекст) Экспорт

	// Ответ: 
	// - Структура - Выполнено - результат в структуре.
	// - Неопределено - Отменено пользователем.
	Если Результат = Неопределено Тогда
		
		// Освобождаем выделенную память.
		УдалитьИзВременногоХранилища(Контекст.АдресРезультата); // Вызов сервера.
		Возврат;
	КонецЕсли;
	
	// В контексте АдресРезультата больше не нужен, теперь он актуализирован в Результат.АдресРезультата.
	Контекст.Удалить("АдресРезультата");
	
	// Результат.Статус:
	// - "Ошибка" - описание в ОписаниеОшибки.
	// - "Выполнено" - результат в Результат.АдресРезультата.
	Если Результат.Статус = "Выполнено" Тогда
		
		РезультатВыполнения = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		ОткрытьФорму("ОбщаяФорма.ФормаСообщенияРезультатаОбмена", РезультатВыполнения, ЭтотОбъект);
		
	Иначе
		
		// Освобождаем выделенную память.
		УдалитьИзВременногоХранилища(Результат.АдресРезультата);
		
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Не удалось выполнить обновление списка прав
			    |по причине:
				|%1'"), Результат.ПодробноеПредставлениеОшибки);
			
		ВывестиСообщениеОбОшибке(ТекстОшибки);
	КонецЕсли;

	Элементы.Список.Обновить();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ОбновитьСписокПравПользователей(ПараметрыОбмена, Идентификатор)
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(Идентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Обновление списка прав пользователей.'");

	ФоновоеЗадание = ДлительныеОперации.ВыполнитьВФоне("ИнтеграцияВетисAPIПользователи.СписокПравПользователейСистемыМеркурий",
		ПараметрыОбмена, ПараметрыВыполнения);
		
	Возврат ФоновоеЗадание;
КонецФункции

&НаКлиенте
Процедура ВывестиСообщениеОбОшибке(Знач ТекстОшибки)
	ОчиститьСообщения();
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
КонецПроцедуры

#КонецОбласти