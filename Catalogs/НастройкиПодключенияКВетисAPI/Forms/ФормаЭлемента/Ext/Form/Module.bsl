
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Ключ.Пустая() Тогда
		
		Если Параметры.Свойство("Организация") Тогда 
			Параметры.Свойство("Организация", Объект.Организация);
		Иначе
			Объект.Организация = ?(ЗначениеЗаполнено(Объект.Организация), Объект.Организация, ПараметрыСеанса.ТекущийПользователь.ОсновнаяОрганизация);
		КонецЕсли;
		
		ВидСервераВетисAPI = ОбщегоНазначенияУВССервер.ВидСервераВетисAPI();
		Если ВидСервераВетисAPI = Перечисления.ВидыСерверовВетисAPI.Основной Тогда
			Объект.АдресСервиса = "api.vetrf.ru";
		Иначе
			Объект.АдресСервиса = "api2.vetrf.ru";
		КонецЕсли;
		Объект.ИдентификаторСервиса = "mercury-g2b.service:2.1";
	КонецЕсли;
	
	ВидСервера = Константы.ВидСервераВетисAPI.Получить();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПолучитьКонтрагента(Команда)
	
	Отказ = Ложь;
	
	Если Не ЗначениеЗаполнено(Объект.ЛогинДляЗагрузкиНСИ) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не указан Логин(Login)'"), Объект.Ссылка, "Объект.ЛогинДляЗагрузкиНСИ",, Отказ);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ПарольДляЗагрузкиНСИ) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не указан Пароль(Password)'"), Объект.Ссылка, "Объект.ПарольДляЗагрузкиНСИ",, Отказ);
	КонецЕсли;
	
	Если Не Отказ Тогда
		ПолучитьКонтрагентаНаСервере();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПолучитьКонтрагентаНаСервере()
	
	ТекстОшибки = "";
	
	ПараметрыПодключения = Новый Структура;
	ПараметрыПодключения.Вставить("ЛогинДляЗагрузкиНСИ",  Объект.ЛогинДляЗагрузкиНСИ);
	ПараметрыПодключения.Вставить("ПарольДляЗагрузкиНСИ", Объект.ПарольДляЗагрузкиНСИ);
	
	НастройкиОбмена = ИнтеграцияВетисAPIСлужебный.НастройкиОбменаВетисAPI(Справочники.ВидыОперацийОбменаAPI.АктуализацияКонтрагентов, ТекстОшибки);
	
	Если ЗначениеЗаполнено(ТекстОшибки) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
		Возврат;
		
	Иначе
		
		ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ПараметрыПодключения, НастройкиОбмена);
		
	КонецЕсли;
	
	КонтрагентСсылка = ИнтеграцияВетисAPIКонтрагентыПредприятия.ПолучитьКонтрагента(ПараметрыПодключения, Объект.ИдентификаторХозяйствующегоСубъекта,,,ТекстОшибки,Ложь);
	
	Если ЗначениеЗаполнено(КонтрагентСсылка) Тогда
		// Установим пометку "Основной"
		КонтрагентОбъект = КонтрагентСсылка.ПолучитьОбъект();
		КонтрагентОбъект.Основной = Истина;
		НачатьТранзакцию();
		Попытка
			КонтрагентОбъект.Записать();
			Объект.Контрагент = КонтрагентОбъект.Ссылка;
			Модифицированность = Истина;
			ЗафиксироватьТранзакцию();
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки(),  КонтрагентОбъект);
			ОтменитьТранзакцию();
		КонецПопытки;
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти