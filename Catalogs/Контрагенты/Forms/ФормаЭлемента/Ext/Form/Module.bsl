#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	Если Параметры.Ключ.Пустая() Тогда
		Если Не ЗначениеЗаполнено(Объект.GUID_Меркурий) Тогда
			Объект.НеИспользуется = Истина;
		КонецЕсли;
		Объект.СтранаРегистрации = Справочники.СтраныМира.Россия;
	КонецЕсли;
	
	Если Параметры.Свойство("Основание") И Параметры.Основание <> Неопределено Тогда
		КонтрагентУчетнойСистемы = Параметры.Основание;
		ЗаполнитьЗначенияСвойств(Объект, КонтрагентУчетнойСистемы);
	КонецЕсли;
	
	Организация = ПараметрыСеанса.ТекущийПользователь.ОсновнаяОрганизация;
	
	УстановитьВидимостьРеквизитов();
	УстановитьДоступностьКнопкиЗаполнитьПоИНН(ЭтотОбъект);
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
    УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтотОбъект, Объект, "ГруппаКонтактнаяИнформация", ПоложениеЗаголовкаЭлементаФормы.Лево);
    // Конец СтандартныеПодсистемы.КонтактнаяИнформация

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьСвойстваЭлементовФормы();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// СтандартныеПодсистемы.КонтактнаяИнформация
    УправлениеКонтактнойИнформацией.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
    // Конец СтандартныеПодсистемы.КонтактнаяИнформация
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	// СтандартныеПодсистемы.КонтактнаяИнформация
    УправлениеКонтактнойИнформацией.ОбработкаПроверкиЗаполненияНаСервере(ЭтотОбъект, Объект, Отказ);
    // Конец СтандартныеПодсистемы.КонтактнаяИнформация	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	// СтандартныеПодсистемы.КонтактнаяИнформация
    УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
    // Конец СтандартныеПодсистемы.КонтактнаяИнформация	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если ЗначениеЗаполнено(КонтрагентУчетнойСистемы) Тогда
		СтруктураЗаписи = Новый Структура();
		
		СтруктураЗаписи.Вставить("ХозяйствующийСубъект"    , Объект.Ссылка);
		СтруктураЗаписи.Вставить("КонтрагентУчетнойСистемы", КонтрагентУчетнойСистемы);
		
		РегистрыСведений.СоответствиеХозяйствующихСубъектовКонтрагентамУчетнойСистемы.ДобавитьЗапись(СтруктураЗаписи);
	КонецЕсли;
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
    УправлениеКонтактнойИнформацией.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект);
    // Конец СтандартныеПодсистемы.КонтактнаяИнформация
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновлениеДанныхКонтрагента" Тогда
		ЭтаФорма.Прочитать();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипПредприятияПриИзменении(Элемент)
	
	УстановитьВидимостьРеквизитов();
	УстановитьДоступностьКнопкиЗаполнитьПоИНН(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИННПриИзменении(Элемент)

	ИННЗаполненниеСПроверкойНаКорректность();
	
	УстановитьДоступностьКнопкиЗаполнитьПоИНН(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЮридическоеЛицоИННИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	УстановитьДоступностьКнопкиЗаполнитьПоИНН(ЭтотОбъект, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ФизическоеЛицоИННИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	УстановитьДоступностьКнопкиЗаполнитьПоИНН(ЭтотОбъект, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ЮридическоеЛицоКППОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	Перем ТекстСообщения;
	ОчиститьСообщения();
	
	Если Не ПустаяСтрока(Текст) И
		Не РегламентированныеДанныеКлиентСервер.КППСоответствуетТребованиям(Текст, ТекстСообщения) Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстСообщения,
				,"Объект.КПП",,);
			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОГРНОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	Перем ТекстСообщения;
	
	Если Объект.ТипПредприятия = ПредопределенноеЗначение("Справочник.ТипыПредприятий.ЮридическоеЛицо") Тогда
		ЭтоЮрЛицо = Истина;
	ИначеЕсли Объект.ТипПредприятия = ПредопределенноеЗначение("Справочник.ТипыПредприятий.ИндивидуальныйПредприниматель") Тогда
		ЭтоЮрЛицо = Ложь;
	Иначе
		Возврат;
	КонецЕсли;
	
	ОчиститьСообщения();
	
	Если Не ПустаяСтрока(Текст) И
		Не РегламентированныеДанныеКлиентСервер.ОГРНСоответствуетТребованиям(Текст, ЭтоЮрЛицо, ТекстСообщения) Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстСообщения,
				,"Объект.ОГРН",,);
			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтранаРегистрацииПриИзменении(Элемент)
	
	УстановитьВидимостьРеквизитов();
	УстановитьДоступностьКнопкиЗаполнитьПоИНН(ЭтотОбъект);
	УстановитьСвойстваЭлементовФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеИнностранногоКонтрагентаПриИзменении(Элемент)
	
	Объект.ПолноеНаименование = Объект.Наименование;
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	Объект.ПолноеНаименование = Объект.Наименование;
	
КонецПроцедуры

&НаКлиенте
Процедура ИННЗаполненниеСПроверкойНаКорректностьЗавершение(РеквизитыКонтрагента, ДопПараметры) Экспорт
	Если РеквизитыКонтрагента = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	Если РеквизитыКонтрагента = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ЗаполнитьРевизитыКонтрагентаПоПолученнымДанным(РеквизитыКонтрагента);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыКонтактнаяИнформация

// СтандартныеПодсистемы.КонтактнаяИнформация

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)
    УправлениеКонтактнойИнформациейКлиент.ПриИзменении(ЭтотОбъект, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ПараметрыОткрытия = Новый Структура("Страна", Объект.СтранаРегистрации);
	УправлениеКонтактнойИнформациейКлиент.НачалоВыбора(ЭтотОбъект, Элемент, , СтандартнаяОбработка, ПараметрыОткрытия);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриНажатии(Элемент, СтандартнаяОбработка)
	ПараметрыОткрытия = Новый Структура("Страна", Объект.СтранаРегистрации);
	УправлениеКонтактнойИнформациейКлиент.НачалоВыбора(ЭтотОбъект, Элемент, , СтандартнаяОбработка, ПараметрыОткрытия);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОчистка(Элемент, СтандартнаяОбработка)
    УправлениеКонтактнойИнформациейКлиент.Очистка(ЭтотОбъект, Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияВыполнитьКоманду(Команда)
    УправлениеКонтактнойИнформациейКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда.Имя);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ОбновитьКонтактнуюИнформацию(Результат)
    УправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(ЭтотОбъект, Объект, Результат);
КонецПроцедуры

// Конец СтандартныеПодсистемы.КонтактнаяИнформация

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьРеквизитыПоИНН(Команда)
	
	ИННЗаполненниеСПроверкойНаКорректность();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗаполнениеРеквизитовПоИНН(РеквизитыКонтрагента)
	
	Если РеквизитыКонтрагента = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(РеквизитыКонтрагента.ОписаниеОшибки) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(РеквизитыКонтрагента.ОписаниеОшибки);
		
	Иначе
		
		Если РеквизитыКонтрагента.КоличествоНайденных = 0 Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='По указанному ИНН хозяйствующий субъект не найден.'"));
			
		Иначе
			
			ЗаполнитьРевизитыКонтрагентаПоПолученнымДанным(РеквизитыКонтрагента.РеквизитыОрганизаций[0]);
			
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРевизитыКонтрагентаПоПолученнымДанным(РеквизитыКонтрагента);
			
	ЗаполнитьЗначенияСвойств(Объект, РеквизитыКонтрагента);
	
	ОбщегоНазначенияУВСКлиент.ЗаполнитьЭлементКонтактнойИнформации(ЭтотОбъект,
																		ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ЮрАдресКонтрагента"),
																		РеквизитыКонтрагента.Адрес);
	
	УстановитьВидимостьРеквизитов();
	
	Записать();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьКнопкиЗаполнитьПоИНН(Форма, КнопкаНедоступнаБезусловно = Ложь)
	
	ЭтоЮрЛицо = ОбщегоНазначенияУВСКлиентСервер.ЭтоЮрЛицо(Форма.Объект.ТипПредприятия);
	
	Если Форма.Объект.СтранаРегистрации <> ПредопределенноеЗначение("Справочник.СтраныМира.Россия") Тогда
		КнопкаЗаполнения = "ЗаполнитьПоИННИнностранногоКонтрагента";
	Иначе
		КнопкаЗаполнения = ?(ЭтоЮрЛицо, "ЗаполнитьПоИНН", "ЗаполнитьПоИННФизЛицо");
	КонецЕсли;
	
	Если КнопкаНедоступнаБезусловно Тогда
		Форма.Элементы[КнопкаЗаполнения].Доступность = Ложь;
	Иначе
		Форма.Элементы[КнопкаЗаполнения].Доступность = ЗначениеЗаполнено(Форма.Объект.ИНН);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПредприятийХозяйствующегоСубъекта(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Контрагент", Объект.Ссылка);
	
	ОткрытьФорму("Обработка.СписокПредприятийХозяйствующегоСубъекта.Форма.Форма", ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ИННЗаполненниеСПроверкойНаКорректность()
	
	ЭтоЮрЛицо = ОбщегоНазначенияУВСКлиентСервер.ЭтоЮрЛицо(Объект.ТипПредприятия);
	ТекстСообщения = "";
	
	Если ПустаяСтрока(Объект.ИНН) Тогда
		Возврат;
	ИначеЕсли НЕ РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(Объект.ИНН, ЭтоЮрЛицо, ТекстСообщения) Тогда
		
		ОчиститьСообщения();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		ТекстСообщения,
		, "Объект.ИНН", , );
		Возврат;
		
	КонецЕсли;
	
	РеквизитыКонтрагента = ИнтеграцияВетисAPIВызовСервера.ПолучитьДанныеКонтрагентаПоФильтру(Объект.ИНН);
	
	Если РеквизитыКонтрагента.КоличествоНайденных = 0 Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='По указанному ИНН хозяйствующий субъект не найден.'"));
		
	ИначеЕсли РеквизитыКонтрагента.КоличествоНайденных = 1 Тогда
		
		Если РеквизитыКонтрагента.РеквизитыОрганизаций[0].ИНН <> Объект.ИНН Тогда // Если ИНН чужой, тогда предложим выбор. Может ошибка.
			ПараметрыФормы = Новый Структура("РеквизитыКонтрагентов", РеквизитыКонтрагента);
			ДопПараметры = Новый Структура;
			ОписаниеОповещения = Новый ОписаниеОповещения("ИННЗаполненниеСПроверкойНаКорректностьЗавершение", ЭтотОбъект, ДопПараметры);
			ОткрытьФорму("ОбщаяФорма.ЗаполнениеРеквизитовКонтрагента", ПараметрыФормы, ЭтотОбъект, , , , ОписаниеОповещения);
		Иначе
			ЗаполнитьРевизитыКонтрагентаПоПолученнымДанным(РеквизитыКонтрагента.РеквизитыОрганизаций[0]);
		КонецЕсли;
		
	ИначеЕсли РеквизитыКонтрагента.КоличествоНайденных > 1 Тогда
		
		ПараметрыФормы = Новый Структура("РеквизитыКонтрагентов", РеквизитыКонтрагента);
		ДопПараметры = Новый Структура;
		ОписаниеОповещения = Новый ОписаниеОповещения("ИННЗаполненниеСПроверкойНаКорректностьЗавершение", ЭтотОбъект, ДопПараметры);
		ОткрытьФорму("ОбщаяФорма.ЗаполнениеРеквизитовКонтрагента", ПараметрыФормы, ЭтотОбъект, , , , ОписаниеОповещения);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьРеквизитов()
	
	Если Объект.СтранаРегистрации = Справочники.СтраныМира.Россия Тогда
		
		Элементы.РеквизитыИнностранногоКонтрагента.Видимость = Ложь;
		
		Если Объект.ТипПредприятия = Справочники.ТипыПредприятий.ФизическоеЛицо 
			Или Объект.ТипПредприятия = Справочники.ТипыПредприятий.ИндивидуальныйПредприниматель Тогда
			
			Элементы.РеквизитыФизическогоЛица.Видимость 	 = Истина;
			Элементы.РеквизитыЮридическогоЛица.Видимость 	 = Ложь;
			
		Иначе
			
			Элементы.РеквизитыФизическогоЛица.Видимость 	 = Ложь;
			Элементы.РеквизитыЮридическогоЛица.Видимость 	 = Истина;
			
		КонецЕсли;
		
		Элементы.ИндивидуальныйПредпринимательОГРН.Видимость = Объект.ТипПредприятия = Справочники.ТипыПредприятий.ИндивидуальныйПредприниматель;
				
	Иначе
		
		Элементы.РеквизитыФизическогоЛица.Видимость          = Ложь;
		Элементы.РеквизитыЮридическогоЛица.Видимость 		 = Ложь;
		Элементы.РеквизитыИнностранногоКонтрагента.Видимость = Истина;
		
	КонецЕсли;
	
КонецПроцедуры // УстановитьВидимостьРеквизитовКонтрагента()

&НаКлиенте
Процедура УстановитьСвойстваЭлементовФормы()
	
	СтранаРегистрации = Объект.СтранаРегистрации;
	
	Если СтранаРегистрации = ПредопределенноеЗначение("Справочник.СтраныМира.Россия") Тогда
		Возврат;
	КонецЕсли;
	
	ТекстПодксказкиВвода = "Введите ИНН %1 цифр";
	
	Если ВРЕГ(СтранаРегистрации) = "БЕЛАРУСЬ" Тогда
		Элементы.ИнностранныйКонтрагентИНН.ПодсказкаВвода = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстПодксказкиВвода, 9);
	ИначеЕсли ВРЕГ(СтранаРегистрации) = "АРМЕНИЯ" Тогда
		Элементы.ИнностранныйКонтрагентИНН.ПодсказкаВвода = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстПодксказкиВвода, 8);
	ИначеЕсли ВРЕГ(СтранаРегистрации) = "КАЗАХСТАН" Тогда
		Элементы.ИнностранныйКонтрагентИНН.ПодсказкаВвода = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстПодксказкиВвода, 12);
	ИначеЕсли ВРЕГ(СтранаРегистрации) = "КИРГИЗИЯ" Тогда
		Элементы.ИнностранныйКонтрагентИНН.ПодсказкаВвода = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстПодксказкиВвода, 14);
	Иначе
		Элементы.ИнностранныйКонтрагентИНН.ПодсказкаВвода = "Для данной страны не указан формат ИНН";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти