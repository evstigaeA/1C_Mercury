#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка = Истина Тогда
		Возврат
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("Ответственный") Тогда 
		ДополнительныеСвойства.Свойство("Ответственный", Ответственный);
	Иначе
		Ответственный = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	ИнтеграцияВетисAPIСервер.УстановитьСтатусПодготовлен(Ссылка);
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ЕстьПравоОбслуживания = ИнтеграцияВетисAPIСервер.ПроверитьОграниченияПользователя(Организация, Предприятие);
	
	Если НЕ ЕстьПравоОбслуживания Тогда
		Предприятие = Неопределено;
	КонецЕсли;
	
	ВСД = Документы.ВСД.ПустаяСсылка();
	ТочкиПерегрузки.Очистить();
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВСД") Тогда
		
		ВСД = ДанныеЗаполнения;
		
		ЗаполнитьДокументПоВСД(ДанныеЗаполнения)
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ИнтеграцияВетисAPIСервер.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьДокументПоВСД(ДокументВСД) Экспорт
	
	Если ДокументВСД.ТипДокумента = Справочники.ТипыДокументов.БумажныйДокумент Тогда
		ВызватьИсключение НСтр("ru = 'Внесение номеров возможно только для электронных ВСД.'");
	КонецЕсли;
	
	Если РегистрыСведений.СтатусыВСД.ТекущийСтатусДокумента(ДокументВСД) <> Справочники.СтатусыВСД.Оформлен Тогда
		ВызватьИсключение НСтр("ru = 'ВСД должен быть в статусе ""Оформлен"".'");
	КонецЕсли;
	
	Если ДокументВСД.ТипВСД = Справочники.ТипыВСД.ПроизводственныйВСД Тогда
		ВызватьИсключение НСтр("ru = 'Внесение номеров возможно только для транспортных ВСД.'");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВСДТаблицаМаршрутСледования.ИдентификаторТочкиМаршрута КАК ИдентификаторТочкиМаршрута,
		|	ВСДТаблицаМаршрутСледования.НазваниеПункта КАК НазваниеПункта,
		|	ВСДТаблицаМаршрутСледования.ИнформацияОСледующемТранспорте КАК ТипТранспорта
		|ИЗ
		|	Документ.ВСД.ТаблицаМаршрутСледования КАК ВСДТаблицаМаршрутСледования
		|ГДЕ
		|	ВСДТаблицаМаршрутСледования.Ссылка = &ДокументВСД
		|	И ВСДТаблицаМаршрутСледования.ИнформацияОСледующемТранспорте ССЫЛКА Справочник.ТипыТранспортныхСредств
		|	И ВСДТаблицаМаршрутСледования.ОсуществляетсяПерегрузка";
	
	Запрос.УстановитьПараметр("ДокументВСД", ДокументВСД);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		ВызватьИсключение НСтр("ru = 'Нет необходимости во внесении номеров транспортных средств в пунктах перегрузки.'");
		
	Иначе
		
		ТекстОшибки = "";
		
		Если ДокументВСД.ВидВСД = Перечисления.ВидыВСД.Входящий Тогда
			
			ЕстьПравоОбслуживания = ИнтеграцияВетисAPIСервер.ПроверитьОграниченияПользователя(ДокументВСД.Организация, ДокументВСД.ПредприятиеПолучатель,, ТекстОшибки);
			
			Если ЕстьПравоОбслуживания Тогда
				Предприятие = ДокументВСД.ПредприятиеПолучатель;
			КонецЕсли;
			
		ИначеЕсли ДокументВСД.ВидВСД = Перечисления.ВидыВСД.Исходящий Тогда
			
			ЕстьПравоОбслуживания = ИнтеграцияВетисAPIСервер.ПроверитьОграниченияПользователя(ДокументВСД.Организация, ДокументВСД.ПредприятиеОтправитель,, ТекстОшибки);
			
			Если ЕстьПравоОбслуживания Тогда
				Предприятие = ДокументВСД.ПредприятиеОтправитель;
			КонецЕсли;
		
		Иначе
			
			ОбслуживаемыеПредприятия = ОбщегоНазначенияУВССервер.ПолучитьПредприятияОбслуживаемыеТекущимПользователем(ДокументВСД.Организация);
			
			Если ОбслуживаемыеПредприятия.Найти(ДокументВСД.ПредприятиеОтправитель) <> Неопределено Тогда
				Предприятие = ДокументВСД.ПредприятиеОтправитель;
			ИначеЕсли ОбслуживаемыеПредприятия.Найти(ДокументВСД.ПредприятиеПолучатель) <> Неопределено Тогда
				Предприятие = ДокументВСД.ПредприятиеПолучатель;
			Иначе
				ТекстОшибки = НСтр("ru = 'У пользователя нет прав на обслуживание не предприятия отправителя, не предприятия получателя.'");
			КонецЕсли;
			
		КонецЕсли;
			
		Если Не ПустаяСтрока(ТекстОшибки) Тогда
			ВызватьИсключение ТекстОшибки;
		КонецЕсли;
		
		ТочкиПерегрузки.Загрузить(РезультатЗапроса.Выгрузить());
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли