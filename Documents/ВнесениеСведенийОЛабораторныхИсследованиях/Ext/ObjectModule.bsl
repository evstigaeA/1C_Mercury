#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка = Истина Тогда
		Возврат
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("Ответственный") Тогда 
		ДополнительныеСвойства.Свойство("Ответственный", Ответственный);
	Иначе
		Ответственный = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ЕстьПравоОбслуживания = ИнтеграцияВетисAPIСервер.ПроверитьОграниченияПользователя(Организация, Предприятие);
	
	Если НЕ ЕстьПравоОбслуживания Тогда
		Предприятие = Неопределено;
	КонецЕсли;
	
	Иммунизация.Очистить();
	ЛабораторныеИсследования.Очистить();
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПроизводственныеОперации") Тогда
		
		ЗаполнитьДокументПоДаннымПроизводственнойОперации(ДанныеЗаполнения);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ИнтеграцияВетисAPIСервер.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ);

	ПроверитьКорректностьЗаполненияТабличнойЧасти(Отказ);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ИнтеграцияВетисAPIСервер.УстановитьСтатусПодготовлен(Ссылка);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьДокументПоДаннымПроизводственнойОперации(ДанныеЗаполнения)
	
	СтатусДокумента = РегистрыСведений.ЖурналРегистрацииСостоянийЗаявокНаОформлениеОпераций.ТекущийСтатусДокумента(ДанныеЗаполнения);
	
	Если СтатусДокумента <> Справочники.СтатусыЗаявок.УспешноОбработана Тогда
		
		ТекстОшибки = НСтр("ru='Документ %Документ% находится в статусе ""%Статус%"". Ввод на основании разрешен только в статусе ""Заявка успешно обработана"".'");
		
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения);
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Статус%"  , СтатусДокумента);
		
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	ДокументОснование = ДанныеЗаполнения;
	Организация       = ДанныеЗаполнения.Организация;
	Контрагент        = ДанныеЗаполнения.Контрагент;
	Предприятие       = ДанныеЗаполнения.Предприятие;
	
	ТаблицаПродукции.Загрузить(ДанныеЗаполнения.ТаблицаРезультат.Выгрузить());
	
КонецПроцедуры

Процедура ПроверитьКорректностьЗаполненияТабличнойЧасти(Отказ)
	
	Если ТаблицаПродукции.Количество() > 0 Тогда // таблица продукции должна содержать хотя бы одну запись
		Для Каждого ТекСтрока Из ТаблицаПродукции Цикл
			// Для каждой записи из таблицы продукции должна быть создана запись в таблицах "Лабораторные исследования" или "Иммунизация"
			Если ЛабораторныеИсследования.Найти(ТекСтрока.ЗаписьСкладскогоЖурнала,"ЗаписьСкладскогоЖурнала")=Неопределено
				 И Иммунизация.Найти(ТекСтрока.ЗаписьСкладскогоЖурнала,"ЗаписьСкладскогоЖурнала")=Неопределено Тогда
				ШаблонСообщения = НСтр("ru = 'В таблицах ""Лабораторные исследования"" и ""Иммунизация"" отсутствуют данные для продукции ""%1"" (строка № %2 таблицы продукции).'");
				Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ТаблицаПродукции", ТекСтрока.НомерСтроки,"ЗаписьСкладскогоЖурнала");
				ШаблонСообщения = СтрШаблон(
					ШаблонСообщения,
					ТекСтрока.ЗаписьСкладскогоЖурнала.ПолноеНаименование(),
					ТекСтрока.НомерСтроки);
					
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					ШаблонСообщения,
					ЭтотОбъект,
					Поле,
					,
					Отказ);
			КонецЕсли;
		КонецЦикла;
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Не заполнена таблица продукции'"),
			ЭтотОбъект,
			"ТаблицаПродукции",
			,
			Отказ);
	КонецЕсли;
	
	Для Каждого ТекСтрока Из ЛабораторныеИсследования Цикл
		
		Если ТекСтрока.РезультатИсследования = Справочники.РезультатыЛабораторногоИсследования.ОтрицательныйРезультат
			ИЛИ ТекСтрока.РезультатИсследования = Справочники.РезультатыЛабораторногоИсследования.ПоложительныйРезультат
			ИЛИ ТекСтрока.РезультатИсследования = Справочники.РезультатыЛабораторногоИсследования.РезультатНевозможноОпределить Тогда
			
			Если Не ЗначениеЗаполнено(ТекСтрока.ДатаПолученияРезультата) Тогда
				ШаблонСообщения = НСтр("ru = 'Не заполнена колонка ""Дата получения результата"" в строке %1 списка ""Лабораторные исследования""!'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					СтрШаблон(ШаблонСообщения, ТекСтрока.НомерСтроки),
					ЭтотОбъект,
					ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ЛабораторныеИсследования", ТекСтрока.НомерСтроки, "ДатаПолученияРезультата"),
					,
					Отказ);
				
			КонецЕсли;
				
			Если Не ЗначениеЗаполнено(ТекСтрока.Заключение) Тогда
				ШаблонСообщения = НСтр("ru = 'Не заполнена колонка ""Заключение"" в строке %1 списка ""Лабораторные исследования""!'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					СтрШаблон(ШаблонСообщения, ТекСтрока.НомерСтроки),
					ЭтотОбъект,
					ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ЛабораторныеИсследования", ТекСтрока.НомерСтроки, "Заключение"),
					,
					Отказ);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли