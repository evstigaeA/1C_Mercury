#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Возвращает описание блокируемых реквизитов.
//
// Возвращаемое значение:
//  Массив - содержит строки в формате ИмяРеквизита[;ИмяЭлементаФормы,...]
//           где ИмяРеквизита - имя реквизита объекта, ИмяЭлементаФормы - имя элемента формы,
//           связанного с реквизитом.
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	Результат = Новый Массив;
	
	Возврат Результат;
	
КонецФункции

// СтандартныеПодсистемы.Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	Документы.ВнесениеСведенийОЛабораторныхИсследованиях.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
КонецПроцедуры

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// Монопольный обработчик обновления 2.0.5.1
// Заполняет реквизит ""Формат срока годности"", а так же проверяет корректность заполнения реквизита ""Формат даты выработки""
Процедура ЗаполнитьФорматыДатПродукции() Экспорт
	
	ОбработаныВсеПроизводственныеОперации = Ложь;
	
	Пока Не ОбработаныВсеПроизводственныеОперации Цикл
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1000
			|	ЖурналРегистрацииСостоянийЗаявокНаОформлениеОперацийСрезПоследних.ДокументСсылка КАК Ссылка
			|ИЗ
			|	РегистрСведений.ЖурналРегистрацииСостоянийЗаявокНаОформлениеОпераций.СрезПоследних(, ДокументСсылка ССЫЛКА Документ.ПроизводственныеОперации) КАК ЖурналРегистрацииСостоянийЗаявокНаОформлениеОперацийСрезПоследних
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПроизводственныеОперации.ТаблицаПродукции КАК ПроизводственныеОперацииТаблицаПродукции
			|		ПО ЖурналРегистрацииСостоянийЗаявокНаОформлениеОперацийСрезПоследних.ДокументСсылка = ПроизводственныеОперацииТаблицаПродукции.Ссылка
			|ГДЕ
			|	ЖурналРегистрацииСостоянийЗаявокНаОформлениеОперацийСрезПоследних.Статус <> ЗНАЧЕНИЕ(Справочник.СтатусыЗаявок.УспешноОбработана)
			|	И ПроизводственныеОперацииТаблицаПродукции.ФорматСрокаГодности = ЗНАЧЕНИЕ(Перечисление.СпособыЗаданияДаты.ПустаяСсылка)";
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			ПроизводственныеОперацииОбъект = Выборка.Ссылка.ПолучитьОбъект();
			
			Для Каждого СтрокаПродукции Из ПроизводственныеОперацииОбъект.ТаблицаПродукции Цикл
				СвойстваПараметровДат = ОбновлениеИнформационнойБазыУВС.СвойстваПараметровДат();
				ЗаполнитьЗначенияСвойств(СвойстваПараметровДат, СтрокаПродукции);
				ОбновлениеИнформационнойБазыУВС.УстановитьЗначенияФорматовДатОбъекта(СтрокаПродукции, СвойстваПараметровДат);
			КонецЦикла;
			
			Попытка
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПроизводственныеОперацииОбъект);
			Исключение
				ПредставлениеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
				ТекстИсключения = НСтр("ru = 'Не удалось выполнить обновление форматов дат по причине: %ПредставлениеОшибки%.'");
				ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПредставлениеОшибки%", ПредставлениеОшибки);
				ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
					УровеньЖурналаРегистрации.Ошибка,
					Метаданные.Документы.ПроизводственныеОперации,
					Выборка.Ссылка,
					ТекстИсключения);
			КонецПопытки;
			
		КонецЦикла;
			
		КоличествоСсылок = Выборка.Количество();
		Если КоличествоСсылок < 1000 Тогда
			ОбработаныВсеПроизводственныеОперации = Истина;
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

// Регистрирует данные для обработчика обновления 2.0.5.1
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПроизводственныеОперацииТаблицаПродукции.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ПроизводственныеОперации.ТаблицаПродукции КАК ПроизводственныеОперацииТаблицаПродукции
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЖурналРегистрацииСостоянийЗаявокНаОформлениеОпераций.СрезПоследних(, ДокументСсылка ССЫЛКА Документ.ПроизводственныеОперации) КАК ЖурналРегистрацииСостоянийЗаявокНаОформлениеОперацийСрезПоследних
		|		ПО ПроизводственныеОперацииТаблицаПродукции.Ссылка = ЖурналРегистрацииСостоянийЗаявокНаОформлениеОперацийСрезПоследних.ДокументСсылка
		|ГДЕ
		|	ЖурналРегистрацииСостоянийЗаявокНаОформлениеОперацийСрезПоследних.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыЗаявок.УспешноОбработана)
		|	И ПроизводственныеОперацииТаблицаПродукции.ФорматСрокаГодности = ЗНАЧЕНИЕ(Перечисление.СпособыЗаданияДаты.ПустаяСсылка)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПроизводственныеОперацииТаблицаПродукции.Ссылка.Дата УБЫВ";
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "Документ.ПроизводственныеОперации";
	
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьСсылкиДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Блокировка.Заблокировать();
			
			ПроизводственныеОперацииОбъект = Выборка.Ссылка.ПолучитьОбъект();
			
			Если ПроизводственныеОперацииОбъект = Неопределено Тогда
				ОтменитьТранзакцию();
				Возврат;
			КонецЕсли;
			
			Для Каждого СтрокаПродукции Из ПроизводственныеОперацииОбъект.ТаблицаПродукции Цикл
				СвойстваПараметровДат = ОбновлениеИнформационнойБазыУВС.СвойстваПараметровДат();
				ЗаполнитьЗначенияСвойств(СвойстваПараметровДат, СтрокаПродукции);
				ОбновлениеИнформационнойБазыУВС.УстановитьЗначенияФорматовДатОбъекта(СтрокаПродукции, СвойстваПараметровДат);
			КонецЦикла;
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПроизводственныеОперацииОбъект);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ОбновлениеИнформационнойБазыУВС.СообщитьОНеудачнойОбработке(ИнформацияОбОшибке(), Выборка.Ссылка);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

// Записывает движения регистра "ДвиженияПродукции" при обновлении на версию "2.0.7.1"
Процедура ЗаполнитьЗаписиДвиженияТоваровПриОбновлении(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МИНИМУМ(ПроизводственныеОперацииТаблицаСырье.НомерСтроки) КАК НомерСтроки,
		|	ПроизводственныеОперацииТаблицаСырье.Ссылка.Организация КАК Организация,
		|	ПроизводственныеОперацииТаблицаСырье.Ссылка.Дата КАК Период,
		|	ПроизводственныеОперацииТаблицаСырье.Ссылка.Предприятие КАК Предприятие,
		|	ПроизводственныеОперацииТаблицаСырье.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
		|	СУММА(ПроизводственныеОперацииТаблицаСырье.Количество) КАК Количество
		|ПОМЕСТИТЬ ДокТЧ
		|ИЗ
		|	Документ.ПроизводственныеОперации.ТаблицаСырье КАК ПроизводственныеОперацииТаблицаСырье
		|ГДЕ
		|	ПроизводственныеОперацииТаблицаСырье.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ПроизводственныеОперацииТаблицаСырье.ЗаписьСкладскогоЖурнала,
		|	ПроизводственныеОперацииТаблицаСырье.Ссылка.Предприятие,
		|	ПроизводственныеОперацииТаблицаСырье.Ссылка.Организация,
		|	ПроизводственныеОперацииТаблицаСырье.Ссылка.Дата
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ЗаписьСкладскогоЖурнала,
		|	Предприятие
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДокТЧ.Период КАК Период,
		|	ДокТЧ.Организация КАК Организация,
		|	ДокТЧ.Предприятие КАК Предприятие,
		|	ДокТЧ.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
		|	ДокТЧ.Количество КАК Количество
		|ИЗ
		|	ДокТЧ КАК ДокТЧ";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		НаборЗаписей = РегистрыНакопления.ДвижениеПродукции.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(ДокументСсылка);
		НаборЗаписей.Записывать = Истина;
		НаборЗаписей.Очистить();
		НаборЗаписей.Загрузить(РезультатЗапроса.Выгрузить());
		Попытка
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
		Исключение
			ПредставлениеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ТекстШаблона = НСтр("ru = 'Не удалось записать движения документа по причине: %1.'");
			ТекстИсключения = СтрШаблон(ТекстШаблона, ПредставлениеОшибки);
			ЗаписьЖурналаРегистрации("Ошибка выполнения",
									 УровеньЖурналаРегистрации.Ошибка,
									 ДокументСсылка.Метаданные(),
									 ДокументСсылка,
									 ТекстИсключения);
		КонецПопытки;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Записывает записи движений продукции в регистр "ДвижениеПродукции"
//
// Параметры:
// СсылкаНаДокумент - ссылка на документ регистратор
Процедура ЗаписатьДвиженияПродукции(СсылкаНаДокумент) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = ПолучитьТекстЗапросаДляПродукции(Истина);
	Запрос.УстановитьПараметр("Ссылка", СсылкаНаДокумент);
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ДвижениеПродукции");
	ЭлементБлокировки.УстановитьЗначение("Организация", СсылкаНаДокумент.Организация);
	ЭлементБлокировки.УстановитьЗначение("Предприятие", СсылкаНаДокумент.Предприятие);
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = СсылкаНаДокумент.ТаблицаСырье;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ЗаписьСкладскогоЖурнала", "ЗаписьСкладскогоЖурнала");
	Блокировка.Заблокировать();
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		НаборЗаписей = РегистрыНакопления.ДвижениеПродукции.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(СсылкаНаДокумент);
		НаборЗаписей.Записывать = Истина;
		НаборЗаписей.Очистить();
		НаборЗаписей.Загрузить(РезультатЗапроса.Выгрузить());
		НаборЗаписей.Записать();
	КонецЕсли;
КонецПроцедуры

// Возвращает текст запроса для вижений по регистру Продукция
//
// Параметры:
// СсылкаНаДокумент - ссылка на документ регистратор
Функция ПолучитьТекстЗапросаДляПродукции(УспешноОбработана = Ложь) Экспорт
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	МИНИМУМ(ПроизводственныеОперацииТаблицаСырье.НомерСтроки) КАК НомерСтроки,
		|	ПроизводственныеОперацииТаблицаСырье.Ссылка.Организация КАК Организация,
		|	ПроизводственныеОперацииТаблицаСырье.Ссылка.Дата КАК Период,
		|	ПроизводственныеОперацииТаблицаСырье.Ссылка.Предприятие КАК Предприятие,
		|	ПроизводственныеОперацииТаблицаСырье.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
		|	СУММА(ПроизводственныеОперацииТаблицаСырье.Количество) КАК Количество
		|ПОМЕСТИТЬ ДокТЧ
		|ИЗ
		|	Документ.ПроизводственныеОперации.ТаблицаСырье КАК ПроизводственныеОперацииТаблицаСырье
		|ГДЕ
		|	ПроизводственныеОперацииТаблицаСырье.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ПроизводственныеОперацииТаблицаСырье.ЗаписьСкладскогоЖурнала,
		|	ПроизводственныеОперацииТаблицаСырье.Ссылка.Предприятие,
		|	ПроизводственныеОперацииТаблицаСырье.Ссылка.Организация,
		|	ПроизводственныеОперацииТаблицаСырье.Ссылка.Дата
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ЗаписьСкладскогоЖурнала,
		|	Предприятие
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДокТЧ.Период КАК Период,
		|	ДокТЧ.Организация КАК Организация,
		|	ДокТЧ.Предприятие КАК Предприятие,
		|	ДокТЧ.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
		|	ДокТЧ.Количество КАК Количество
		|ИЗ
		|	ДокТЧ КАК ДокТЧ";
	Если УспешноОбработана Тогда
		ТекстЗапроса = ТекстЗапроса +"
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
		|	ПроизводственныеОперацииТаблицаРезультат.Ссылка.Дата,
		|	ПроизводственныеОперацииТаблицаРезультат.Ссылка.Организация,
		|	ПроизводственныеОперацииТаблицаРезультат.Ссылка.Предприятие,
		|	ПроизводственныеОперацииТаблицаРезультат.ЗаписьСкладскогоЖурнала,
		|	ДвижениеПродукцииОстатки.КоличествоОстаток
		|ИЗ
		|	Документ.ПроизводственныеОперации.ТаблицаРезультат КАК ПроизводственныеОперацииТаблицаРезультат
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ДвижениеПродукции.Остатки(
		|				,
		|				ЗаписьСкладскогоЖурнала В
		|					(ВЫБРАТЬ
		|						ПроизводственныеОперацииТаблицаРезультат.ЗаписьСкладскогоЖурнала
		|					ИЗ
		|						Документ.ПроизводственныеОперации.ТаблицаРезультат КАК ПроизводственныеОперацииТаблицаРезультат
		|					ГДЕ
		|						ПроизводственныеОперацииТаблицаРезультат.Ссылка = &Ссылка
		|						И ПроизводственныеОперацииТаблицаРезультат.Ссылка.НезавершенноеПроизводство
		|					СГРУППИРОВАТЬ ПО
		|						ПроизводственныеОперацииТаблицаРезультат.ЗаписьСкладскогоЖурнала)) КАК ДвижениеПродукцииОстатки
		|		ПО ПроизводственныеОперацииТаблицаРезультат.ЗаписьСкладскогоЖурнала = ДвижениеПродукцииОстатки.ЗаписьСкладскогоЖурнала
		|			И ПроизводственныеОперацииТаблицаРезультат.Ссылка.Организация = ДвижениеПродукцииОстатки.Организация
		|			И ПроизводственныеОперацииТаблицаРезультат.Ссылка.Предприятие = ДвижениеПродукцииОстатки.Предприятие
		|ГДЕ
		|	ПроизводственныеОперацииТаблицаРезультат.Ссылка = &Ссылка
		|	И ПроизводственныеОперацииТаблицаРезультат.Ссылка.НезавершенноеПроизводство
		|
		|СГРУППИРОВАТЬ ПО
		|	ПроизводственныеОперацииТаблицаРезультат.Ссылка.Дата,
		|	ПроизводственныеОперацииТаблицаРезультат.Ссылка.Предприятие,
		|	ПроизводственныеОперацииТаблицаРезультат.ЗаписьСкладскогоЖурнала,
		|	ПроизводственныеОперацииТаблицаРезультат.Ссылка.Организация,
		|	ПроизводственныеОперацииТаблицаРезультат.Ссылка.Дата,
		|	ДвижениеПродукцииОстатки.КоличествоОстаток
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
		|	ПроизводственныеОперацииТаблицаРезультат.Ссылка.Дата,
		|	ПроизводственныеОперацииТаблицаРезультат.Ссылка.Организация,
		|	ПроизводственныеОперацииТаблицаРезультат.Ссылка.Предприятие,
		|	ПроизводственныеОперацииТаблицаРезультат.ЗаписьСкладскогоЖурнала,
		|	СУММА(ПроизводственныеОперацииТаблицаРезультат.Количество)
		|ИЗ
		|	Документ.ПроизводственныеОперации.ТаблицаРезультат КАК ПроизводственныеОперацииТаблицаРезультат
		|ГДЕ
		|	ПроизводственныеОперацииТаблицаРезультат.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ПроизводственныеОперацииТаблицаРезультат.Ссылка.Предприятие,
		|	ПроизводственныеОперацииТаблицаРезультат.ЗаписьСкладскогоЖурнала,
		|	ПроизводственныеОперацииТаблицаРезультат.Ссылка.Организация,
		|	ПроизводственныеОперацииТаблицаРезультат.Ссылка.Дата";
	КонецЕсли;
	Возврат ТекстЗапроса;
КонецФункции

#КонецОбласти

#КонецЕсли