#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ЧастиАдреса = Обработки.РасширенныйВводКонтактнойИнформации.СписокРеквизитовНаселенныйПункт( , "ФИАС");
	
	Если Параметры.Свойство("ЗначенияПолей") Тогда
		
		XDTOКонтактная = УправлениеКонтактнойИнформациейСлужебный.КонтактнаяИнформацияИзXML(Параметры.ЗначенияПолей, Перечисления.ТипыКонтактнойИнформации.Адрес);
		Страна         = Справочники.СтраныМира.НайтиПоНаименованию(XDTOКонтактная.Состав.Страна);
		СоставАдреса   = XDTOКонтактная.Состав.Состав;
		
		Если ЗначениеЗаполнено(СоставАдреса.IDРегион) Тогда
			ЧастиАдреса.Регион.Идентификатор = Новый УникальныйИдентификатор(СоставАдреса.IDРегион);
			ЧастиАдреса.Регион.Представление = СоставАдреса.СубъектРФ;
			Регион = СоставАдреса.СубъектРФ;
		КонецЕсли;
		Если ЗначениеЗаполнено(СоставАдреса.IDРайон) Тогда
			ЧастиАдреса.Район.Идентификатор = Новый УникальныйИдентификатор(СоставАдреса.IDРайон);
			ЧастиАдреса.Район.Представление = СоставАдреса.СвРайМО.Район;
			Район = СоставАдреса.СвРайМО.Район;
		КонецЕсли;
		Если ЗначениеЗаполнено(СоставАдреса.IDГород) Тогда
			ЧастиАдреса.Город.Идентификатор = Новый УникальныйИдентификатор(СоставАдреса.IDГород);
			ЧастиАдреса.Город.Представление = СоставАдреса.Город;
			Город = СоставАдреса.Город;
		КонецЕсли;
		Если ЗначениеЗаполнено(СоставАдреса.IDНаселенныйПункт) Тогда
			ЧастиАдреса.НаселенныйПункт.Идентификатор = Новый УникальныйИдентификатор(СоставАдреса.IDНаселенныйПункт);
			ЧастиАдреса.НаселенныйПункт.Представление = СоставАдреса.НаселПункт;
			НаселенныйПункт = СоставАдреса.НаселПункт;
		КонецЕсли;
		
		ПредставлениеАдреса = XDTOКонтактная.Представление;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Страна) Тогда
		Страна = Справочники.СтраныМира.Россия;
	КонецЕсли;
	
	РеквизитыСтраны     = ДанныеСтраны(Страна);
	КодСтраны           = РеквизитыСтраны.Код;
	СтранаПредставление = РеквизитыСтраны.Наименование;
	СтранаИдентификатор = РеквизитыСтраны.GUID_Меркурий;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СтранаПриИзменении(Элемент)
	
	ОчиститьДочерниеПоляАдреса(0);
	УстановитьДоступностьРеквизитов();
	
	РеквизитыСтраны     = ДанныеСтраны(Страна);
	КодСтраны           = РеквизитыСтраны.Код;
	СтранаПредставление = РеквизитыСтраны.Наименование;
	СтранаИдентификатор = РеквизитыСтраны.GUID_Меркурий;
	
	СформироватьПредставлениеАдреса(ЭтотОбъект);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДанныеСтраны(Страна)
	
	РеквизитыСтраны = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Страна, "Код, Наименование, GUID_Меркурий");
	
	Возврат РеквизитыСтраны;
КонецФункции

&НаКлиенте
Процедура РегионПриИзменении()
	
	Если Регион = "" Или Регион = Неопределено Тогда
		ОчиститьЧастьАдреса("Регион");
		ОчиститьДочерниеПоляАдреса(1);
	КонецЕсли;
	СформироватьПредставлениеАдреса(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура РегионНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	АдресНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура РегионОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	АдресОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура РайонПриИзменении()
	
	Если Район = "" Или Район = Неопределено Тогда
		ОчиститьЧастьАдреса("Район");
		ОчиститьДочерниеПоляАдреса(3);
	КонецЕсли;
	
	СформироватьПредставлениеАдреса(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура РайонНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	АдресНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура РайонОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	АдресОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ГородПриИзменении(Элемент)
	
	Если Город = "" Или Город = Неопределено Тогда
		ОчиститьЧастьАдреса("Город");
		ОчиститьДочерниеПоляАдреса(4);
	КонецЕсли;
	
	СформироватьПредставлениеАдреса(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ГородНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	АдресНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ГородОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	АдресОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ГородАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	АдресАвтоПодбор(Текст, Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ГородОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	АдресОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура НаселенныйПунктПриИзменении(Элемент)
	
	Если НаселенныйПункт = "" Или НаселенныйПункт = Неопределено Тогда
		ОчиститьЧастьАдреса("НаселенныйПункт");
	КонецЕсли;
	
	СформироватьПредставлениеАдреса(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура НаселенныйПунктНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	АдресНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура НаселенныйПунктОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	АдресОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура НаселенныйПунктАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	АдресАвтоПодбор(Текст, Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура НаселенныйПунктОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	АдресОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура АдресНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Не ЗначениеЗаполнено(Страна) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не указана страна.'"));
		Возврат;
	КонецЕсли;
	
	// Если пришли впрямую после редактирования, то сбрасываем значение части адреса.
	Если Элемент.ТекстРедактирования <> ЭтотОбъект[Элемент.Имя] Тогда
		УстановитьЗначениеЧастиАдреса(Элемент, Элемент.ТекстРедактирования);
	КонецЕсли;
	
	ЧастьАдреса = ЧастьАдресаЭлемента(Элемент);
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ФорматАдреса", "ФИАС");
	ПараметрыОткрытия.Вставить("СкрыватьНеактуальныеАдреса", Истина);
	
	ПараметрыОткрытия.Вставить("Уровень",  ЧастьАдреса.Уровень);
	ПараметрыОткрытия.Вставить("Родитель", ИдентификаторРодителяЧастиАдресаЭлемента(ЧастьАдреса, ЧастиАдреса));
	
	// Текущий элемент
	ПараметрыОткрытия.Вставить("Идентификатор", ЧастьАдреса.Идентификатор);
	Представление = ?(ПустаяСтрока(ЧастьАдреса.Представление),ЧастьАдреса.Заголовок, ЧастьАдреса.Представление);
	ПараметрыОткрытия.Вставить("Представление", Представление);
	
	ОткрытьФорму("Обработка.РасширенныйВводКонтактнойИнформации.Форма.ВыборАдресаПоУровню", ПараметрыОткрытия, Элемент, УникальныйИдентификатор);
КонецПроцедуры

&НаКлиенте
Процедура АдресОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ОчиститьДочерниеПоляАдреса(ЧастиАдреса[Элемент.Имя].Уровень);
	ВыбранноеЗначение = УстановитьЗначениеЧастиАдреса(Элемент, ВыбранноеЗначение);
	
КонецПроцедуры

&НаКлиенте
Процедура АдресАвтоПодбор(Текст, Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если СтрДлина(Текст) < 3 Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеВыбора = Новый СписокЗначений;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ФорматАдреса", "ФИАС");
	ДополнительныеПараметры.Вставить("СкрыватьНеактуальные", Истина);
	
	ДанныеКлассификатора = СписокАвтоподбораЧастиАдреса(Текст, Элемент.Имя, ЧастиАдреса, ДополнительныеПараметры);
	
	Если ДанныеКлассификатора.Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеВыбора = ДанныеКлассификатора.Данные;
	
	// Стандартную обработку отключаем, только если есть наши варианты.
	Если ДанныеВыбора.Количество() > 0 Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АдресОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	УстановитьЗначениеЧастиАдреса(Элемент, Текст);
	
КонецПроцедуры

&НаКлиенте
Функция УстановитьЗначениеЧастиАдреса(Элемент, ВыбранноеЗначение)

	Результат = УправлениеКонтактнойИнформациейКлиентСервер.УстановитьЗначениеЧастиАдреса(
		Элемент.Имя, ЧастиАдреса, ВыбранноеЗначение);
		
	ЭтотОбъект[Элемент.Имя] = Результат;
	
	Возврат Результат;
КонецФункции

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)

	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ЗначенияПолей = КонтактнаяИнформацияВXML();
	
	
	
	ПараметрыАдреса = Новый Структура;
	ПараметрыАдреса.Вставить("СтранаИдентификатор"         , СтранаИдентификатор);
	ПараметрыАдреса.Вставить("РегионИдентификатор"         , Строка(ЧастиАдреса.Регион.Идентификатор));
	//ПараметрыАдреса.Вставить("РегионПредставление"         , Строка(ЧастиАдреса.Регион.Представление));
	ПараметрыАдреса.Вставить("РайонИдентификатор"          , Строка(ЧастиАдреса.Район.Идентификатор));
	//ПараметрыАдреса.Вставить("РайонПредставление"          , Строка(ЧастиАдреса.Район.Представление));
	ПараметрыАдреса.Вставить("ГородИдентификатор"          , Строка(ЧастиАдреса.Город.Идентификатор));
	//ПараметрыАдреса.Вставить("ГородПредставление"          , Строка(ЧастиАдреса.Город.Представление));
	ПараметрыАдреса.Вставить("НаселенныйПунктИдентификатор", Строка(ЧастиАдреса.НаселенныйПункт.Идентификатор));
	//ПараметрыАдреса.Вставить("НаселенныйПунктПредставление", Строка(ЧастиАдреса.НаселенныйПункт.Представление));
	
	ПараметрыАдреса.Вставить("ЗначенияПолей"               , ЗначенияПолей);
	ПараметрыАдреса.Вставить("ПредставлениеАдреса"         , ПредставлениеАдреса);
	
	Закрыть(ПараметрыАдреса);
	
КонецПроцедуры

&НаСервере
Функция КонтактнаяИнформацияВXML()
	
	СтруктураАдреса = Новый Структура;
	СтруктураАдреса.Вставить("СтранаGUID"       , СтранаИдентификатор);
	СтруктураАдреса.Вставить("IDРегион"         , Строка(ЧастиАдреса.Регион.Идентификатор));
	СтруктураАдреса.Вставить("СубъектРФ"        , Строка(ЧастиАдреса.Регион.Представление));
	СтруктураАдреса.Вставить("IDРайон"          , Строка(ЧастиАдреса.Район.Идентификатор));
	СтруктураАдреса.Вставить("Район"            , Строка(ЧастиАдреса.Район.Представление));
	СтруктураАдреса.Вставить("IDГород"          , Строка(ЧастиАдреса.Город.Идентификатор));
	СтруктураАдреса.Вставить("Город"            , Строка(ЧастиАдреса.Город.Представление));
	СтруктураАдреса.Вставить("IDНаселенныйПункт", Строка(ЧастиАдреса.НаселенныйПункт.Идентификатор));
	СтруктураАдреса.Вставить("НаселПункт"       , Строка(ЧастиАдреса.НаселенныйПункт.Представление));
	
	ПространствоИменРФ_КИ = РаботаСАдресами.ПространствоИмен();
	
	АдресРФ_КИ = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(ПространствоИменРФ_КИ, "АдресРФ"));
	
	ЗаполнитьЗначенияСвойств(АдресРФ_КИ, СтруктураАдреса);
	
	Если НЕ СтруктураАдреса["Район"] = Неопределено Тогда
		АдресРФ_КИ.СвРайМО       = ФабрикаXDTO.Создать(АдресРФ_КИ.Тип().Свойства.Получить("СвРайМО").Тип);
		АдресРФ_КИ.СвРайМО.Район = СтруктураАдреса["Район"];
	КонецЕсли;
	
	ПространствоИменКИ = УправлениеКонтактнойИнформациейКлиентСервер.ПространствоИмен();
	
	КИ = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(ПространствоИменКИ, "КонтактнаяИнформация"));
	КИ.Состав        = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(ПространствоИменКИ, "Адрес"));
	КИ.Состав.Страна = Страна.Наименование;
	КИ.Состав.Состав = АдресРФ_КИ;
	КИ.Представление = ПредставлениеАдреса;
	
	ЗначенияПолей = СериализацияОбъектаXDTO(КИ);
	
	Возврат ЗначенияПолей;
КонецФункции

&НаСервере
Функция СериализацияОбъектаXDTO(ОбъектXDTO)
	
	Запись = Новый ЗаписьXML;
	Запись.УстановитьСтроку(Новый ПараметрыЗаписиXML(, , Ложь, Ложь, ""));
	Если ОбъектXDTO <> Неопределено Тогда
		ФабрикаXDTO.ЗаписатьXML(Запись, ОбъектXDTO);
	КонецЕсли;
	
	Возврат СтрЗаменить(Запись.Закрыть(), Символы.ПС, "&#10;");
	
КонецФункции

&НаКлиенте
Процедура КомандаОтмена(Команда)
	Модифицированность = Ложь;
	Закрыть();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьДоступностьРеквизитов()
	
	ЭтоРоссия = Страна = ПредопределенноеЗначение("Справочник.СтраныМира.Россия");
	
	Элементы.Район.Доступность = ЭтоРоссия;
	Элементы.Город.Доступность = ЭтоРоссия;
	Элементы.НаселенныйПункт.Доступность = ЭтоРоссия;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьДочерниеПоляАдреса(УровеньВыбранногоПоля)
	
	Если УровеньВыбранногоПоля < 6 Тогда
		НаселенныйПункт = "";
		ОчиститьЧастьАдреса("НаселенныйПункт");
	КонецЕсли;
	
	Если УровеньВыбранногоПоля < 4 Тогда
		Город = "";
		ОчиститьЧастьАдреса("Город");
	КонецЕсли;
	
	Если УровеньВыбранногоПоля < 3 Тогда
		Район = "";
		ОчиститьЧастьАдреса("Район");
	КонецЕсли;

	Если УровеньВыбранногоПоля < 1 Тогда
		Регион = "";
		ОчиститьЧастьАдреса("Регион");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьЧастьАдреса(ИмяЧасти)
	
	ЧастиАдреса[ИмяЧасти].Наименование  = Неопределено;
	ЧастиАдреса[ИмяЧасти].Идентификатор = Неопределено;
	ЧастиАдреса[ИмяЧасти].Представление = Неопределено;
	ЧастиАдреса[ИмяЧасти].Сокращение    = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Функция ЧастьАдресаЭлемента(Элемент)
	
	Возврат ЧастиАдреса[Элемент.Имя];
	
КонецФункции

&НаСервере
Функция ИдентификаторРодителяЧастиАдресаЭлемента(ЧастьАдреса, ЧастиАдреса)
	
	Идентификатор = Неопределено;
	
	Если ЧастьАдреса.Заголовок = "Регион" Тогда
		
		Идентификатор = Новый УникальныйИдентификатор(Страна.GUID_Меркурий);
		
	Иначе
		ЕстьЧастьАдресаБезИдентификатора = ЕстьЛиИдентификаторРодителяЧастиАдресаЭлемента(ЧастиАдреса, ЧастьАдреса, Идентификатор);
		
		Если ЕстьЧастьАдресаБезИдентификатора Тогда
			Обработки.РасширенныйВводКонтактнойИнформации.ЗаполнитьИдентификаторыНаселенногоПункта(ЧастиАдреса);
			ЕстьЧастьАдресаБезИдентификатора = ЕстьЛиИдентификаторРодителяЧастиАдресаЭлемента(ЧастиАдреса, ЧастьАдреса, Идентификатор);
			Если ЕстьЧастьАдресаБезИдентификатора Тогда
				Возврат Неопределено;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Идентификатор;
КонецФункции

&НаСервере
Функция ЕстьЛиИдентификаторРодителяЧастиАдресаЭлемента(ЧастиАдреса, ЧастьАдреса, Идентификатор)
	
	ЕстьЧастьАдресаБезИдентификатора = Ложь;
	ЧастиАдресаВышеПоУровню = Новый Структура;
	УровеньАдреса = 0;
	Для Каждого КлючЗначение Из ЧастиАдреса Цикл
		Часть = КлючЗначение.Значение;
		Если Часть.Уровень < ЧастьАдреса.Уровень И НЕ ПустаяСтрока(Часть.Представление) Тогда
			ЧастиАдресаВышеПоУровню.Вставить(КлючЗначение.Ключ, Часть);
			Если ЗначениеЗаполнено(КлючЗначение.Значение.Идентификатор) Тогда
				Если УровеньАдреса < КлючЗначение.Значение.Уровень Тогда
					Идентификатор = КлючЗначение.Значение.Идентификатор;
					УровеньАдреса = КлючЗначение.Значение.Уровень;
				КонецЕсли;
			Иначе
				ЕстьЧастьАдресаБезИдентификатора = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	Возврат ЕстьЧастьАдресаБезИдентификатора;
КонецФункции

&НаСервереБезКонтекста
Функция СписокАвтоподбораЧастиАдреса(Текст, ИмяЧастиАдреса, ЧастиАдреса, ДополнительныеПараметры)
	
	Возврат Обработки.РасширенныйВводКонтактнойИнформации.СписокАвтоподбораЧастиАдреса(Текст, ИмяЧастиАдреса, ЧастиАдреса, ДополнительныеПараметры);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура СформироватьПредставлениеАдреса(Форма)
	
	ЭлементыАдреса = Новый Массив;
	
	Если ЗначениеЗаполнено(Форма.СтранаПредставление) Тогда
		ЭлементыАдреса.Добавить(Форма.СтранаПредставление);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Форма.Регион) Тогда
		ЭлементыАдреса.Добавить(Форма.Регион);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Форма.Район) Тогда
		ЭлементыАдреса.Добавить(Форма.Район);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Форма.Город) Тогда
		ЭлементыАдреса.Добавить(Форма.Город);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Форма.НаселенныйПункт) Тогда
		ЭлементыАдреса.Добавить(Форма.НаселенныйПункт);
	КонецЕсли;
	
	Форма.ПредставлениеАдреса = СтрСоединить(ЭлементыАдреса, ", ");
	
КонецПроцедуры

#КонецОбласти