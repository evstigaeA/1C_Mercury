
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("ВидОперации") Тогда
		ВидОперации = Параметры.ВидОперации;
	КонецЕсли;
	
	Если Параметры.Свойство("АдресРезультата") Тогда
		
		ТаблицаПользователей.Загрузить(ПолучитьИзВременногоХранилища(Параметры.АдресРезультата));
		
		Для Каждого ТекСтрока Из ТаблицаПользователей Цикл
			
			Если ТекСтрока.ОтветПолучен Тогда
				ТекСтрока.Картинка = БиблиотекаКартинок.Успешно16;
				ТекСтрока.Отметка = Не ЗначениеЗаполнено(ТекСтрока.Пользователь);
			Иначе
				ТекСтрока.Картинка = БиблиотекаКартинок.Ошибка16;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ТаблицаПользователейПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПользователейВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ТаблицаПользователей.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Поле.Имя = "ТаблицаПользователейИнформация" Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ВидОперации"           , ВидОперации);
		ПараметрыФормы.Вставить("ИдентификаторЗапроса"  , ТекущиеДанные.ИдентификаторЗапроса);
		ПараметрыФормы.Вставить("ОшибкиВыполненияОбмена", ТекущиеДанные.ОписаниеОшибки);
		
		ОткрытьФорму("ОбщаяФорма.ФормаСообщенияРезультатаОбмена", ПараметрыФормы, Элемент);
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьОбновитьПользователей(Команда)
	
	ДанныеИзмененныхПользователей = СоздатьОбновитьПользователейНаСервере();
	
	Закрыть(ДанныеИзмененныхПользователей);
	
КонецПроцедуры

&НаСервере
Функция СоздатьОбновитьПользователейНаСервере()
	
	МассивПользователейДляОбновления = ТаблицаПользователей.НайтиСтроки(Новый Структура("Отметка", Истина));
	ДанныеИзмененныхПользователей    = Новый Массив;
	ТаблицаДанныхПользователей = Новый ТаблицаЗначений;
	
	ТаблицаДанныхПользователей.Колонки.Добавить("lastName");
	ТаблицаДанныхПользователей.Колонки.Добавить("firstName");
	ТаблицаДанныхПользователей.Колонки.Добавить("middleName");
	ТаблицаДанныхПользователей.Колонки.Добавить("login");
	ТаблицаДанныхПользователей.Колонки.Добавить("Name");
	ТаблицаДанныхПользователей.Колонки.Добавить("workEmail");
	ТаблицаДанныхПользователей.Колонки.Добавить("uuid");
	
	
	Для Каждого ТекЭлемент Из МассивПользователейДляОбновления Цикл
		
		ПользовательXDTO = ОбщегоНазначения.ОбъектXDTOИзСтрокиXML(ТекЭлемент.ОписаниеОбъекта);
		НовыйПольз       = ТаблицаДанныхПользователей.Добавить();
		
		НовыйПольз.lastName     = ПользовательXDTO.lastName;
		НовыйПольз.firstName    = ПользовательXDTO.firstName;
		НовыйПольз.middleName   = ПользовательXDTO.middleName;
		НовыйПольз.login     	= ПользовательXDTO.login;
		НовыйПольз.Name     	= ПользовательXDTO.lastName + " " + ПользовательXDTO.firstName + " " + ПользовательXDTO.middleName;
		Попытка
			НовыйПольз.workEmail    = ПользовательXDTO.workEmail;
		Исключение
			НовыйПольз.workEmail    = "";
		КонецПопытки;
		
		НовыйПольз.uuid     	= ПользовательXDTO.uuid;

		
		ДанныеПользователя = ИнтеграцияВетисAPIПользователи.ПользовательМеркурияПоДаннымXDTO(ПользовательXDTO, ТекЭлемент.Пользователь, Истина, Истина);
		
		ДанныеИзмененныхПользователей.Добавить(ДанныеПользователя);
	КонецЦикла;
	
	Возврат ДанныеИзмененныхПользователей;
КонецФункции

&НаКлиенте
Процедура ОтметитьВсехПользователей(Команда)
	
	Для Каждого ТекСтрока Из ТаблицаПользователей Цикл
		Если ТекСтрока.ОтветПолучен Тогда
			ТекСтрока.Отметка = Истина;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьОтметкуВсехПользователей(Команда)
	
	Для Каждого ТекСтрока Из ТаблицаПользователей Цикл
		ТекСтрока.Отметка = Ложь;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ТаблицаПользователей.Пользователь");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Справочники.ПользователиСистемыМеркурий.ПустаяСсылка();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаПользователей.Имя);
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветОсобогоТекста);
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ТаблицаПользователей.Пользователь");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Справочники.ПользователиСистемыМеркурий.ПустаяСсылка();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаПользователейПользователь.Имя);

	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<не сопоставлен>'"));
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ТаблицаПользователей.ОтветПолучен");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаПользователей.Имя);
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста"    , ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	
КонецПроцедуры

#КонецОбласти