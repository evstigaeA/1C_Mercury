#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка = Истина Тогда
		Возврат;
	КонецЕсли;
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		// Очередность этапов обмена следующая:
		// 1. Регистрация новых/привязка существующих пользователей к контрагенту
		// 2. Изменение прав для существующих пользователей
		// 3. Изменение зон ответственности для существующих пользователей
		// 4. Удаление связи между пользователями и контрагентом
		
		Регистрация   = Справочники.ВидыОперацийОбменаAPI.РегистрацияПривязкаПользователей;
		ИзменениеПрав = Справочники.ВидыОперацийОбменаAPI.НазначениеПравПользователей;
		ИзменениеЗон  = Справочники.ВидыОперацийОбменаAPI.НазначениеЗонОтветственностиПользователей;
		УдалениеСвязи = Справочники.ВидыОперацийОбменаAPI.УдалениеСвязиПользователяСКонтрагентом;
		
		Для Каждого СтрокаПользователя Из ТаблицаПользователейМеркурия Цикл
			
			Пользователь = СтрокаПользователя.Пользователь;
			
			// Предварительно удалим все незавершенные этапы по пользователю
			МассивСтрок  = Новый Массив;
			Если ЕстьЭтапыВыполненияОбмена(Пользователь,, Ложь, МассивСтрок) Тогда
				УдалитьСтрокиЭтаповОбмена(МассивСтрок);
			КонецЕсли;
			
			// По ветеринарному врачу не можем изменять данные в меркурии
			Если Пользователь.ВетеринарныйВрач ИЛИ Пользователь.НеИспользуетсяПриОбмене Тогда
				Продолжить;
			КонецЕсли;
			
			// Определим этапы обмена пользователя
			ВозможныеЭтапыОбмена = Новый Соответствие;
			Если СтрокаПользователя.РегистрацияНового Или СтрокаПользователя.УстановкаСвязи Тогда
				ВозможныеЭтапыОбмена.Вставить(Регистрация, 1);
				Если СтрокаПользователя.УстановкаСвязи Тогда
					ВозможныеЭтапыОбмена.Вставить(ИзменениеЗон, 3);
				КонецЕсли;
			ИначеЕсли СтрокаПользователя.УдалениеСвязи Тогда
				ВозможныеЭтапыОбмена.Вставить(УдалениеСвязи, 4);
			Иначе
				ВозможныеЭтапыОбмена.Вставить(ИзменениеПрав, 2);
				ВозможныеЭтапыОбмена.Вставить(ИзменениеЗон , 3);
			КонецЕсли;
			
			Для Каждого ТекущийЭтап Из ВозможныеЭтапыОбмена Цикл
				
				Если Не ЕстьЭтапыВыполненияОбмена(Пользователь, ТекущийЭтап.Ключ,, МассивСтрок) Тогда
					
					ТребуетсяДобавлениеЭтапа = Истина;
					Если ТекущийЭтап.Ключ = ИзменениеПрав Или ТекущийЭтап.Ключ = ИзменениеЗон Тогда
						
						ТабличныеЧасти = Новый Массив;
						
						Если ТекущийЭтап.Ключ = ИзменениеПрав Тогда
							
							ТабличныеЧасти.Добавить(ТаблицаПравПользователей);
							
						Иначе
							
							ТабличныеЧасти.Добавить(ТаблицаОбслуживаемыхПредприятий);
							ТабличныеЧасти.Добавить(ТаблицаЗонОбслуживания);
							
						КонецЕсли;
						
						Если Не ЕстьИзмененияСвойствПользователя(Пользователь, ТабличныеЧасти) Тогда
							
							ТребуетсяДобавлениеЭтапа = Ложь;
							
						КонецЕсли;
						
					КонецЕсли;
					
					Если ТребуетсяДобавлениеЭтапа Тогда
						ДобавитьСтрокуЭтапа(Пользователь, ТекущийЭтап.Ключ, ТекущийЭтап.Значение);
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка = Истина Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Для Каждого ТабЧасть Из ЭтотОбъект.Метаданные().ТабличныеЧасти Цикл
		ЭтотОбъект[ТабЧасть.Имя].Очистить();
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ТаблицаПользователейМеркурия.Количество() = 0 Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Не введено ни одной строки в список ""Пользователи""'"),
			ЭтотОбъект,
			"ТаблицаПользователейМеркурия",
			,
			Отказ);
		
	КонецЕсли;
	
	Для Каждого ТекСтрока Из ТаблицаПользователейМеркурия Цикл
		
		Пользователь = ТекСтрока.Пользователь;
		
		Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ТаблицаПользователейМеркурия", ТекСтрока.НомерСтроки, "Пользователь");
		
		Если ТекСтрока.РегистрацияНового Тогда
		
			МассивОшибок = Новый СписокЗначений;
			
			РеквизитыПользователя = "Фамилия, Имя, Отчество, ДатаРождения, Гражданство, ТипДокумента, Серия, Номер";
			ЗначенияРеквизитовПользователя = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Пользователь, РеквизитыПользователя);
			
			Если Не ЗначениеЗаполнено(ЗначенияРеквизитовПользователя.Фамилия) Тогда
				МассивОшибок.Добавить(НСтр("ru = 'Не указана фамилия.'"));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ЗначенияРеквизитовПользователя.Имя) Тогда
				МассивОшибок.Добавить(НСтр("ru = 'Не указано имя.'"));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ЗначенияРеквизитовПользователя.Отчество) Тогда
				МассивОшибок.Добавить(НСтр("ru = 'Не указано отчество.'"));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ЗначенияРеквизитовПользователя.ДатаРождения) Тогда
				МассивОшибок.Добавить(НСтр("ru = 'Не указана дата рождения.'"));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ЗначенияРеквизитовПользователя.Гражданство) Тогда
				МассивОшибок.Добавить(НСтр("ru = 'Не указано гражданство.'"));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ЗначенияРеквизитовПользователя.ТипДокумента) Тогда
				МассивОшибок.Добавить(НСтр("ru = 'Не указан тип документа.'"));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ЗначенияРеквизитовПользователя.Отчество) Тогда
				МассивОшибок.Добавить(НСтр("ru = 'Не указана серия документа.'"));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ЗначенияРеквизитовПользователя.Номер) Тогда
				МассивОшибок.Добавить(НСтр("ru = 'Не указан номер документа.'"));
			КонецЕсли;
			
			ЭлектронныйЯщик = УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформацииОбъекта(Пользователь, Справочники.ВидыКонтактнойИнформации.EmailПользователяСистемыМеркурий);
			Если Не ЗначениеЗаполнено(ЭлектронныйЯщик) Тогда
				МассивОшибок.Добавить(НСтр("ru = 'Не указан электронный ящик.'"));
			КонецЕсли;
			
			Если МассивОшибок.Количество() > 0 Тогда
				
				ТекстСообщения = СтрЗаменить(НСтр("ru = 'Регистрация пользователя %1 невозможна.'"), "%1", Пользователь);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					ТекстСообщения,
					ЭтотОбъект,
					Поле,
					,
					Отказ);
					
				МассивОшибок.Вставить(0, НСтр("ru = 'Обнаружены следующие ошибки:'"));
					
				Для Каждого ТекОшибка Из МассивОшибок Цикл
					
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Символы.Таб + ТекОшибка);
					
				КонецЦикла;
				
			КонецЕсли;
			
		Иначе
			
			ЗначенияРеквизитовПользователя = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Пользователь, "Логин, НеИспользуетсяПриОбмене");
			
			Если Не ЗначенияРеквизитовПользователя.НеИспользуетсяПриОбмене Тогда
			
				Если ПустаяСтрока(ЗначенияРеквизитовПользователя.Логин) Тогда
					
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						НСтр("ru = 'Не указан логин пользователя.'"),
						ЭтотОбъект,
						Поле,
						,
						Отказ);
				
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ШаблонСообщения = НСтр("ru = 'В строке %1 списка ""Пользователи"" обнаружен дубль пользователя из строки %2.'");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаПользователей.НомерСтроки КАК НомерСтроки,
		|	ВЫРАЗИТЬ(ТаблицаПользователей.Пользователь КАК Справочник.ПользователиСистемыМеркурий) КАК Пользователь
		|ПОМЕСТИТЬ ТаблицаПользователей
		|ИЗ
		|	&ТаблицаПользователей КАК ТаблицаПользователей
		|ГДЕ
		|	ТаблицаПользователей.РегистрацияНового
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаПользователей.НомерСтроки КАК НомерСтроки,
		|	ТаблицаПользователей.Пользователь КАК Пользователь,
		|	ТаблицаПользователейДубли.НомерСтроки КАК НомерСтрокиДубля
		|ИЗ
		|	ТаблицаПользователей КАК ТаблицаПользователей
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаПользователей КАК ТаблицаПользователейДубли
		|		ПО ТаблицаПользователей.Пользователь.Фамилия = ТаблицаПользователейДубли.Пользователь.Фамилия
		|			И ТаблицаПользователей.Пользователь.Имя = ТаблицаПользователейДубли.Пользователь.Имя
		|			И ТаблицаПользователей.Пользователь.Отчество = ТаблицаПользователейДубли.Пользователь.Отчество
		|			И ТаблицаПользователей.НомерСтроки <> ТаблицаПользователейДубли.НомерСтроки";
	
	Запрос.УстановитьПараметр("ТаблицаПользователей", ТаблицаПользователейМеркурия);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ТаблицаПользователейМеркурия", Выборка.НомерСтрокиДубля, "Пользователь");
		
		ТекстСообщения = СтрШаблон(
			ШаблонСообщения,
			Выборка.НомерСтрокиДубля,
			Выборка.НомерСтроки);
			
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						ТекстСообщения,
						ЭтотОбъект,
						Поле,
						,
						Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПодготовитьРегистрыКПроведению(ИмяРегистра)
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений." + ИмяРегистра);
	ЭлементБлокировки.УстановитьЗначение("Организация", Организация);
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = ТаблицаПользователейМеркурия;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Пользователь", "Пользователь");
	Блокировка.Заблокировать();
	
	Движения[ИмяРегистра].Очистить();
	Движения[ИмяРегистра].Записать();
	Движения[ИмяРегистра].Записывать = Истина;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	РегистрыДвижения = Новый Массив;
	РегистрыДвижения.Добавить("ПраваПользователейСистемыМеркурий");
	РегистрыДвижения.Добавить("ПредприятияОбслуживаемыеПользователем");
	РегистрыДвижения.Добавить("ЗоныОтветственностиПользователя");
	
	Для Каждого ИмяРегистр Из РегистрыДвижения Цикл
		
		ПодготовитьРегистрыКПроведению(ИмяРегистр);
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	АдминистрированиеПользователейТаблицаПользователейМеркурия.Ссылка.Организация КАК Организация,
		|	АдминистрированиеПользователейТаблицаПользователейМеркурия.Пользователь КАК Пользователь,
		|	МАКСИМУМ(АдминистрированиеПользователейТаблицаПользователейМеркурия.УдалениеСвязи) КАК УдалениеСвязи
		|ПОМЕСТИТЬ ВТ_Пользователи
		|ИЗ
		|	Документ.АдминистрированиеПользователей.ТаблицаПользователейМеркурия КАК АдминистрированиеПользователейТаблицаПользователейМеркурия
		|ГДЕ
		|	АдминистрированиеПользователейТаблицаПользователейМеркурия.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	АдминистрированиеПользователейТаблицаПользователейМеркурия.Пользователь,
		|	АдминистрированиеПользователейТаблицаПользователейМеркурия.Ссылка.Организация
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	Пользователь
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПраваПользователейСистемыМеркурийСрезПоследних.Организация КАК Организация,
		|	ПраваПользователейСистемыМеркурийСрезПоследних.Пользователь КАК Пользователь,
		|	ПраваПользователейСистемыМеркурийСрезПоследних.ПравоПользователя КАК ПравоПользователя,
		|	ПраваПользователейСистемыМеркурийСрезПоследних.Используется КАК Используется
		|ПОМЕСТИТЬ ВТ_ТекущиеПраваПользователей
		|ИЗ
		|	РегистрСведений.ПраваПользователейСистемыМеркурий.СрезПоследних(
		|			&МоментВремени,
		|			(Организация, Пользователь) В
		|				(ВЫБРАТЬ
		|					ВТ_Пользователи.Организация КАК Организация,
		|					ВТ_Пользователи.Пользователь КАК Пользователь
		|				ИЗ
		|					ВТ_Пользователи КАК ВТ_Пользователи)) КАК ПраваПользователейСистемыМеркурийСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	Пользователь,
		|	ПравоПользователя
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПредприятияОбслуживаемыеПользователемСрезПоследних.Организация КАК Организация,
		|	ПредприятияОбслуживаемыеПользователемСрезПоследних.Пользователь КАК Пользователь,
		|	ПредприятияОбслуживаемыеПользователемСрезПоследних.Предприятие КАК Предприятие,
		|	ПредприятияОбслуживаемыеПользователемСрезПоследних.Используется КАК Используется
		|ПОМЕСТИТЬ ВТ_ТекущиеПредприятияПользователей
		|ИЗ
		|	РегистрСведений.ПредприятияОбслуживаемыеПользователем.СрезПоследних(
		|			&МоментВремени,
		|			(Организация, Пользователь) В
		|				(ВЫБРАТЬ
		|					ВТ_Пользователи.Пользователь КАК Организация,
		|					ВТ_Пользователи.Пользователь КАК Пользователь
		|				ИЗ
		|					ВТ_Пользователи КАК ВТ_Пользователи)) КАК ПредприятияОбслуживаемыеПользователемСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	Пользователь,
		|	Предприятие
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЗоныОтветственностиПользователяСрезПоследних.Организация КАК Организация,
		|	ЗоныОтветственностиПользователяСрезПоследних.Пользователь КАК Пользователь,
		|	ЗоныОтветственностиПользователяСрезПоследних.СтранаИдентификатор КАК СтранаИдентификатор,
		|	ЗоныОтветственностиПользователяСрезПоследних.РегионИдентификатор КАК РегионИдентификатор,
		|	ЗоныОтветственностиПользователяСрезПоследних.РайонИдентификатор КАК РайонИдентификатор,
		|	ЗоныОтветственностиПользователяСрезПоследних.ГородИдентификатор КАК ГородИдентификатор,
		|	ЗоныОтветственностиПользователяСрезПоследних.НаселенныйПунктИдентификатор КАК НаселенныйПунктИдентификатор,
		|	ЗоныОтветственностиПользователяСрезПоследних.ЗначенияПолей КАК ЗначенияПолей,
		|	ЗоныОтветственностиПользователяСрезПоследних.ПредставлениеАдреса КАК ПредставлениеАдреса
		|ПОМЕСТИТЬ ВТ_ТекущиеЗоныОтветственностиПользователей
		|ИЗ
		|	РегистрСведений.ЗоныОтветственностиПользователя.СрезПоследних(
		|			&МоментВремени,
		|			(Организация, Пользователь) В
		|				(ВЫБРАТЬ
		|					ВТ_Пользователи.Организация КАК Организация,
		|					ВТ_Пользователи.Пользователь КАК Пользователь
		|				ИЗ
		|					ВТ_Пользователи КАК ВТ_Пользователи)) КАК ЗоныОтветственностиПользователяСрезПоследних
		|ГДЕ
		|	ЗоныОтветственностиПользователяСрезПоследних.Используется
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	Пользователь
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АдминистрированиеПользователейТаблицаЗонОбслуживания.Ссылка.Организация КАК Организация,
		|	АдминистрированиеПользователейТаблицаЗонОбслуживания.Пользователь КАК Пользователь,
		|	АдминистрированиеПользователейТаблицаЗонОбслуживания.СтранаИдентификатор КАК СтранаИдентификатор,
		|	АдминистрированиеПользователейТаблицаЗонОбслуживания.РегионИдентификатор КАК РегионИдентификатор,
		|	АдминистрированиеПользователейТаблицаЗонОбслуживания.РайонИдентификатор КАК РайонИдентификатор,
		|	АдминистрированиеПользователейТаблицаЗонОбслуживания.ГородИдентификатор КАК ГородИдентификатор,
		|	АдминистрированиеПользователейТаблицаЗонОбслуживания.НаселенныйПунктИдентификатор КАК НаселенныйПунктИдентификатор,
		|	АдминистрированиеПользователейТаблицаЗонОбслуживания.ЗначенияПолей КАК ЗначенияПолей,
		|	АдминистрированиеПользователейТаблицаЗонОбслуживания.ПредставлениеАдреса КАК ПредставлениеАдреса
		|ПОМЕСТИТЬ ВТ_ЗоныОтветственностиДок
		|ИЗ
		|	Документ.АдминистрированиеПользователей.ТаблицаЗонОбслуживания КАК АдминистрированиеПользователейТаблицаЗонОбслуживания
		|ГДЕ
		|	АдминистрированиеПользователейТаблицаЗонОбслуживания.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	&Период КАК Период,
		|	АдминистрированиеПользователейТаблицаПравПользователей.Ссылка.Организация КАК Организация,
		|	АдминистрированиеПользователейТаблицаПравПользователей.Пользователь КАК Пользователь,
		|	АдминистрированиеПользователейТаблицаПравПользователей.ПравоПользователя КАК ПравоПользователя,
		|	АдминистрированиеПользователейТаблицаПравПользователей.Используется КАК Используется
		|ИЗ
		|	Документ.АдминистрированиеПользователей.ТаблицаПравПользователей КАК АдминистрированиеПользователейТаблицаПравПользователей
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТекущиеПраваПользователей КАК ВТ_ТекущиеПраваПользователей
		|		ПО АдминистрированиеПользователейТаблицаПравПользователей.Ссылка.Организация = ВТ_ТекущиеПраваПользователей.Организация
		|			И АдминистрированиеПользователейТаблицаПравПользователей.Пользователь = ВТ_ТекущиеПраваПользователей.Пользователь
		|			И АдминистрированиеПользователейТаблицаПравПользователей.ПравоПользователя = ВТ_ТекущиеПраваПользователей.ПравоПользователя
		|ГДЕ
		|	АдминистрированиеПользователейТаблицаПравПользователей.Ссылка = &Ссылка
		|	И АдминистрированиеПользователейТаблицаПравПользователей.Пользователь В
		|			(ВЫБРАТЬ
		|				ВТ_Пользователи.Пользователь КАК Пользователь
		|			ИЗ
		|				ВТ_Пользователи КАК ВТ_Пользователи
		|			ГДЕ
		|				НЕ ВТ_Пользователи.УдалениеСвязи)
		|	И АдминистрированиеПользователейТаблицаПравПользователей.Используется <> ЕСТЬNULL(ВТ_ТекущиеПраваПользователей.Используется, ЛОЖЬ)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&Период,
		|	ВТ_ТекущиеПраваПользователей.Организация,
		|	ВТ_ТекущиеПраваПользователей.Пользователь,
		|	ВТ_ТекущиеПраваПользователей.ПравоПользователя,
		|	ЛОЖЬ
		|ИЗ
		|	ВТ_ТекущиеПраваПользователей КАК ВТ_ТекущиеПраваПользователей
		|ГДЕ
		|	ВТ_ТекущиеПраваПользователей.Пользователь В
		|			(ВЫБРАТЬ
		|				ВТ_Пользователи.Пользователь КАК Пользователь
		|			ИЗ
		|				ВТ_Пользователи КАК ВТ_Пользователи
		|			ГДЕ
		|				ВТ_Пользователи.УдалениеСвязи)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	&Период КАК Период,
		|	АдминистрированиеПользователейТаблицаОбслуживаемыхПредприятий.Ссылка.Организация КАК Организация,
		|	АдминистрированиеПользователейТаблицаОбслуживаемыхПредприятий.Пользователь КАК Пользователь,
		|	АдминистрированиеПользователейТаблицаОбслуживаемыхПредприятий.Предприятие КАК Предприятие,
		|	АдминистрированиеПользователейТаблицаОбслуживаемыхПредприятий.Используется КАК Используется
		|ИЗ
		|	Документ.АдминистрированиеПользователей.ТаблицаОбслуживаемыхПредприятий КАК АдминистрированиеПользователейТаблицаОбслуживаемыхПредприятий
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТекущиеПредприятияПользователей КАК ВТ_ТекущиеПредприятияПользователей
		|		ПО АдминистрированиеПользователейТаблицаОбслуживаемыхПредприятий.Ссылка.Организация = ВТ_ТекущиеПредприятияПользователей.Организация
		|			И АдминистрированиеПользователейТаблицаОбслуживаемыхПредприятий.Пользователь = ВТ_ТекущиеПредприятияПользователей.Пользователь
		|			И АдминистрированиеПользователейТаблицаОбслуживаемыхПредприятий.Предприятие = ВТ_ТекущиеПредприятияПользователей.Предприятие
		|ГДЕ
		|	АдминистрированиеПользователейТаблицаОбслуживаемыхПредприятий.Ссылка = &Ссылка
		|	И АдминистрированиеПользователейТаблицаОбслуживаемыхПредприятий.Пользователь В
		|			(ВЫБРАТЬ
		|				ВТ_Пользователи.Пользователь КАК Пользователь
		|			ИЗ
		|				ВТ_Пользователи КАК ВТ_Пользователи
		|			ГДЕ
		|				НЕ ВТ_Пользователи.УдалениеСвязи)
		|	И АдминистрированиеПользователейТаблицаОбслуживаемыхПредприятий.Используется <> ЕСТЬNULL(ВТ_ТекущиеПредприятияПользователей.Используется, ЛОЖЬ)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&Период,
		|	ВТ_ТекущиеПредприятияПользователей.Организация,
		|	ВТ_ТекущиеПредприятияПользователей.Пользователь,
		|	ВТ_ТекущиеПредприятияПользователей.Предприятие,
		|	ЛОЖЬ
		|ИЗ
		|	ВТ_ТекущиеПредприятияПользователей КАК ВТ_ТекущиеПредприятияПользователей
		|ГДЕ
		|	ВТ_ТекущиеПредприятияПользователей.Пользователь В
		|			(ВЫБРАТЬ
		|				ВТ_Пользователи.Пользователь КАК Пользователь
		|			ИЗ
		|				ВТ_Пользователи КАК ВТ_Пользователи
		|			ГДЕ
		|				ВТ_Пользователи.УдалениеСвязи)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	&Период КАК Период,
		|	ВТ_ЗоныОтветственностиДок.Организация КАК Организация,
		|	ВТ_ЗоныОтветственностиДок.Пользователь КАК Пользователь,
		|	ВТ_ЗоныОтветственностиДок.СтранаИдентификатор КАК СтранаИдентификатор,
		|	ВТ_ЗоныОтветственностиДок.РегионИдентификатор КАК РегионИдентификатор,
		|	ВТ_ЗоныОтветственностиДок.РайонИдентификатор КАК РайонИдентификатор,
		|	ВТ_ЗоныОтветственностиДок.ГородИдентификатор КАК ГородИдентификатор,
		|	ВТ_ЗоныОтветственностиДок.НаселенныйПунктИдентификатор КАК НаселенныйПунктИдентификатор,
		|	ВТ_ЗоныОтветственностиДок.ЗначенияПолей КАК ЗначенияПолей,
		|	ВТ_ЗоныОтветственностиДок.ПредставлениеАдреса КАК ПредставлениеАдреса,
		|	ИСТИНА КАК Используется
		|ИЗ
		|	ВТ_ЗоныОтветственностиДок КАК ВТ_ЗоныОтветственностиДок
		|ГДЕ
		|	ВТ_ЗоныОтветственностиДок.Пользователь В
		|			(ВЫБРАТЬ
		|				ВТ_Пользователи.Пользователь КАК Пользователь
		|			ИЗ
		|				ВТ_Пользователи КАК ВТ_Пользователи
		|			ГДЕ
		|				НЕ ВТ_Пользователи.УдалениеСвязи)
		|	И НЕ (ВТ_ЗоныОтветственностиДок.Организация, ВТ_ЗоныОтветственностиДок.Пользователь, ВТ_ЗоныОтветственностиДок.СтранаИдентификатор, ВТ_ЗоныОтветственностиДок.РегионИдентификатор, ВТ_ЗоныОтветственностиДок.РайонИдентификатор, ВТ_ЗоныОтветственностиДок.ГородИдентификатор, ВТ_ЗоныОтветственностиДок.НаселенныйПунктИдентификатор) В
		|				(ВЫБРАТЬ
		|					ВТ_ТекущиеЗоныОтветственностиПользователей.Организация КАК Организация,
		|					ВТ_ТекущиеЗоныОтветственностиПользователей.Пользователь КАК Пользователь,
		|					ВТ_ТекущиеЗоныОтветственностиПользователей.СтранаИдентификатор КАК СтранаИдентификатор,
		|					ВТ_ТекущиеЗоныОтветственностиПользователей.РегионИдентификатор КАК РегионИдентификатор,
		|					ВТ_ТекущиеЗоныОтветственностиПользователей.РайонИдентификатор КАК РайонИдентификатор,
		|					ВТ_ТекущиеЗоныОтветственностиПользователей.ГородИдентификатор КАК ГородИдентификатор,
		|					ВТ_ТекущиеЗоныОтветственностиПользователей.НаселенныйПунктИдентификатор КАК НаселенныйПунктИдентификатор
		|				ИЗ
		|					ВТ_ТекущиеЗоныОтветственностиПользователей КАК ВТ_ТекущиеЗоныОтветственностиПользователей)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&Период,
		|	ВТ_ТекущиеЗоныОтветственностиПользователей.Организация,
		|	ВТ_ТекущиеЗоныОтветственностиПользователей.Пользователь,
		|	ВТ_ТекущиеЗоныОтветственностиПользователей.СтранаИдентификатор,
		|	ВТ_ТекущиеЗоныОтветственностиПользователей.РегионИдентификатор,
		|	ВТ_ТекущиеЗоныОтветственностиПользователей.РайонИдентификатор,
		|	ВТ_ТекущиеЗоныОтветственностиПользователей.ГородИдентификатор,
		|	ВТ_ТекущиеЗоныОтветственностиПользователей.НаселенныйПунктИдентификатор,
		|	ВТ_ТекущиеЗоныОтветственностиПользователей.ЗначенияПолей,
		|	ВТ_ТекущиеЗоныОтветственностиПользователей.ПредставлениеАдреса,
		|	ЛОЖЬ
		|ИЗ
		|	ВТ_ТекущиеЗоныОтветственностиПользователей КАК ВТ_ТекущиеЗоныОтветственностиПользователей
		|ГДЕ
		|	ВТ_ТекущиеЗоныОтветственностиПользователей.Пользователь В
		|			(ВЫБРАТЬ
		|				ВТ_Пользователи.Пользователь КАК Пользователь
		|			ИЗ
		|				ВТ_Пользователи КАК ВТ_Пользователи
		|			ГДЕ
		|				НЕ ВТ_Пользователи.УдалениеСвязи)
		|	И НЕ (ВТ_ТекущиеЗоныОтветственностиПользователей.Организация, ВТ_ТекущиеЗоныОтветственностиПользователей.Пользователь, ВТ_ТекущиеЗоныОтветственностиПользователей.СтранаИдентификатор, ВТ_ТекущиеЗоныОтветственностиПользователей.РегионИдентификатор, ВТ_ТекущиеЗоныОтветственностиПользователей.РайонИдентификатор, ВТ_ТекущиеЗоныОтветственностиПользователей.ГородИдентификатор, ВТ_ТекущиеЗоныОтветственностиПользователей.НаселенныйПунктИдентификатор) В
		|				(ВЫБРАТЬ
		|					ВТ_ЗоныОтветственностиДок.Организация КАК Организация,
		|					ВТ_ЗоныОтветственностиДок.Пользователь КАК Пользователь,
		|					ВТ_ЗоныОтветственностиДок.СтранаИдентификатор КАК СтранаИдентификатор,
		|					ВТ_ЗоныОтветственностиДок.РегионИдентификатор КАК РегионИдентификатор,
		|					ВТ_ЗоныОтветственностиДок.РайонИдентификатор КАК РайонИдентификатор,
		|					ВТ_ЗоныОтветственностиДок.ГородИдентификатор КАК ГородИдентификатор,
		|					ВТ_ЗоныОтветственностиДок.НаселенныйПунктИдентификатор КАК НаселенныйПунктИдентификатор
		|				ИЗ
		|					ВТ_ЗоныОтветственностиДок КАК ВТ_ЗоныОтветственностиДок)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&Период,
		|	ВТ_ТекущиеЗоныОтветственностиПользователей.Организация,
		|	ВТ_ТекущиеЗоныОтветственностиПользователей.Пользователь,
		|	ВТ_ТекущиеЗоныОтветственностиПользователей.СтранаИдентификатор,
		|	ВТ_ТекущиеЗоныОтветственностиПользователей.РегионИдентификатор,
		|	ВТ_ТекущиеЗоныОтветственностиПользователей.РайонИдентификатор,
		|	ВТ_ТекущиеЗоныОтветственностиПользователей.ГородИдентификатор,
		|	ВТ_ТекущиеЗоныОтветственностиПользователей.НаселенныйПунктИдентификатор,
		|	ВТ_ТекущиеЗоныОтветственностиПользователей.ЗначенияПолей,
		|	ВТ_ТекущиеЗоныОтветственностиПользователей.ПредставлениеАдреса,
		|	ЛОЖЬ
		|ИЗ
		|	ВТ_ТекущиеЗоныОтветственностиПользователей КАК ВТ_ТекущиеЗоныОтветственностиПользователей
		|ГДЕ
		|	ВТ_ТекущиеЗоныОтветственностиПользователей.Пользователь В
		|			(ВЫБРАТЬ
		|				ВТ_Пользователи.Пользователь КАК Пользователь
		|			ИЗ
		|				ВТ_Пользователи КАК ВТ_Пользователи
		|			ГДЕ
		|				ВТ_Пользователи.УдалениеСвязи)";
		
	Запрос.УстановитьПараметр("Ссылка"       , Ссылка);
	Запрос.УстановитьПараметр("Период"       , Дата);
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	
	РезультатПакет = Запрос.ВыполнитьПакет();
	
	Движения.ПраваПользователейСистемыМеркурий.Загрузить(РезультатПакет[5].Выгрузить());
	Движения.ПредприятияОбслуживаемыеПользователем.Загрузить(РезультатПакет[6].Выгрузить());
	Движения.ЗоныОтветственностиПользователя.Загрузить(РезультатПакет[7].Выгрузить());
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ЗаполнитьДаныеПользователей(СписокПравКНазначению, СписокПравПоУмолчанию, СписокПредприятийКонтрагента,ДобавляемыеПользователи = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПраваПользователейСистемыМеркурийСрезПоследних.Пользователь КАК Пользователь,
		|	ПраваПользователейСистемыМеркурийСрезПоследних.ПравоПользователя КАК ПравоПользователя
		|ПОМЕСТИТЬ ВТ_ТекущиеПраваПользователей
		|ИЗ
		|	РегистрСведений.ПраваПользователейСистемыМеркурий.СрезПоследних(
		|			&Период,
		|			Организация = &Организация
		|				И Пользователь В (&ДобавляемыеПользователи)) КАК ПраваПользователейСистемыМеркурийСрезПоследних
		|ГДЕ
		|	ПраваПользователейСистемыМеркурийСрезПоследних.Используется
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПредприятияОбслуживаемыеПользователемСрезПоследних.Пользователь КАК Пользователь,
		|	ПредприятияОбслуживаемыеПользователемСрезПоследних.Предприятие КАК Предприятие
		|ПОМЕСТИТЬ ВТ_ТекущиеПредприятияПользователей
		|ИЗ
		|	РегистрСведений.ПредприятияОбслуживаемыеПользователем.СрезПоследних(
		|			&Период,
		|			Организация = &Организация
		|				И Пользователь В (&ДобавляемыеПользователи)) КАК ПредприятияОбслуживаемыеПользователемСрезПоследних
		|ГДЕ
		|	ПредприятияОбслуживаемыеПользователемСрезПоследних.Используется
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЗоныОтветственностиПользователяСрезПоследних.Пользователь КАК Пользователь,
		|	ЗоныОтветственностиПользователяСрезПоследних.СтранаИдентификатор КАК СтранаИдентификатор,
		|	ЗоныОтветственностиПользователяСрезПоследних.РегионИдентификатор КАК РегионИдентификатор,
		|	ЗоныОтветственностиПользователяСрезПоследних.РайонИдентификатор КАК РайонИдентификатор,
		|	ЗоныОтветственностиПользователяСрезПоследних.ГородИдентификатор КАК ГородИдентификатор,
		|	ЗоныОтветственностиПользователяСрезПоследних.НаселенныйПунктИдентификатор КАК НаселенныйПунктИдентификатор,
		|	ЗоныОтветственностиПользователяСрезПоследних.ЗначенияПолей КАК ЗначенияПолей,
		|	ЗоныОтветственностиПользователяСрезПоследних.ПредставлениеАдреса КАК ПредставлениеАдреса
		|ПОМЕСТИТЬ ВТ_ТекущиеЗоныОтветственности
		|ИЗ
		|	РегистрСведений.ЗоныОтветственностиПользователя.СрезПоследних(
		|			&Период,
		|			Организация = &Организация
		|				И Пользователь В (&ДобавляемыеПользователи)) КАК ЗоныОтветственностиПользователяСрезПоследних
		|ГДЕ
		|	ЗоныОтветственностиПользователяСрезПоследних.Используется
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТекущиеПраваПользователей.Пользователь КАК Пользователь
		|ПОМЕСТИТЬ ВТ_Пользователи
		|ИЗ
		|	ВТ_ТекущиеПраваПользователей КАК ВТ_ТекущиеПраваПользователей
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_ТекущиеПредприятияПользователей.Пользователь
		|ИЗ
		|	ВТ_ТекущиеПредприятияПользователей КАК ВТ_ТекущиеПредприятияПользователей
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_ТекущиеЗоныОтветственности.Пользователь
		|ИЗ
		|	ВТ_ТекущиеЗоныОтветственности КАК ВТ_ТекущиеЗоныОтветственности
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Пользователи.Пользователь КАК Пользователь
		|ИЗ
		|	ВТ_Пользователи КАК ВТ_Пользователи
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Пользователи.Пользователь
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТекущиеПраваПользователей.Пользователь КАК Пользователь,
		|	ВТ_ТекущиеПраваПользователей.ПравоПользователя КАК ПравоПользователя
		|ИЗ
		|	ВТ_ТекущиеПраваПользователей КАК ВТ_ТекущиеПраваПользователей
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТекущиеПредприятияПользователей.Пользователь КАК Пользователь,
		|	ВТ_ТекущиеПредприятияПользователей.Предприятие КАК Предприятие
		|ИЗ
		|	ВТ_ТекущиеПредприятияПользователей КАК ВТ_ТекущиеПредприятияПользователей
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТекущиеЗоныОтветственности.Пользователь КАК Пользователь,
		|	ВТ_ТекущиеЗоныОтветственности.СтранаИдентификатор КАК СтранаИдентификатор,
		|	ВТ_ТекущиеЗоныОтветственности.РегионИдентификатор КАК РегионИдентификатор,
		|	ВТ_ТекущиеЗоныОтветственности.РайонИдентификатор КАК РайонИдентификатор,
		|	ВТ_ТекущиеЗоныОтветственности.ГородИдентификатор КАК ГородИдентификатор,
		|	ВТ_ТекущиеЗоныОтветственности.НаселенныйПунктИдентификатор КАК НаселенныйПунктИдентификатор,
		|	ВТ_ТекущиеЗоныОтветственности.ЗначенияПолей КАК ЗначенияПолей,
		|	ВТ_ТекущиеЗоныОтветственности.ПредставлениеАдреса КАК ПредставлениеАдреса
		|ИЗ
		|	ВТ_ТекущиеЗоныОтветственности КАК ВТ_ТекущиеЗоныОтветственности";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Период"     , Новый Граница(МоментВремени(), ВидГраницы.Исключая));
	
	Если ДобавляемыеПользователи = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Пользователь В (&ДобавляемыеПользователи)", "ИСТИНА");
	Иначе
		Запрос.УстановитьПараметр("ДобавляемыеПользователи", ДобавляемыеПользователи);
	КонецЕсли;
	
	РезультатПакет = Запрос.ВыполнитьПакет();
	
	Если ДобавляемыеПользователи = Неопределено Тогда
		МассивПользователей  = РезультатПакет[4].Выгрузить().ВыгрузитьКолонку("Пользователь");
	Иначе
		МассивПользователей  = ДобавляемыеПользователи;
	КонецЕсли;
	
	ПраваПользователей       = РезультатПакет[5].Выгрузить();
	ПредприятияПользователей = РезультатПакет[6].Выгрузить();
	
	ТаблицаЗонОбслуживания.Загрузить(РезультатПакет[7].Выгрузить());
	
	Для Каждого ТекПользователь Из МассивПользователей Цикл
		
		СтруктураПоиска = Новый Структура("Пользователь", ТекПользователь);
		НайденныеСтроки = ТаблицаПользователейМеркурия.НайтиСтроки(СтруктураПоиска);
		
		Если НайденныеСтроки.Количество() > 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаПользователя = ТаблицаПользователейМеркурия.Добавить();
		СтрокаПользователя.Пользователь = ТекПользователь;
		
		ЗначенияРеквизитовПользователя = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ТекПользователь, "Логин, НеИспользуетсяПриОбмене, ВетеринарныйВрач");
		
		// Служебных пользователей так же не регистрируем, т.к. они в обмене не участвуют, а могут просто вводить документы без отправки в Меркурий
		// Ветеринарных врачей не можем регистрировать, т.е. он уже должен быть в Меркурии
		Если ПустаяСтрока(ЗначенияРеквизитовПользователя.Логин)
			И (НЕ ЗначенияРеквизитовПользователя.НеИспользуетсяПриОбмене И НЕ ЗначенияРеквизитовПользователя.ВетеринарныйВрач) Тогда
			СтрокаПользователя.РегистрацияНового = Истина;
		КонецЕсли;
		
		МассивПравПользователя = ПраваПользователей.Скопировать(СтруктураПоиска).ВыгрузитьКолонку("ПравоПользователя");
		
		Если МассивПравПользователя.Количество() = 0 Тогда
			СтрокаПользователя.УстановкаСвязи = Истина;
		КонецЕсли;
		
		Для Каждого ТекПраво Из СписокПравКНазначению Цикл
			
			СтрокаПрава = ТаблицаПравПользователей.Добавить();
			СтрокаПрава.Пользователь      = ТекПользователь;
			СтрокаПрава.ПравоПользователя = ТекПраво.Значение;
			
			Если СписокПравПоУмолчанию.НайтиПоЗначению(ТекПраво.Значение) <> Неопределено Тогда
				СтрокаПрава.Используется = Истина;
			ИначеЕсли МассивПравПользователя.Найти(ТекПраво.Значение) <> Неопределено Тогда
				СтрокаПрава.Используется = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
		МассивПредприятийПользователя = ПредприятияПользователей.Скопировать(СтруктураПоиска).ВыгрузитьКолонку("Предприятие");
		
		Для Каждого ТекПредприятие Из СписокПредприятийКонтрагента Цикл
			
			СтрокаПредприятия = ТаблицаОбслуживаемыхПредприятий.Добавить();
			СтрокаПредприятия.Пользователь = ТекПользователь;
			СтрокаПредприятия.Предприятие  = ТекПредприятие.Значение;
			
			Если МассивПредприятийПользователя.Найти(ТекПредприятие.Значение) <> Неопределено Тогда
				СтрокаПредприятия.Используется = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЕстьИзмененияСвойствПользователя(Пользователь, ТабличныеЧасти)

	ЕстьИзменения = Ложь;
	Для Каждого ТабличнаяЧасть Из ТабличныеЧасти Цикл
		Если ТабличнаяЧасть = ТаблицаЗонОбслуживания Тогда
			СтруктураПоиска = Новый Структура("Пользователь", Пользователь);
		Иначе
			СтруктураПоиска = Новый Структура("Пользователь, Изменен", Пользователь, Истина);
		КонецЕсли;
		НайденныеСтроки = ТабличнаяЧасть.НайтиСтроки(СтруктураПоиска);
		Если ТабличнаяЧасть = ТаблицаПравПользователей Тогда
			// Данные в Меркурий не отправляем, если у пользователя изменилось одно из прав:
			// "Загрузка ВСД" (MERCURY_DOWNLOAD_CERTIFICATE), т.к. это служебное право и его нет в доступных для назначения.
			// "Назначение уполномоченных ХС" (MERCURY_HS_AUTHORIZED_ASSIGNMENT), т.к. его нет в списке доступных для назначения,
			// но при получении данных по пользователю такое право может прийти. Если его отправить в Меркурий, то операция завершится с ошибкой.
			
			КоличествоНайденныхСтрок = НайденныеСтроки.Количество();
			
			Для ОбратныйИндекс = 1 По КоличествоНайденныхСтрок Цикл
				
				Индекс = КоличествоНайденныхСтрок - ОбратныйИндекс;
				
				Если НайденныеСтроки[Индекс].ПравоПользователя.Код = "MERCURY_DOWNLOAD_CERTIFICATE"
					ИЛИ НайденныеСтроки[Индекс].ПравоПользователя.Код = "MERCURY_HS_AUTHORIZED_ASSIGNMENT" Тогда
					
					НайденныеСтроки.Удалить(Индекс);
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		ЕстьИзменения   = Макс(ЕстьИзменения, НайденныеСтроки.Количество() > 0);
	КонецЦикла;
	
	Возврат ЕстьИзменения;
КонецФункции

Функция ЕстьЭтапыВыполненияОбмена(Пользователь, ВидОперации = Неопределено, ЭтапЗавершен = Истина, МассивСтрок)
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Пользователь"   , Пользователь);
	СтруктураПоиска.Вставить("ЭтапЗавершен"   , ЭтапЗавершен);
	Если ВидОперации <> Неопределено Тогда
		СтруктураПоиска.Вставить("ВидОперации", ВидОперации);
	КонецЕсли;
	
	МассивСтрок = ЭтапыВыполненияОбмена.НайтиСтроки(СтруктураПоиска);
	
	Возврат МассивСтрок.Количество() > 0;
КонецФункции

Процедура ДобавитьСтрокуЭтапа(Пользователь, ВидОперации, НомерЭтапа)
	
	НовыйЭтап = ЭтапыВыполненияОбмена.Добавить();
	НовыйЭтап.ВидОперации  = ВидОперации;
	НовыйЭтап.Пользователь = Пользователь;
	НовыйЭтап.НомерЭтапа   = НомерЭтапа;
	
КонецПроцедуры

Процедура УдалитьСтрокиЭтаповОбмена(МассивСтрок)
	
	Для Каждого ТекСтрока Из МассивСтрок Цикл
		
		ЭтапыВыполненияОбмена.Удалить(ТекСтрока);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли