#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка = Истина Тогда
		Возврат
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("Ответственный") Тогда
		ДополнительныеСвойства.Свойство("Ответственный", Ответственный);
	Иначе
		Ответственный = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ТаблицаРезультат.Очистить();
	
	ЕстьПравоОбслуживания = ИнтеграцияВетисAPIСервер.ПроверитьОграниченияПользователя(Организация, Предприятие);
	
	Если НЕ ЕстьПравоОбслуживания Тогда
		Предприятие = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ИнтеграцияВетисAPIСервер.УстановитьСтатусПодготовлен(Ссылка);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	УспешноОбработана = Ложь;
	Если РегистрыСведений.ЖурналРегистрацииСостоянийЗаявокНаОформлениеОпераций.ТекущийСтатусДокумента(Ссылка) = Справочники.СтатусыЗаявок.УспешноОбработана Тогда
		УспешноОбработана = Истина;
	КонецЕсли;
	
	// Получаем текст запроса данных для движений по регистру "ДвиженияПродукции" ))
	Документы.Инвентаризации.ПолучитьТекстЗапросаДвиженияПродукции(Запрос.Текст, Ссылка, УспешноОбработана);
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Движения.ДвижениеПродукции.Записывать = Истина;
	Движения.ДвижениеПродукции.БлокироватьДляИзменения = Истина;
	Движения.ДвижениеПродукции.Очистить();
	Движения.ДвижениеПродукции.Загрузить(Запрос.Выполнить().Выгрузить());
	Движения.Записать();
	
	// Проверяем остатки
	
	Если УспешноОбработана Тогда
		Возврат;
	КонецЕсли;
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВТ_ТаблицаПродукция.НомерСтроки КАК НомерСтроки,
		|	ВТ_ТаблицаПродукция.Организация КАК Организация,
		|	ВТ_ТаблицаПродукция.Предприятие.Представление КАК Предприятие,
		|	ВТ_ТаблицаПродукция.ЗаписьСкладскогоЖурнала.Представление КАК ЗаписьСкладскогоЖурналаПредставление,
		|	ЕСТЬNULL(ВТ_ТаблицаПродукция.ЗаписьСкладскогоЖурнала.ЕдиницаИзмерения.Представление, """") КАК ЕдиницаИзмерения,
		|	-ЕСТЬNULL(ДвижениеПродукцииОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток
		|ИЗ
		|	ВТ_ТаблицаПродукция КАК ВТ_ТаблицаПродукция
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДвижениеПродукции.Остатки(
		|				&ТочкаИтогов,
		|				(Организация, Предприятие, ЗаписьСкладскогоЖурнала) В
		|					(ВЫБРАТЬ
		|						ВТ_ТаблицаПродукция.Организация,
		|						ВТ_ТаблицаПродукция.Предприятие,
		|						ВТ_ТаблицаПродукция.ЗаписьСкладскогоЖурнала
		|					ИЗ
		|						ВТ_ТаблицаПродукция КАК ВТ_ТаблицаПродукция)) КАК ДвижениеПродукцииОстатки
		|		ПО ВТ_ТаблицаПродукция.ЗаписьСкладскогоЖурнала = ДвижениеПродукцииОстатки.ЗаписьСкладскогоЖурнала
		|			И ВТ_ТаблицаПродукция.Предприятие = ДвижениеПродукцииОстатки.Предприятие
		|			И ВТ_ТаблицаПродукция.Организация = ДвижениеПродукцииОстатки.Организация
		|ГДЕ
		|	ДвижениеПродукцииОстатки.КоличествоОстаток < 0";
	
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ТочкаИтогов", Новый Граница(МоментВремени(), ВидГраницы.Включая));
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ШаблонСообщения = НСтр("ru = 'В строке № %1 не достаточно продукции ""%2"".
					|По организации ""%3"" и предприятию ""%4"" не хватает %5 ""%6""'");
		
		ПолеКоличество = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ТаблицаПродукции", Выборка.НомерСтроки, "Количество");
		
			ШаблонСообщения = СтрШаблон(
								ШаблонСообщения,
								Выборка.НомерСтроки,
								Выборка.ЗаписьСкладскогоЖурналаПредставление,
								Выборка.Организация,
								Выборка.Предприятие,
								Выборка.КоличествоОстаток,
								Выборка.ЕдиницаИзмерения);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
								ШаблонСообщения,
								ЭтотОбъект,
								ПолеКоличество,
								,
								Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ИнтеграцияВетисAPIСервер.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ);
	ПроверитьКорректностьЗаполненияТабличнойЧастиПродукция(Отказ);
	ПроверитьКорректностьЗаполненияТабличнойЧастиНоваяПродукция(Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьКорректностьЗаполненияТабличнойЧастиПродукция(Отказ)
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
		|	ТаблицаДокумента.Продукция КАК Продукция,
		|	ТаблицаДокумента.СкоропортящаясяПродукция КАК СкоропортящаясяПродукция,
		|	ТаблицаДокумента.ФорматДатыВыработки КАК ФорматДатыВыработки,
		|	ТаблицаДокумента.ДатаВыработкиНачало КАК ДатаВыработкиНачало,
		|	ТаблицаДокумента.ДатаВыработкиОкончание КАК ДатаВыработкиОкончание,
		|	ТаблицаДокумента.ФорматСрокаГодности КАК ФорматСрокаГодности,
		|	ТаблицаДокумента.ДатаОкончанияСрокаГодностиНачало КАК ДатаОкончанияСрокаГодностиНачало,
		|	ТаблицаДокумента.ДатаОкончанияСрокаГодностиОкончание КАК ДатаОкончанияСрокаГодностиОкончание,
		|	ТаблицаДокумента.ДатаБумажногоВСД КАК ДатаБумажногоВСД,
		|	ТаблицаДокумента.НомерБумажногоВСД КАК НомерБумажногоВСД,
		|	ВЫРАЗИТЬ(ТаблицаДокумента.ЗаписьСкладскогоЖурнала КАК Справочник.СвойстваЗаписейСкладскогоЖурнала) КАК ЗаписьСкладскогоЖурнала
		|ПОМЕСТИТЬ ТаблицаДокумента
		|ИЗ
		|	&ТаблицаПродукция КАК ТаблицаДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МИНИМУМ(ТаблицаДокумента.НомерСтроки) КАК МинимальныйНомерСтроки,
		|	ТаблицаДокумента.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала
		|ПОМЕСТИТЬ МинимальныеСтроки
		|ИЗ
		|	ТаблицаДокумента КАК ТаблицаДокумента
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаДокумента.ЗаписьСкладскогоЖурнала
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МинимальныеСтроки.МинимальныйНомерСтроки КАК МинимальныйНомерСтроки,
		|	МинимальныеСтроки.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
		|	ТаблицаДокумента.НомерСтроки КАК НомерСтрокиДубля
		|ИЗ
		|	МинимальныеСтроки КАК МинимальныеСтроки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДокумента КАК ТаблицаДокумента
		|		ПО МинимальныеСтроки.ЗаписьСкладскогоЖурнала = ТаблицаДокумента.ЗаписьСкладскогоЖурнала
		|			И МинимальныеСтроки.МинимальныйНомерСтроки <> ТаблицаДокумента.НомерСтроки
		|
		|УПОРЯДОЧИТЬ ПО
		|	МинимальныйНомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИнвентаризацииТаблицаПродукции.НомерСтроки КАК НомерСтроки,
		|	ИнвентаризацииТаблицаПродукции.Продукция КАК Продукция,
		|	ИнвентаризацииТаблицаПродукции.СкоропортящаясяПродукция КАК СкоропортящаясяПродукция,
		|	ИнвентаризацииТаблицаПродукции.ФорматДатыВыработки КАК ФорматДатыВыработки,
		|	ИнвентаризацииТаблицаПродукции.ДатаВыработкиНачало КАК ДатаВыработкиНачало,
		|	ИнвентаризацииТаблицаПродукции.ДатаВыработкиОкончание КАК ДатаВыработкиОкончание,
		|	ИнвентаризацииТаблицаПродукции.ФорматСрокаГодности КАК ФорматСрокаГодности,
		|	ИнвентаризацииТаблицаПродукции.ДатаОкончанияСрокаГодностиНачало КАК ДатаОкончанияСрокаГодностиНачало,
		|	ИнвентаризацииТаблицаПродукции.ДатаОкончанияСрокаГодностиОкончание КАК ДатаОкончанияСрокаГодностиОкончание,
		|	ИнвентаризацииТаблицаПродукции.ДатаБумажногоВСД КАК ДатаБумажногоВСД,
		|	ИнвентаризацииТаблицаПродукции.НомерБумажногоВСД КАК НомерБумажногоВСД,
		|	ИнвентаризацииТаблицаПродукции.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
		|	ИнвентаризацииТаблицаПродукции.ЗаписьСкладскогоЖурнала.НеИспользуется КАК ЗаписьСкладскогоЖурналаНеИспользуется,
		|	ВерсииЗаписейСкладскогоЖурнала.СтатусВерсииЗаписиСкладскогоЖурнала КАК СтатусВерсииЗаписиСкладскогоЖурнала
		|ИЗ
		|	ТаблицаДокумента КАК ИнвентаризацииТаблицаПродукции
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВерсииЗаписейСкладскогоЖурнала КАК ВерсииЗаписейСкладскогоЖурнала
		|		ПО ИнвентаризацииТаблицаПродукции.ЗаписьСкладскогоЖурнала = ВерсииЗаписейСкладскогоЖурнала.ЗаписьСкладскогоЖурнала
		|			И ИнвентаризацииТаблицаПродукции.ЗаписьСкладскогоЖурнала.GUID_Меркурий = ВерсииЗаписейСкладскогоЖурнала.GUID_Меркурий";
	
	Запрос.УстановитьПараметр("ТаблицаПродукция", ТаблицаПродукции.Выгрузить());
	
	РезультатЗапросаПакет = Запрос.ВыполнитьПакет();
	Выборка   = РезультатЗапросаПакет[2].Выбрать();
	ВыборкаТЧ = РезультатЗапросаПакет[3].Выбрать();
	
	ШаблонСообщения = НСтр("ru='В строке № %1 и строке № %2 списка ""Продукция"" обнаружено дублирование записей складского журнала: %3'");
	
	Пока Выборка.Следующий() Цикл
		
		Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ТаблицаПродукции", Выборка.МинимальныйНомерСтроки, "ЗаписьСкладскогоЖурнала");
		
		ТекстСообщения = СтрШаблон(
			ШаблонСообщения,
			Выборка.МинимальныйНомерСтроки,
			Выборка.НомерСтрокиДубля,
			Выборка.ЗаписьСкладскогоЖурнала);
			
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле,, Отказ);
		
	КонецЦикла;
	
	ШаблонСообщения = НСтр("ru='В строке %1 списка ""Продукция"" ошибка в данных: ""%2""'");
	
	Пока ВыборкаТЧ.Следующий() Цикл
		
		Если ЗначениеЗаполнено(ВыборкаТЧ.ДатаБумажногоВСД) И Не ЗначениеЗаполнено(ВыборкаТЧ.НомерБумажногоВСД) Тогда
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ТаблицаПродукции", ВыборкаТЧ.НомерСтроки, "НомерБумажногоВСД");
				
			ТекстСообщения = СтрШаблон(
				ШаблонСообщения,
				ВыборкаТЧ.НомерСтроки,
				"Не указан номер ВСД.");
				
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле,, Отказ);
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВыборкаТЧ.НомерБумажногоВСД) И Не ЗначениеЗаполнено(ВыборкаТЧ.ДатаБумажногоВСД) Тогда
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ТаблицаПродукции", ВыборкаТЧ.НомерСтроки, "ДатаБумажногоВСД");
				
			ТекстСообщения = СтрШаблон(
				ШаблонСообщения,
				ВыборкаТЧ.НомерСтроки,
				"Не указана дата ВСД.");
				
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле,, Отказ);
			
		КонецЕсли;
	
		ИнтеграцияВетисAPIСервер.ПроверитьКорректностьЗаполненияДат(ЭтотОбъект, ВыборкаТЧ, "ТаблицаПродукции", "Продукция", Отказ);
		ИнтеграцияВетисAPIСервер.ПроверитьКорректностьСвойствЗаписиСкладскогоЖурнала(ЭтотОбъект, ВыборкаТЧ, "ТаблицаПродукции", "Продукция", Отказ);
		
	КонецЦикла;

КонецПроцедуры

Процедура ПроверитьКорректностьЗаполненияТабличнойЧастиНоваяПродукция(Отказ)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаНоваяПродукция.НомерСтроки КАК НомерСтроки,
		|	ТаблицаНоваяПродукция.ВидПродукции КАК ВидПродукции,
		|	ТаблицаНоваяПродукция.Продукция КАК Продукция,
		|	ТаблицаНоваяПродукция.СкоропортящаясяПродукция КАК СкоропортящаясяПродукция,
		|	ТаблицаНоваяПродукция.ФорматДатыВыработки КАК ФорматДатыВыработки,
		|	ТаблицаНоваяПродукция.ДатаВыработкиНачало КАК ДатаВыработкиНачало,
		|	ТаблицаНоваяПродукция.ДатаВыработкиОкончание КАК ДатаВыработкиОкончание,
		|	ТаблицаНоваяПродукция.ФорматСрокаГодности КАК ФорматСрокаГодности,
		|	ТаблицаНоваяПродукция.ДатаОкончанияСрокаГодностиНачало КАК ДатаОкончанияСрокаГодностиНачало,
		|	ТаблицаНоваяПродукция.ДатаОкончанияСрокаГодностиОкончание КАК ДатаОкончанияСрокаГодностиОкончание,
		|	ТаблицаНоваяПродукция.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ВЫРАЗИТЬ(ТаблицаНоваяПродукция.ПродукцияПроизводителя КАК Справочник.Продукция) КАК ПродукцияПроизводителя,
		|	ТаблицаНоваяПродукция.ДатаБумажногоВСД КАК ДатаБумажногоВСД,
		|	ТаблицаНоваяПродукция.НомерБумажногоВСД КАК НомерБумажногоВСД
		|ПОМЕСТИТЬ ВТ_ТаблицаНоваяПродукция
		|ИЗ
		|	&ТаблицаНоваяПродукция КАК ТаблицаНоваяПродукция
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИнвентаризацииТаблицаНовойПродукции.НомерСтроки КАК НомерСтроки,
		|	ИнвентаризацииТаблицаНовойПродукции.ВидПродукции КАК ВидПродукции,
		|	ИнвентаризацииТаблицаНовойПродукции.Продукция КАК Продукция,
		|	ИнвентаризацииТаблицаНовойПродукции.СкоропортящаясяПродукция КАК СкоропортящаясяПродукция,
		|	ИнвентаризацииТаблицаНовойПродукции.ФорматДатыВыработки КАК ФорматДатыВыработки,
		|	ИнвентаризацииТаблицаНовойПродукции.ДатаВыработкиНачало КАК ДатаВыработкиНачало,
		|	ИнвентаризацииТаблицаНовойПродукции.ДатаВыработкиОкончание КАК ДатаВыработкиОкончание,
		|	ИнвентаризацииТаблицаНовойПродукции.ФорматСрокаГодности КАК ФорматСрокаГодности,
		|	ИнвентаризацииТаблицаНовойПродукции.ДатаОкончанияСрокаГодностиНачало КАК ДатаОкончанияСрокаГодностиНачало,
		|	ИнвентаризацииТаблицаНовойПродукции.ДатаОкончанияСрокаГодностиОкончание КАК ДатаОкончанияСрокаГодностиОкончание,
		|	ИнвентаризацииТаблицаНовойПродукции.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ИнвентаризацииТаблицаНовойПродукции.ПродукцияПроизводителя КАК ПродукцияПроизводителя,
		|	ИнвентаризацииТаблицаНовойПродукции.ПродукцияПроизводителя.Владелец.Владелец КАК ВидПродукцииПроизводителя,
		|	ИнвентаризацииТаблицаНовойПродукции.ДатаБумажногоВСД КАК ДатаБумажногоВСД,
		|	ИнвентаризацииТаблицаНовойПродукции.НомерБумажногоВСД КАК НомерБумажногоВСД
		|ИЗ
		|	ВТ_ТаблицаНоваяПродукция КАК ИнвентаризацииТаблицаНовойПродукции";
	
	Запрос.УстановитьПараметр("ТаблицаНоваяПродукция", ТаблицаНовойПродукции.Выгрузить());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ШаблонСообщения = НСтр("ru='В строке %1 списка ""Новая продукция"" ошибка в данных: ""%2""'");
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если ЗначениеЗаполнено(Выборка.ДатаБумажногоВСД) И Не ЗначениеЗаполнено(Выборка.НомерБумажногоВСД) Тогда
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ТаблицаНовойПродукции", Выборка.НомерСтроки, "НомерБумажногоВСД");
				
				ТекстСообщения = СтрШаблон(
					ШаблонСообщения,
					Выборка.НомерСтроки,
					"Не указан номер ВСД.");
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле,, Отказ);
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.НомерБумажногоВСД) И Не ЗначениеЗаполнено(Выборка.ДатаБумажногоВСД) Тогда
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ТаблицаНовойПродукции", Выборка.НомерСтроки, "ДатаБумажногоВСД");
				
				ТекстСообщения = СтрШаблон(
					ШаблонСообщения,
					Выборка.НомерСтроки,
					"Не указана дата ВСД.");
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле,, Отказ);
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.ПродукцияПроизводителя) Тогда
			
			Если Выборка.ВидПродукцииПроизводителя <> Выборка.ВидПродукции Тогда
				
				Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ТаблицаНовойПродукции", Выборка.НомерСтроки, "ПродукцияПроизводителя");
				
				ТекстСообщения = СтрШаблон(
					ШаблонСообщения,
					Выборка.НомерСтроки,
					"Продукция производителя должна быть того же вида, что и добавляемая продукция.");
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле,, Отказ);
				
			КонецЕсли;
			
			Если Выборка.СтранаПроисхождения = Справочники.СтраныМира.Россия Тогда
				
				Если Не ИнтеграцияВетисAPIСервер.ЭтоЗарегистрированнаяПродукция(Выборка.ПродукцияПроизводителя) Тогда
					
					Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ТаблицаНовойПродукции", Выборка.НомерСтроки, "ПродукцияПроизводителя");
					
					ТекстСообщения = СтрШаблон(
						ШаблонСообщения,
						Выборка.НомерСтроки,
						"Продукция, произведённая в РФ, должна быть зарегистрирована или не задана вообще.");
					
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле,, Отказ);
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		ИнтеграцияВетисAPIСервер.ПроверитьКорректностьЗаполненияДат(ЭтотОбъект, Выборка, "ТаблицаНовойПродукции", "Новая продукция", Отказ);
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИнвентаризацииТаблицаНовойПродукции.НомерСтроки КАК НомерСтроки,
		|	ИнвентаризацииТаблицаНовойПродукции.GUIDСтроки КАК GUIDСтроки,
		|	ИнвентаризацииТаблицаНовойПродукции.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ВЫРАЗИТЬ(ИнвентаризацииТаблицаНовойПродукции.ПродукцияПроизводителя КАК Справочник.Продукция) КАК ПродукцияПроизводителя
		|ПОМЕСТИТЬ ВТ_НоваяПродукция
		|ИЗ
		|	&ТаблицаНоваяПродукция КАК ИнвентаризацииТаблицаНовойПродукции
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИнвентаризацииТаблицаПроизводителей.GUIDСтроки КАК GUIDСтроки,
		|	ИнвентаризацииТаблицаПроизводителей.Производитель КАК Производитель
		|ПОМЕСТИТЬ ВТ_Производители
		|ИЗ
		|	&ТаблицаПроизводителей КАК ИнвентаризацииТаблицаПроизводителей
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_НоваяПродукция.НомерСтроки КАК НомерСтроки,
		|	ВТ_НоваяПродукция.GUIDСтроки КАК GUIDСтроки,
		|	ВТ_НоваяПродукция.ПродукцияПроизводителя КАК ПродукцияПроизводителя,
		|	ПродукцияПроизводителиПродукции.Предприятие КАК Предприятие
		|ПОМЕСТИТЬ ВТ_ПроизводителиПродукции
		|ИЗ
		|	ВТ_НоваяПродукция КАК ВТ_НоваяПродукция
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Продукция.ПроизводителиПродукции КАК ПродукцияПроизводителиПродукции
		|		ПО ВТ_НоваяПродукция.ПродукцияПроизводителя = ПродукцияПроизводителиПродукции.Ссылка
		|ГДЕ
		|	ВТ_НоваяПродукция.ПродукцияПроизводителя.GUID_Меркурий <> """"
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_НоваяПродукция.НомерСтроки КАК НомерСтроки,
		|	ВТ_НоваяПродукция.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ВТ_Производители.Производитель КАК Производитель,
		|	ВЫБОР
		|		КОГДА ВТ_Производители.Производитель ССЫЛКА Справочник.Предприятия
		|			ТОГДА ВЫРАЗИТЬ(ВТ_Производители.Производитель КАК Справочник.Предприятия).СтранаРегистрации
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК СтранаРегистрации,
		|	ВЫБОР
		|		КОГДА ВТ_Производители.Производитель ССЫЛКА Справочник.Предприятия
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ОшибкаТипаПредприятия
		|ИЗ
		|	ВТ_НоваяПродукция КАК ВТ_НоваяПродукция
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Производители КАК ВТ_Производители
		|		ПО ВТ_НоваяПродукция.GUIDСтроки = ВТ_Производители.GUIDСтроки
		|ГДЕ
		|	(ВЫБОР
		|				КОГДА ВТ_Производители.Производитель ССЫЛКА Справочник.Предприятия
		|					ТОГДА ВЫРАЗИТЬ(ВТ_Производители.Производитель КАК Справочник.Предприятия).СтранаРегистрации
		|				ИНАЧЕ """"
		|			КОНЕЦ <> ВТ_НоваяПродукция.СтранаПроисхождения
		|			ИЛИ НЕ ВТ_Производители.Производитель ССЫЛКА Справочник.Предприятия)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПроизводителиПродукции.НомерСтроки КАК НомерСтроки,
		|	ВТ_ПроизводителиПродукции.ПродукцияПроизводителя КАК ПродукцияПроизводителя,
		|	ВТ_Производители.Производитель КАК Производитель
		|ИЗ
		|	ВТ_ПроизводителиПродукции КАК ВТ_ПроизводителиПродукции
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Производители КАК ВТ_Производители
		|		ПО ВТ_ПроизводителиПродукции.GUIDСтроки = ВТ_Производители.GUIDСтроки
		|ГДЕ
		|	НЕ ВТ_Производители.Производитель В
		|				(ВЫБРАТЬ
		|					ВТ_ПроизводителиПродукции.Предприятие КАК Предприятие
		|				ИЗ
		|					ВТ_ПроизводителиПродукции КАК ВТ_ПроизводителиПродукции)";
		
	
	Запрос.УстановитьПараметр("ТаблицаНоваяПродукция", ТаблицаНовойПродукции.Выгрузить());
	Запрос.УстановитьПараметр("ТаблицаПроизводителей", ТаблицаПроизводителей.Выгрузить());
	
	РезультатПакет = Запрос.ВыполнитьПакет();
	
	ПроверкаДанныхПроизводителей = РезультатПакет[3].Выбрать();
	ПроверкаПроизводителей       = РезультатПакет[4].Выбрать();
	
	Пока ПроверкаДанныхПроизводителей.Следующий() Цикл
		
		Если ПроверкаДанныхПроизводителей.ОшибкаТипаПредприятия Тогда
			
			ШаблонСообщения = НСтр("ru='В строке %1 списка ""Новая продукция"" указан производитель ""%2"", который выбран не из справочника ""Предприятия"".'");
			
			ТекстСообщения = СтрШаблон(
				ШаблонСообщения,
				ПроверкаДанныхПроизводителей.НомерСтроки,
				ПроверкаДанныхПроизводителей.Производитель);
			
		Иначе
			
			ШаблонСообщения = НСтр("ru='В строке %1 списка ""Новая продукция"" указан производитель ""%2"", который не зарегистрирован на территории страны происхождения ""%3"".'");
			
			ТекстСообщения = СтрШаблон(
				ШаблонСообщения,
				ПроверкаДанныхПроизводителей.НомерСтроки,
				ПроверкаДанныхПроизводителей.Производитель,
				ПроверкаДанныхПроизводителей.СтранаПроисхождения);
			
		КонецЕсли;
		
		Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ТаблицаНовойПродукции", ПроверкаДанныхПроизводителей.НомерСтроки, "Производитель");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле,, Отказ);
		
	КонецЦикла;
	
	ШаблонСообщения = НСтр("ru='В строке %1 списка ""Новая продукция"" указан производитель ""%2"", которго нет в списке предприятий, на которых выпускается продукция производителя ""%3"".'");
	
	Пока ПроверкаПроизводителей.Следующий() Цикл
		
		Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ТаблицаНовойПродукции", ПроверкаПроизводителей.НомерСтроки, "Производитель");
		
		ТекстСообщения = СтрШаблон(
			ШаблонСообщения,
			ПроверкаПроизводителей.НомерСтроки,
			ПроверкаПроизводителей.Производитель,
			ПроверкаПроизводителей.ПродукцияПроизводителя);
			
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле,, Отказ);
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#КонецЕсли