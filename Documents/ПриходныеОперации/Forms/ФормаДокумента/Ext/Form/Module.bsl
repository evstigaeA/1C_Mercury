#Область ОписаниеПеременных

// СтандартныеПодсистемы.ОценкаПроизводительности
&НаКлиенте
Перем ИдентификаторЗамераПроведение, ИдентификаторЗамераПроведениеНеНужнаРегистрацияОшибки;
// Конец СтандартныеПодсистемы.ОценкаПроизводительности

#КонецОбласти

#Область ОбработчикиСобытийФорм

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ПриЧтенииСозданииНаСервере();
		
	КонецЕсли;
	
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	ОбщегоНазначенияУВСКлиентСервер.ДополнительныеДействияСФормой(ЭтаФорма);
	
	Элементы.СписокСвязанныхДокументов_ВозвратТипСвязанногоДокумента.РежимВыбораИзСписка = Истина;
	Элементы.СписокСвязанныхДокументов_ВозвратТипСвязанногоДокумента.СписокВыбора.ЗагрузитьЗначения(Справочники.ТипыТТН.СписокРазрешенныхДокументовОтгрузки());
	Элементы.ЗаписьСкладскогоЖурнала.Видимость = Не Объект.УполномоченноеГашение;
	
	ТипПродукцииЖивыеЖивотные = ИнтеграцияВетисAPIВызовСервера.ПродукцияПринадлежитТипуЖивыхЖивотных(Объект.Продукция);
	
	ИнтеграцияВетисAPIСервер.УстановитьОформлениеЭлементовФормы(ЭтаФорма);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриЧтенииСозданииНаСервере();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбщегоНазначенияУВСКлиент.УстановитьВидимостьДанныхПоТипуПеревозки(ЭтотОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ОбщегоНазначенияУВСКлиент.ОповеститьДокументы(ИмяСобытия, Параметр, Источник, ЭтаФорма);
	
	Если ИмяСобытия = "ПроведенаПроверкаРегионализации" Тогда
		ЭтаФорма.Прочитать();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ОценкаПроизводительности
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ИдентификаторЗамераПроведение = ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, "ПроведениеДокументаОшибка");
		ОценкаПроизводительностиКлиент.УстановитьПризнакОшибкиЗамера(ИдентификаторЗамераПроведение, Истина);
				
		ИдентификаторЗамераПроведениеНеНужнаРегистрацияОшибки = ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ОценкаПроизводительности
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ОценкаПроизводительности
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ОценкаПроизводительностиКлиент.УстановитьКлючевуюОперациюЗамера(ИдентификаторЗамераПроведение, "ПроведениеДокумента");
		ОценкаПроизводительностиКлиент.УстановитьПризнакОшибкиЗамера(ИдентификаторЗамераПроведение, Ложь);
		
		ОценкаПроизводительностиКлиент.УстановитьКлючевуюОперациюЗамера(ИдентификаторЗамераПроведениеНеНужнаРегистрацияОшибки, "ПроведениеДокументаНеНужнаРегистрацияОшибки");
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ОценкаПроизводительности
	
	ОбщегоНазначенияУВСКлиентСервер.ДополнительныеДействияСФормой(ЭтаФорма);
	Оповестить("ИзменениеСтатусаЗаявкиНаОформлениеОперации");
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ИзменитьЗаголовокПоТипуПриходнойОперации();
	
	// Обработчик подсистемы запрета редактирования реквизитов объектов.
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов") Тогда
		МодульЗапретРедактированияРеквизитовОбъектов = ОбщегоНазначения.ОбщийМодуль("ЗапретРедактированияРеквизитовОбъектов");
		МодульЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	ИзменитьЗаголовокПоТипуПриходнойОперации();
	
КонецПроцедуры
	
&НаКлиенте
Процедура СтатусНажатие(Элемент, СтандартнаяОбработка)
	
	ОбщегоНазначенияУВСКлиент.ОткрытьФормуЖурналаСостоянияЗаявок(ЭтотОбъект, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий_ПредприятиеПолучатель

&НаКлиенте
Процедура ПредприятиеПолучательПриИзменении(Элемент)
	
	ОбщегоНазначенияУВСКлиент.ПредприятиеПриИзменении(Объект.КонтрагентПолучатель, Объект.ПредприятиеПолучатель);
	ОбщегоНазначенияУВСКлиент.УстановитьЗначениеРеквизитовПоТипуПеревозки(Объект);
	ОбщегоНазначенияУВСКлиент.УстановитьВидимостьДанныхПоТипуПеревозки(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредприятиеПолучательНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияУВСКлиент.ПредприятиеНачалоВыбора(Элемент, СтандартнаяОбработка, Объект.Организация);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредприятиеПолучательАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ОбщегоНазначенияУВСКлиент.ПредприятиеАвтоПодбор(Текст, ДанныеВыбора, СтандартнаяОбработка, Объект.Организация);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредприятиеПолучательОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ОбщегоНазначенияУВСКлиент.ПредприятиеОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка, Объект.Организация);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий_ПредприятиеОтправитель

&НаКлиенте
Процедура ПредприятиеОтправительПриИзменении(Элемент)
	
	ОбщегоНазначенияУВСКлиент.УстановитьЗначениеРеквизитовПоТипуПеревозки(Объект);
	ОбщегоНазначенияУВСКлиент.УстановитьВидимостьДанныхПоТипуПеревозки(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредприятиеОтправительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияУВСКлиент.ПредприятиеНачалоВыбора(Элемент, СтандартнаяОбработка, Объект.Организация, Объект.КонтрагентОтправитель, Объект.УполномоченноеГашение);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредприятиеОтправительАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ОбщегоНазначенияУВСКлиент.ПредприятиеАвтоПодбор(Текст, ДанныеВыбора, СтандартнаяОбработка, Объект.Организация, Объект.КонтрагентОтправитель, Объект.УполномоченноеГашение);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредприятиеОтправительОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ОбщегоНазначенияУВСКлиент.ПредприятиеОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка, Объект.Организация, Объект.КонтрагентОтправитель, Объект.УполномоченноеГашение);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий_НоменклатураУчетнойСистемы

&НаКлиенте
Процедура НоменклатураУчетнойСистемыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияУВСКлиент.НоменклатураУчетнойСистемыНачалоВыбора(Элемент, СтандартнаяОбработка, Объект.Продукция);
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураУчетнойСистемыАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ОбщегоНазначенияУВСКлиент.НоменклатураУчетнойСистемыАвтоПодбор(ДанныеВыбора, Текст, СтандартнаяОбработка, Объект.Продукция);
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураУчетнойСистемыОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ОбщегоНазначенияУВСКлиент.НоменклатураУчетнойСистемыОкончаниеВводаТекста(ДанныеВыбора, Текст, СтандартнаяОбработка, Объект.Продукция);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов") Тогда
		МодульЗапретРедактированияРеквизитовОбъектовКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ЗапретРедактированияРеквизитовОбъектовКлиент");
		МодульЗапретРедактированияРеквизитовОбъектовКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДанныеВозврата(Команда)
	
	ЗаполнитьДанныеДляВозвратаНаОсновеВходящихДанных();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеДляВозвратаНаОсновеВходящихДанных()
	
	Объект.ТипТТН_Возврат          = Объект.ВСД.ТипТТН;
	Объект.НомерТТН_Возврат        = Объект.ВСД.НомерТТН;
	Объект.ДатаТТН_Возврат         = Объект.ВСД.ДатаТТН;
	Объект.СерияТТН_Возврат        = Объект.ВСД.СерияТТН;
	Объект.ДатаВСД_Возврат         = ТекущаяДата();
	Объект.НазначениеГруза_Возврат = Объект.НазначениеГруза;
	Если Объект.ВСД.Количество > Объект.Количество Тогда
		Объект.Количество_Возврат  = Объект.ВСД.Количество - Объект.Количество;
	Иначе
		Объект.Количество_Возврат  = 0;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВСДУсловияПеремещенияПродукции.НомерСтроки КАК НомерСтроки,
		|	ИСТИНА КАК ВыполняетсяУсловие,
		|	ВСДУсловияПеремещенияПродукции.УсловиеПеремещения КАК УсловиеПеремещения
		|ИЗ
		|	Документ.ВСД.УсловияПеремещенияПродукции КАК ВСДУсловияПеремещенияПродукции
		|ГДЕ
		|	ВСДУсловияПеремещенияПродукции.Ссылка = &ВСД";
	
	Запрос.УстановитьПараметр("ВСД", Объект.ВСД);
	
	Объект.УсловияПеремещенияПродукции.Загрузить(Запрос.Выполнить().Выгрузить());
	
	Объект.СписокФизическихУпаковок_Возврат.Загрузить(Объект.ВСД.СписокФизическихУпаковок.Выгрузить());
	
	Элементы.ГиперссылкаПерейтиУпаковкиЗаписейСкладскогоЖурналаВозврат.Заголовок = ОбщегоНазначенияУВСКлиентСервер.СформироватьПредставлениеСпискаУпаковок(Объект,, "СписокФизическихУпаковок_Возврат");
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанныеПоВСД(Команда)
	
	ЗаполнитьДокументПоВСД();
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область ОбработчикиСобытийТабличныхЧастей

&НаКлиенте
Процедура ТаблицаМаршрутСледованияПередУдалением(Элемент, Отказ)
	
	ТекущиеДанные = Элементы.ТаблицаМаршрутСледования.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.ОсуществляетсяПерегрузка И ТипЗнч(ТекущиеДанные.ИнформацияОСледующемТранспорте) = Тип("СправочникСсылка.ТипыТранспортныхСредств") Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокСвязанныхДокументов_ВозвратПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Объект.СписокСвязанныхДокументов_Возврат.Количество() >= 5 Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
								НСтр("ru = 'Можно указать не более 5 связанных документов'"),
								Объект,
								"СписокСвязанныхДокументов_Возврат",
								,
								Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УсловияПеремещенияПродукцииПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура УсловияПеремещенияПродукцииПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ПриИзмененииРеквизитов

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОрганизацияПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	ДокументСсылка = Объект.Ссылка;
	
	Для Каждого Реквизит Из ДокументСсылка.Метаданные().Реквизиты Цикл
		
		Если Реквизит.Имя = "Организация" Или Реквизит.Имя = "УполномоченноеГашение" Тогда
			Продолжить;
		КонецЕсли;
		
		Объект[Реквизит.Имя] = Неопределено;
		
	КонецЦикла;
	
	Для Каждого ТабличнаяЧасть Из ДокументСсылка.Метаданные().ТабличныеЧасти Цикл 
		
		Объект[ТабличнаяЧасть.Имя].Очистить();
		
	КонецЦикла;
	
	Если Объект.УполномоченноеГашение Тогда
		
		Объект.КонтрагентОтправитель = ОбщегоНазначенияУВССервер.КонтрагентПоОрганизации(Объект.Организация);
		
	Иначе
		
		Объект.КонтрагентПолучатель  = ОбщегоНазначенияУВССервер.КонтрагентПоОрганизации(Объект.Организация);
		
	КонецЕсли;
	
	ИнтеграцияВетисAPIСервер.УстановитьОформлениеЭлементовФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ВСДПриИзменении(Элемент)
	
	ЗаполнитьДокументПоВСД();
	ОбщегоНазначенияУВСКлиент.УстановитьВидимостьДанныхПоТипуПеревозки(ЭтотОбъект);
	ОбщегоНазначенияУВСКлиентСервер.УстановитьСвойстваЭлементовФормыДанныхТТН(ЭтотОбъект);
	ЭтаФорма.ОбновитьОтображениеДанных();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДокументПоВСД()
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.ЗаполнитьДокументПоВСД(Объект.ВСД);
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	
	ИнтеграцияВетисAPIСервер.УстановитьОформлениеЭлементовФормы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВСДНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Организация", Объект.Организация);
	ПараметрыОтбора.Вставить("НеуказаноТС", Ложь);
	
	Если Объект.УполномоченноеГашение Тогда
		
		ПараметрыОтбора.Вставить("ВидВСД", ПредопределенноеЗначение("Перечисление.ВидыВСД.Исходящий"));
		ПараметрыОтбора.Вставить("КонтрагентПолучатель", ИнтеграцияВетисAPIВызовСервера.КонтрагентыУполномоченногоГашения(Объект.Организация));
		
	Иначе
		
		СписокВидовВСД = Новый СписокЗначений;
		СписокВидовВСД.Добавить(ПредопределенноеЗначение("Перечисление.ВидыВСД.Входящий"));
		СписокВидовВСД.Добавить(ПредопределенноеЗначение("Перечисление.ВидыВСД.НаПеремещение"));
		
		ПараметрыОтбора.Вставить("ВидВСД", СписокВидовВСД);
		
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", ПараметрыОтбора);
	
	ОткрытьФорму("Документ.ВСД.ФормаВыбора", ПараметрыФормы, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ТипТТНПриИзменении(Элемент)
	
	ОбщегоНазначенияУВСКлиентСервер.УстановитьСвойстваЭлементовФормыДанныхТТН(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура НомерТТНПриИзменении(Элемент)
	
	ОбщегоНазначенияУВСКлиентСервер.УстановитьСвойстваЭлементовФормыДанныхТТН(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаТТНПриИзменении(Элемент)
	
	ОбщегоНазначенияУВСКлиентСервер.УстановитьСвойстваЭлементовФормыДанныхТТН(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ГиперссылкаПерейтиУпаковкиЗаписейСкладскогоЖурналаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОбщегоНазначенияУВСКлиент.ПродукцияУпаковкиВыбор(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПерейтиУпаковкиЗаписейСкладскогоЖурналаВозвратОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОбщегоНазначенияУВСКлиент.ПродукцияУпаковкиВыбор(ЭтотОбъект,,, "СписокФизическихУпаковок_Возврат");
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеДатыВыработкиНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ИнтеграцияВетисAPIКлиент.ОткрытьФормуЗаданияДат(ЭтотОбъект, Объект, Элемент, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеСрокаГодностиНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ИнтеграцияВетисAPIКлиент.ОткрытьФормуЗаданияДат(ЭтотОбъект, Объект, Элемент, Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьЗаголовокПоТипуПриходнойОперации()
	
	Если Объект.УполномоченноеГашение Тогда
		АвтоЗаголовок = Ложь;
		Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
			Шаблон = НСтр("ru='%1 %2 от %3'");
		Иначе
			Шаблон = НСтр("ru='%1 (создание)'");
		КонецЕсли;
		ЗаголовокТекстом = НСтр("ru = 'Уполномоченное гашение'");
		Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Шаблон, ЗаголовокТекстом, Объект.Номер, Объект.Дата);
	Иначе
		АвтоЗаголовок = Истина;
		Заголовок = "";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти