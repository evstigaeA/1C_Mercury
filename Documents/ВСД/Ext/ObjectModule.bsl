#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	//Отказ = Истина;
	Если ОбменДанными.Загрузка = Истина Тогда
		Возврат
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка = Истина Тогда
		Возврат
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	GUID_Меркурий = Неопределено;
	ТипДокумента  = Справочники.ТипыДокументов.БумажныйДокумент;
	ВидВСД        = Перечисления.ВидыВСД.Входящий;
	
	Если ОбъектКопирования.ТипВСД = Справочники.ТипыВСД.ПроизводственныйВСД Тогда
		ВызватьИсключение НСтр("ru = 'ВСД должен быть транспортным!'");
	КонецЕсли;
	
	ЕстьПравоОбслуживания = ИнтеграцияВетисAPIСервер.ПроверитьОграниченияПользователя(Организация, ПредприятиеПолучатель);
	
	Если НЕ ЕстьПравоОбслуживания Тогда
		Предприятие = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если Не ДополнительныеСвойства.Свойство("ПроведениеДоступно") Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	//
	//Если ТипДокумента = Справочники.ТипыДокументов.ЭлектронныйДокумент Тогда
	//	Префикс = "ЭД-";
	//Иначе
	//	Префикс = "БД-";
	//КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ИсключаемыеРеквизиты = Новый Массив;
	
	Если ТипДокумента = Справочники.ТипыДокументов.БумажныйДокумент Тогда
		ПроверяемыеРеквизиты.Добавить("ВыдавшийВСД");
		ПроверяемыеРеквизиты.Добавить("НомерВСД");
	КонецЕсли;
	
	Если ПредприятиеОтправитель = ПредприятиеПолучатель Тогда
		ИсключаемыеРеквизиты.Добавить("Транспорт");
		ИсключаемыеРеквизиты.Добавить("СпособХраненияПриПеревозке");
	Иначе
		Если ЗначениеЗаполнено(ТипТТН) Тогда
			ПроверяемыеРеквизиты.Добавить("НомерТТН");
			ПроверяемыеРеквизиты.Добавить("ДатаТТН");
		КонецЕсли;
		Если ЗначениеЗаполнено(НомерТТН) Или ЗначениеЗаполнено(ДатаТТН) Тогда
			ПроверяемыеРеквизиты.Добавить("ТипТТН");
		КонецЕсли;
	КонецЕсли;
	
	//ПроверяемыеРеквизиты.Добавить("КонтрагентОтправитель");
	//ПроверяемыеРеквизиты.Добавить("КонтрагентПолучатель");
	//ПроверяемыеРеквизиты.Добавить("ПредприятиеОтправитель");
	//ПроверяемыеРеквизиты.Добавить("ПредприятиеПолучатель");

		
	Если ИнтеграцияВетисAPIВызовСервера.ПродукцияПринадлежитТипуЖивыхЖивотных(Продукция) Тогда
		
		ИсключаемыеРеквизиты.Добавить("ПроводиласьВетсанэкспертиза");
		
		Если ПериодНахожденияЖивотныхНаТерриторииТС = Справочники.ПериодыНахожденияЖивотныхНаТерритории.НаходилисьНаТерриторииТСУказаннойКоличествоМесяцев Тогда
			ПроверяемыеРеквизиты.Добавить("КоличествоМесяцевНахожденияЖивотныхНаТерриторииТС");
		КонецЕсли;
		
	Иначе
		
		ИсключаемыеРеквизиты.Добавить("ПериодНахожденияЖивотныхНаТерриторииТС");
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВСДПроизводителиПродукции.НомерСтроки КАК НомерСтроки,
		|	ВСДПроизводителиПродукции.Производитель КАК Производитель,
		|	ВЫБОР
		|		КОГДА ВСДПроизводителиПродукции.Производитель ССЫЛКА Справочник.Предприятия
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ОшибкаТипаПредприятия
		|ИЗ
		|	Документ.ВСД.ПроизводителиПродукции КАК ВСДПроизводителиПродукции
		|ГДЕ
		|	ВСДПроизводителиПродукции.Ссылка = &Ссылка
		|	И (ВСДПроизводителиПродукции.Производитель.СтранаРегистрации <> &СтранаПроисхождения
		|			ИЛИ НЕ ВСДПроизводителиПродукции.Производитель ССЫЛКА Справочник.Предприятия)";
	
	Запрос.УстановитьПараметр("Ссылка"             , Ссылка);
	Запрос.УстановитьПараметр("СтранаПроисхождения", СтранаПроисхождения);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ПроизводителиПродукции", Выборка.НомерСтроки, "Производитель");
		
		Если Выборка.ОшибкаТипаПредприятия Тогда
			
			ШаблонСообщения = НСтр("ru='В строке %1 списка ""Производители продукции"" указан производитель ""%2"", который выбран не из справочника ""Предприятия"".'");
			
			ТекстСообщения = СтрШаблон(
				ШаблонСообщения,
				Выборка.НомерСтроки,
				Выборка.Производитель);
				
		Иначе
			
			ШаблонСообщения = НСтр("ru='В строке %1 списка ""Производители продукции"" указан производитель ""%2"", который не зарегистрирован на территории страны происхождения ""%3"".'");
			
			ТекстСообщения = СтрШаблон(
				ШаблонСообщения,
				Выборка.НомерСтроки,
				Выборка.Производитель,
				СтранаПроисхождения);
				
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле,, Отказ);
		
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ПродукцияПроизводителя) Тогда
		
		Если СтранаПроисхождения = Справочники.СтраныМира.Россия Тогда
			//Продукция должна быть зарегистрирована
			Если Не ЗначениеЗаполнено(ПродукцияПроизводителя.GUID_Меркурий) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					НСтр("ru = 'Продукция, произведённая в РФ, должна быть зарегистрирована или не задана вообще.'"),
					ЭтотОбъект,
					"ПродукцияПроизводителя",
					,
					Отказ);
			КонецЕсли;
		КонецЕсли;
		
		Если ПродукцияПроизводителя.Владелец.Владелец <> ВидПродукции Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					НСтр("ru = 'Продукция производителя должна быть того же вида, что и продукция в ВСД.'"),
					ЭтотОбъект,
					"ПродукцияПроизводителя",
					,
					Отказ);
		КонецЕсли;
		
		Если ИнтеграцияВетисAPIСервер.ЭтоЗарегистрированнаяПродукция(ПродукцияПроизводителя) Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	ПродукцияПроизводителиПродукции.Предприятие КАК Предприятие
				|ПОМЕСТИТЬ ВТ_ПроизводителиПродукции
				|ИЗ
				|	Справочник.Продукция.ПроизводителиПродукции КАК ПродукцияПроизводителиПродукции
				|ГДЕ
				|	ПродукцияПроизводителиПродукции.Ссылка = &Продукция
				|
				|СГРУППИРОВАТЬ ПО
				|	ПродукцияПроизводителиПродукции.Предприятие
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВСДПроизводителиПродукции.НомерСтроки КАК НомерСтроки,
				|	ВСДПроизводителиПродукции.Производитель КАК Производитель
				|ИЗ
				|	Документ.ВСД.ПроизводителиПродукции КАК ВСДПроизводителиПродукции
				|ГДЕ
				|	НЕ ВСДПроизводителиПродукции.Производитель В
				|				(ВЫБРАТЬ
				|					ВТ_ПроизводителиПродукции.Предприятие КАК Предприятие
				|				ИЗ
				|					ВТ_ПроизводителиПродукции КАК ВТ_ПроизводителиПродукции)
				|	И ВСДПроизводителиПродукции.Ссылка = &Ссылка";
			
			Запрос.УстановитьПараметр("Ссылка"   , Ссылка);
			Запрос.УстановитьПараметр("Продукция", ПродукцияПроизводителя);
		
			РезультатЗапроса = Запрос.Выполнить();
			
			ШаблонСообщения = НСтр("ru='В строке %1 списка ""Производители продукции"" указан производитель ""%2"", которго нет в списке предприятий, на которых выпускается продукция производителя ""%3"".'");
			
			Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
				
				Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ПроизводителиПродукции", Выборка.НомерСтроки, "Производитель");
				
				ТекстСообщения = СтрШаблон(
					ШаблонСообщения,
					Выборка.НомерСтроки,
					Выборка.Производитель,
					ПродукцияПроизводителя);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле,, Отказ);
			
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ШаблонСообщения = НСтр("ru='В строке %1 списка ""Маршрут следования"" не указано транспортное средство в точке перегрузки.'");
	
	Для Каждого ТекТочка Из ТаблицаМаршрутСледования Цикл
		Если ТекТочка.ОсуществляетсяПерегрузка И Не ЗначениеЗаполнено(ТекТочка.ИнформацияОСледующемТранспорте) 
			ИЛИ ТипЗнч(ТекТочка.ИнформацияОСледующемТранспорте) = Тип("СправочникСсылка.ТипыТранспортныхСредств") Тогда
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ТаблицаМаршрутСледования", ТекТочка.НомерСтроки, "ИнформацияОСледующемТранспорте");
			
			ТекстСообщения = СтрШаблон(ШаблонСообщения, ТекТочка.НомерСтроки);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле,, Отказ);
			
		КонецЕсли;
	КонецЦикла;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, ИсключаемыеРеквизиты);
	
	ИнтеграцияВетисAPIСервер.ПроверитьКорректностьЗаполненияДат(ЭтотОбъект, ЭтотОбъект,,, Отказ);
	
	ПроверитьДублиПроизводителей(Отказ)
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьДублиПроизводителей(Отказ)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВСДПроизводителиПродукции.Ссылка,
		|	ВСДПроизводителиПродукции.НомерСтроки,
		|	ВСДПроизводителиПродукции.Производитель
		|ПОМЕСТИТЬ ТаблицаПроизводителей
		|ИЗ
		|	Документ.ВСД.ПроизводителиПродукции КАК ВСДПроизводителиПродукции
		|ГДЕ
		|	ВСДПроизводителиПродукции.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаПроизводителей.Ссылка,
		|	МИНИМУМ(ТаблицаПроизводителей.НомерСтроки) КАК МинимальныйНомерСтроки,
		|	ТаблицаПроизводителей.Производитель
		|ПОМЕСТИТЬ МинимальныеСтроки
		|ИЗ
		|	ТаблицаПроизводителей КАК ТаблицаПроизводителей
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаПроизводителей.Ссылка,
		|	ТаблицаПроизводителей.Производитель
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МинимальныеСтроки.МинимальныйНомерСтроки,
		|	МинимальныеСтроки.Производитель,
		|	ТаблицаПроизводителей.НомерСтроки КАК НомерСтрокиДубля
		|ИЗ
		|	МинимальныеСтроки КАК МинимальныеСтроки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаПроизводителей КАК ТаблицаПроизводителей
		|		ПО МинимальныеСтроки.Ссылка = ТаблицаПроизводителей.Ссылка
		|			И МинимальныеСтроки.Производитель = ТаблицаПроизводителей.Производитель
		|			И МинимальныеСтроки.МинимальныйНомерСтроки <> ТаблицаПроизводителей.НомерСтроки";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='В строке %1 и строке %2 обнаружено дублирование производителя %3'"),
			Выборка.МинимальныйНомерСтроки, Выборка.НомерСтрокиДубля, Выборка.Производитель);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст, Ссылка,,"Объект.ПроизводителиПродукции", Отказ);
	КонецЦикла;
	
КонецПроцедуры;

#КонецОбласти

#КонецЕсли