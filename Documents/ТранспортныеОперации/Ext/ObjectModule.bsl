#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка = Истина Тогда
		Возврат
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("Ответственный") Тогда 
		ДополнительныеСвойства.Свойство("Ответственный", Ответственный);
	Иначе	
		Ответственный = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ТаблицаВСД.Очистить();
	
	ЕстьПравоОбслуживания = ИнтеграцияВетисAPIСервер.ПроверитьОграниченияПользователя(Организация, ПредприятиеОтправитель);
	
	Если НЕ ЕстьПравоОбслуживания Тогда
		ПредприятиеОтправитель = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ИнтеграцияВетисAPIСервер.УстановитьСтатусПодготовлен(Ссылка);
	
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТранспортныеОперацииТаблицаПродукция.Ссылка.Дата КАК Период,
		|	МИНИМУМ(ТранспортныеОперацииТаблицаПродукция.НомерСтроки) КАК НомерСтроки,
		|	ТранспортныеОперацииТаблицаПродукция.Ссылка.Организация КАК Организация,
		|	ТранспортныеОперацииТаблицаПродукция.Ссылка.ПредприятиеОтправитель КАК Предприятие,
		|	ТранспортныеОперацииТаблицаПродукция.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
		|	СУММА(ТранспортныеОперацииТаблицаПродукция.Количество) КАК Количество
		|ПОМЕСТИТЬ ДокТЧ
		|ИЗ
		|	Документ.ТранспортныеОперации.ТаблицаПродукция КАК ТранспортныеОперацииТаблицаПродукция
		|ГДЕ
		|	ТранспортныеОперацииТаблицаПродукция.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ТранспортныеОперацииТаблицаПродукция.ЗаписьСкладскогоЖурнала,
		|	ТранспортныеОперацииТаблицаПродукция.Ссылка.ПредприятиеОтправитель,
		|	ТранспортныеОперацииТаблицаПродукция.Ссылка.Организация,
		|	ТранспортныеОперацииТаблицаПродукция.Ссылка.Дата
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ЗаписьСкладскогоЖурнала,
		|	Предприятие
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|	ВЫБРАТЬ
		|	ДокТЧ.Период КАК Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДокТЧ.Организация КАК Организация,
		|	ДокТЧ.Предприятие КАК Предприятие,
		|	ДокТЧ.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
		|	ДокТЧ.Количество КАК Количество
		|ИЗ
		|	ДокТЧ КАК ДокТЧ";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Движения.ДвижениеПродукции.Записывать = Истина;
	Движения.ДвижениеПродукции.БлокироватьДляИзменения = Истина;
	Движения.ДвижениеПродукции.Очистить();
	Движения.ДвижениеПродукции.Загрузить(Запрос.Выполнить().Выгрузить());
	Движения.Записать();
	
	// проверяем остатки
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДокТЧ.НомерСтроки КАК НомерСтроки,
		|	ДокТЧ.Организация КАК Организация,
		|	ДокТЧ.Предприятие.Представление КАК Предприятие,
		|	ДокТЧ.ЗаписьСкладскогоЖурнала.Представление КАК ЗаписьСкладскогоЖурналаПредставление,
		|	ЕСТЬNULL(ДокТЧ.ЗаписьСкладскогоЖурнала.ЕдиницаИзмерения.Представление, """") КАК ЕдиницаИзмерения,
		|	-ЕСТЬNULL(ДвижениеПродукцииОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток
		|ИЗ
		|	ДокТЧ КАК ДокТЧ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДвижениеПродукции.Остатки(
		|				&ТочкаИтогов,
		|				(Организация, Предприятие, ЗаписьСкладскогоЖурнала) В
		|					(ВЫБРАТЬ
		|						ДокТЧ.Организация,
		|						ДокТЧ.Предприятие,
		|						ДокТЧ.ЗаписьСкладскогоЖурнала
		|					ИЗ
		|						ДокТЧ КАК ДокТЧ)) КАК ДвижениеПродукцииОстатки
		|		ПО ДокТЧ.ЗаписьСкладскогоЖурнала = ДвижениеПродукцииОстатки.ЗаписьСкладскогоЖурнала
		|			И ДокТЧ.Предприятие = ДвижениеПродукцииОстатки.Предприятие
		|			И ДокТЧ.Организация = ДвижениеПродукцииОстатки.Организация
		|ГДЕ
		|	ДвижениеПродукцииОстатки.КоличествоОстаток < 0";
	
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ТочкаИтогов", Новый Граница(МоментВремени(), ВидГраницы.Включая));
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ШаблонСообщения = НСтр("ru = 'В строке № %1 не достаточно продукции ""%2"".
					|По организации ""%3"" и предприятию ""%4"" не хватает %5 ""%6""'");
		
		ПолеКоличество = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ТаблицаПродукция", Выборка.НомерСтроки, "Количество");
		
			ШаблонСообщения = СтрШаблон(
								ШаблонСообщения,
								Выборка.НомерСтроки,
								Выборка.ЗаписьСкладскогоЖурналаПредставление,
								Выборка.Организация,
								Выборка.Предприятие,
								Выборка.КоличествоОстаток,
								Выборка.ЕдиницаИзмерения);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
								ШаблонСообщения,
								ЭтотОбъект,
								ПолеКоличество,
								,
								Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ИнтеграцияВетисAPIСервер.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ);
	
	ИсключаемыеРеквизиты = Новый Массив;
	Если ПредприятиеОтправитель = ПредприятиеПолучатель Тогда
		ИсключаемыеРеквизиты.Добавить("Транспорт");
		ИсключаемыеРеквизиты.Добавить("СпособХраненияПриПеревозке");
	Иначе
		Если ЗначениеЗаполнено(ТипТТН) Тогда
			ПроверяемыеРеквизиты.Добавить("НомерТТН");
			ПроверяемыеРеквизиты.Добавить("ДатаТТН");
		КонецЕсли;
		Если ЗначениеЗаполнено(НомерТТН) Или ЗначениеЗаполнено(ДатаТТН) Тогда
			ПроверяемыеРеквизиты.Добавить("ТипТТН");
		КонецЕсли;
	КонецЕсли;

	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, ИсключаемыеРеквизиты);
	
	Для ТекИндекс = 0 По ТаблицаМаршрутСледования.Количество()-1 Цикл
		Если ТаблицаМаршрутСледования[ТекИндекс].ОсуществляетсяПерегрузка И НЕ ЗначениеЗаполнено(ТаблицаМаршрутСледования[ТекИндекс].ИнформацияОСледующемТранспорте) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
								НСтр("ru = 'Необходимо указать данные о транспорте в пункте перегрузки'"),
								ЭтотОбъект,
								ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ТаблицаМаршрутСледования", ТаблицаМаршрутСледования[ТекИндекс].НомерСтроки, "ИнформацияОСледующемТранспорте"),
								,
								Отказ);
		КонецЕсли;
	КонецЦикла;
	
	Если КонтрагентОтправитель = КонтрагентПолучатель И ПредприятиеОтправитель = ПредприятиеПолучатель Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					НСтр("ru='""Хоз. субъект отправитель"" и ""Хоз. субъект получатель"", а так же ""Предприятие отправитель"" и ""Предприятие получатель"" совпадают. Данная операция не разрешена.'"),
					Ссылка,
					,
					,
					Отказ);
	КонецЕсли;
	
	ПроверитьКорректностьЗаполненияТабличнойЧасти(Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьКорректностьЗаполненияТабличнойЧасти(Отказ)
	
	МассивИдентификаторов                     = ИнтеграцияВетисAPIСлужебныйПовтИсп.ПродукцияИсключениеИзТипаЖивыеЖивотные();
	ТипыПродукцииСДоступнымВидомПроисхождения = ИнтеграцияВетисAPIСлужебныйПовтИсп.ТипыПродукцииСДоступнымВидомПроисхождения();
	ИспользоватьОбменЧерезУниверсальныйФормат = ПолучитьФункциональнуюОпцию("ИспользоватьОбменЧерезУниверсальныйФормат");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВидыПродукции.Ссылка КАК ВидПродукции
		|ПОМЕСТИТЬ ВТ_ИсключенияИзЖивыхЖивотных
		|ИЗ
		|	Справочник.ВидыПродукции КАК ВидыПродукции
		|ГДЕ
		|	ВидыПродукции.GUID_Меркурий В(&МассивИдентификаторов)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВидПродукции
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаПродукция.НомерСтроки КАК НомерСтроки,
		|	ТаблицаПродукция.НоменклатураУчетнойСистемы КАК НоменклатураУчетнойСистемы,
		|	ВЫРАЗИТЬ(ТаблицаПродукция.ЗаписьСкладскогоЖурнала КАК Справочник.СвойстваЗаписейСкладскогоЖурнала) КАК ЗаписьСкладскогоЖурнала,
		|	ТаблицаПродукция.ПериодНахожденияЖивотныхНаТерриторииТС КАК ПериодНахожденияЖивотныхНаТерриторииТС,
		|	ТаблицаПродукция.КоличествоМесяцевНахожденияЖивотныхНаТерриторииТС КАК КоличествоМесяцевНахожденияЖивотныхНаТерриторииТС,
		|	ТаблицаПродукция.ВидПроисхожденияПродукции КАК ВидПроисхожденияПродукции,
		|	ТаблицаПродукция.ПроводиласьВетсанэкспертиза КАК ПроводиласьВетсанэкспертиза
		|ПОМЕСТИТЬ ВТ_ТаблицаПродукция
		|ИЗ
		|	&ТаблицаПродукция КАК ТаблицаПродукция
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТранспортныеОперацииТаблицаПродукция.НомерСтроки КАК НомерСтроки,
		|	ТранспортныеОперацииТаблицаПродукция.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
		|	ТранспортныеОперацииТаблицаПродукция.ЗаписьСкладскогоЖурнала.НеИспользуется КАК ЗаписьСкладскогоЖурналаНеИспользуется,
		|	ТранспортныеОперацииТаблицаПродукция.ЗаписьСкладскогоЖурнала.ТипПродукции КАК ТипПродукции,
		|	ТранспортныеОперацииТаблицаПродукция.ЗаписьСкладскогоЖурнала.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ТранспортныеОперацииТаблицаПродукция.ПериодНахожденияЖивотныхНаТерриторииТС КАК ПериодНахожденияЖивотныхНаТерриторииТС,
		|	ТранспортныеОперацииТаблицаПродукция.КоличествоМесяцевНахожденияЖивотныхНаТерриторииТС КАК КоличествоМесяцевНахожденияЖивотныхНаТерриторииТС,
		|	ТранспортныеОперацииТаблицаПродукция.ВидПроисхожденияПродукции КАК ВидПроисхожденияПродукции,
		|	ТранспортныеОперацииТаблицаПродукция.ПроводиласьВетсанэкспертиза КАК ПроводиласьВетсанэкспертиза,
		|	ВЫБОР
		|		КОГДА ТранспортныеОперацииТаблицаПродукция.ЗаписьСкладскогоЖурнала.ТипПродукции = ЗНАЧЕНИЕ(Справочник.ТипыПродукции.ЖивыеЖивотные)
		|				И НЕ ТранспортныеОперацииТаблицаПродукция.ЗаписьСкладскогоЖурнала.ВидПродукции В
		|						(ВЫБРАТЬ
		|							ВТ_ИсключенияИзЖивыхЖивотных.ВидПродукции КАК ВидПродукции
		|						ИЗ
		|							ВТ_ИсключенияИзЖивыхЖивотных КАК ВТ_ИсключенияИзЖивыхЖивотных)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоЖивоеЖивотное,
		|	ТранспортныеОперацииТаблицаПродукция.НоменклатураУчетнойСистемы КАК НоменклатураУчетнойСистемы,
		|	ВерсииЗаписейСкладскогоЖурнала.СтатусВерсииЗаписиСкладскогоЖурнала КАК СтатусВерсииЗаписиСкладскогоЖурнала
		|ИЗ
		|	ВТ_ТаблицаПродукция КАК ТранспортныеОперацииТаблицаПродукция
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВерсииЗаписейСкладскогоЖурнала КАК ВерсииЗаписейСкладскогоЖурнала
		|		ПО ТранспортныеОперацииТаблицаПродукция.ЗаписьСкладскогоЖурнала = ВерсииЗаписейСкладскогоЖурнала.ЗаписьСкладскогоЖурнала
		|			И ТранспортныеОперацииТаблицаПродукция.ЗаписьСкладскогоЖурнала.GUID_Меркурий = ВерсииЗаписейСкладскогоЖурнала.GUID_Меркурий
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	
	Запрос.УстановитьПараметр("МассивИдентификаторов", МассивИдентификаторов);
	СписокКолонок = "НомерСтроки,
					|НоменклатураУчетнойСистемы,
					|ЗаписьСкладскогоЖурнала,
					|ПериодНахожденияЖивотныхНаТерриторииТС,
					|КоличествоМесяцевНахожденияЖивотныхНаТерриторииТС,
					|ВидПроисхожденияПродукции,
					|ПроводиласьВетсанэкспертиза";
	
	Запрос.УстановитьПараметр("ТаблицаПродукция", ТаблицаПродукция.Выгрузить(,СписокКолонок));
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	ШаблонСообщения = НСтр("ru='Не заполнена колонка ""%1"" в строке %2 списка ""Продукция"".'");
	ШаблонСообщенияДанные = НСтр("ru='В строке %1 списка ""Продукция"" ошибка в данных: ""%2"".'");
	
	Пока Выборка.Следующий() Цикл
		
		Если Не ЗначениеЗаполнено(Выборка.ЕдиницаИзмерения) Тогда
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ТаблицаПродукция", Выборка.НомерСтроки, "ЗаписьСкладскогоЖурнала");
			
			ТекстСообщения = СтрШаблон(
				ШаблонСообщения,
				"Единица измерения",
				Выборка.НомерСтроки);
				
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле,, Отказ);
			
		КонецЕсли;
		
		Если Выборка.ЭтоЖивоеЖивотное Тогда
			
			Если Не ЗначениеЗаполнено(Выборка.ПериодНахожденияЖивотныхНаТерриторииТС) Тогда
				
				Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ТаблицаПродукция", Выборка.НомерСтроки, "ПериодНахожденияЖивотныхНаТерриторииТС");
				
				ТекстСообщения = СтрШаблон(
					ШаблонСообщения,
					"Период нахождения животных на территории ТС",
					Выборка.НомерСтроки);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле,, Отказ);
				
			КонецЕсли;
			
			Если Выборка.ПериодНахожденияЖивотныхНаТерриторииТС = Справочники.ПериодыНахожденияЖивотныхНаТерритории.НаходилисьНаТерриторииТСУказаннойКоличествоМесяцев 
				И Не ЗначениеЗаполнено(Выборка.КоличествоМесяцевНахожденияЖивотныхНаТерриторииТС) Тогда
				
				Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ТаблицаПродукция", Выборка.НомерСтроки, "КоличествоМесяцевНахожденияЖивотныхНаТерриторииТС");
				
				ТекстСообщения = СтрШаблон(
					ШаблонСообщения,
					"Количество месяцев нахождения животных на территории ТС",
					Выборка.НомерСтроки);
					
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле,, Отказ);
				
			КонецЕсли;
		
		ИначеЕсли НЕ ЗначениеЗаполнено(Выборка.ПроводиласьВетсанэкспертиза) Тогда
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ТаблицаПродукция", Выборка.НомерСтроки, "ПроводиласьВетсанэкспертиза");
			
			ТекстСообщения = СтрШаблон(
					ШаблонСообщения,
					"Проводилась ветсанэкспертиза",
					Выборка.НомерСтроки);
					
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле,, Отказ);
		
		КонецЕсли;
		
		Если ИспользоватьОбменЧерезУниверсальныйФормат Тогда
			Если Не ЗначениеЗаполнено(Выборка.НоменклатураУчетнойСистемы) Тогда
				
				Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ТаблицаПродукция", Выборка.НомерСтроки, "НоменклатураУчетнойСистемы");
				
				ТекстСообщения = СтрШаблон(
					ШаблонСообщения,
					"Номенклатура учетной системы",
					Выборка.НомерСтроки);
					
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле,, Отказ);
				
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.ВидПроисхожденияПродукции) И ТипыПродукцииСДоступнымВидомПроисхождения.НайтиПоЗначению(Выборка.ТипПродукции) = Неопределено Тогда
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ТаблицаПродукция", Выборка.НомерСтроки, "ВидПроисхожденияПродукции");
			
			ТекстСообщения = СтрШаблон(
				ШаблонСообщенияДанные,
				Выборка.НомерСтроки,
				"Сведение о происхождении продукции может быть указано только для кормов и кормовых добавок, лекарственных средств и непищевой продукции");
				
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле,, Отказ);
			
		КонецЕсли;
		
		ИнтеграцияВетисAPIСервер.ПроверитьКорректностьСвойствЗаписиСкладскогоЖурнала(ЭтотОбъект, Выборка, "ТаблицаПродукция", "Продукция", Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
