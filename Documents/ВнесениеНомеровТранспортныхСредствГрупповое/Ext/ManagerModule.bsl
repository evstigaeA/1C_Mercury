
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Возвращает описание блокируемых реквизитов.
//
// Возвращаемое значение:
//  Массив - содержит строки в формате ИмяРеквизита[;ИмяЭлементаФормы,...]
//           где ИмяРеквизита - имя реквизита объекта, ИмяЭлементаФормы - имя элемента формы,
//           связанного с реквизитом.
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	Результат = Новый Массив;
	
	Возврат Результат;
	
КонецФункции

// Добавляет команду создания документа "Групповое внесение номеров транспортных средств".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.ВнесениеНомеровТранспортныхСредствГрупповое) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.ВнесениеНомеровТранспортныхСредствГрупповое.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ИнтеграцияВетисAPIСервер.ПредставлениеОбъекта(Метаданные.Документы.ВнесениеНомеровТранспортныхСредствГрупповое);
		
		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// СтандартныеПодсистемы.Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.ВСД";
	КомандаПечати.Идентификатор = "ПолнаяИнформация";
	КомандаПечати.Представление = НСтр("ru = 'Ветеринарная справка (формат pdf)'");
	КомандаПечати.Картинка = БиблиотекаКартинок.ФорматPDF;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Обработчик = "УправлениеПечатьюУВСКлиент.СформироватьПечатнуюФормуВетеринарнойСправки";
	КомандаПечати.Порядок = 1;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "";
	КомандаПечати.Идентификатор = "НастройкаПечатиДокументов";
	КомандаПечати.Представление = НСтр("ru = 'Настройка печати документов'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Обработчик = "УправлениеПечатьюУВСКлиент.НастройкаПечатиДокументов";
	КомандаПечати.Порядок = 2;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.ВнесениеНомеровТранспортныхСредствГрупповое";
	КомандаПечати.Идентификатор = "СжатоеСИнформацией";
	КомандаПечати.Представление = НСтр("ru = 'Штрих-коды ВСД с дополнительной информацией'");
	КомандаПечати.Картинка = БиблиотекаКартинок.ФорматMXL;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 3;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.ВнесениеНомеровТранспортныхСредствГрупповое";
	КомандаПечати.Идентификатор = "Сжатое";
	КомандаПечати.Представление = НСтр("ru = 'Штрих-коды ВСД'");
	КомандаПечати.Картинка = БиблиотекаКартинок.ФорматMXL;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 4;
	
КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр).
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной
//                                                            параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной
//                                            параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СжатоеСИнформацией") Тогда
	    // Формируем табличный документ и добавляем его в коллекцию печатных форм.
	    УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
	        "СжатоеСИнформацией", "Штрих-коды ВСД с дополнительной информацией", Документы.ВСД.СформироватьПечатнуюФормуСжатогоВСДСИнформацией(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Сжатое") Тогда
	    // Формируем табличный документ и добавляем его в коллекцию печатных форм.
	    УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
	        "Сжатое", "Штрих-коды ВСД", Документы.ВСД.СформироватьПечатнуюФормуСжатогоВСД(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать

#КонецОбласти

#Область Печать

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьТЧПоДаннымВСД(МассивВСД, ТочкиПерегрузки) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВСДТаблицаМаршрутСледования.Ссылка КАК ВСД,
		|	ВСДТаблицаМаршрутСледования.ИдентификаторТочкиМаршрута КАК ИдентификаторТочкиМаршрута,
		|	ВСДТаблицаМаршрутСледования.ИнформацияОСледующемТранспорте КАК ТипТранспорта,
		|	ВСДТаблицаМаршрутСледования.НазваниеПункта КАК НазваниеПункта
		|ИЗ
		|	Документ.ВСД.ТаблицаМаршрутСледования КАК ВСДТаблицаМаршрутСледования
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыВСД.СрезПоследних КАК СтатусыВСДСрезПоследних
		|		ПО ВСДТаблицаМаршрутСледования.Ссылка = СтатусыВСДСрезПоследних.ВСД
		|ГДЕ
		|	ВСДТаблицаМаршрутСледования.Ссылка В(&МассивВСД)
		|	И ВСДТаблицаМаршрутСледования.Ссылка.ТипВСД <> ЗНАЧЕНИЕ(Справочник.ТипыВСД.ПроизводственныйВСД)
		|	И СтатусыВСДСрезПоследних.СтатусВСД = ЗНАЧЕНИЕ(Справочник.СтатусыВСД.Оформлен)
		|	И ВСДТаблицаМаршрутСледования.ОсуществляетсяПерегрузка
		|	И ВСДТаблицаМаршрутСледования.ИнформацияОСледующемТранспорте ССЫЛКА Справочник.ТипыТранспортныхСредств";
	
	Запрос.УстановитьПараметр("МассивВСД", МассивВСД);
	
	ТочкиПерегрузки.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

Функция СоздатьДокументВнесения(Организация, Контрагент, Предприятие, ВСД, МассивСтрок) Экспорт
	
	СтруктураОтвета = Новый Структура("ДокументВнесения, СтатусЗаявки");
	
	ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВнесениеНомеровТранспортныхСредств.Ссылка КАК ДокументВнесения,
		|	ЖурналРегистрацииСостоянийЗаявокНаОформлениеОперацийСрезПоследних.Статус КАК СтатусЗаявки
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВнесениеНомеровТранспортныхСредств.Ссылка КАК Ссылка,
		|		ВнесениеНомеровТранспортныхСредств.Дата КАК Дата
		|	ИЗ
		|		Документ.ВнесениеНомеровТранспортныхСредств КАК ВнесениеНомеровТранспортныхСредств
		|	ГДЕ
		|		НЕ ВнесениеНомеровТранспортныхСредств.ПометкаУдаления
		|		И ВнесениеНомеровТранспортныхСредств.ВСД = &ВСД) КАК ВнесениеНомеровТранспортныхСредств
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЖурналРегистрацииСостоянийЗаявокНаОформлениеОпераций.СрезПоследних КАК ЖурналРегистрацииСостоянийЗаявокНаОформлениеОперацийСрезПоследних
		|		ПО ЖурналРегистрацииСостоянийЗаявокНаОформлениеОперацийСрезПоследних.ДокументСсылка = ВнесениеНомеровТранспортныхСредств.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВнесениеНомеровТранспортныхСредств.Дата УБЫВ";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("ВСД", ВСД);
	ВыборкаРезультата = Запрос.Выполнить().Выбрать();
	
		СписокСостоянийДляИзменения = Новый СписокЗначений();
		СписокСостоянийДляИзменения.Добавить(Неопределено);
		СписокСостоянийДляИзменения.Добавить(Справочники.СтатусыЗаявок.Черновик);
		СписокСостоянийДляИзменения.Добавить(Справочники.СтатусыЗаявок.Подготовлен);
		СписокСостоянийДляИзменения.Добавить(Справочники.СтатусыЗаявок.ЗаявкаОтмененаАдминистратором);
		СписокСостоянийДляИзменения.Добавить(Справочники.СтатусыЗаявок.Отклонена);
		СписокСостоянийДляИзменения.Добавить(Справочники.СтатусыЗаявок.ОшибкаОтправкиЗапроса);
	
	Если ВыборкаРезультата.Следующий() Тогда
		
		Если СписокСостоянийДляИзменения.НайтиПоЗначению(ВыборкаРезультата.СтатусЗаявки) = Неопределено Тогда
			ЗаполнитьЗначенияСвойств(СтруктураОтвета, ВыборкаРезультата);
			Возврат СтруктураОтвета;
		КонецЕсли;
		
		ДокументВнесенияНомеровТС = ВыборкаРезультата.ДокументВнесения.ПолучитьОбъект();
	Иначе
		ДокументВнесенияНомеровТС = Документы.ВнесениеНомеровТранспортныхСредств.СоздатьДокумент();
	КонецЕсли;
	
	ДокументВнесенияНомеровТС.Дата          = ТекущаяДата();
	ДокументВнесенияНомеровТС.Организация   = Организация;
	ДокументВнесенияНомеровТС.ВСД           = ВСД;
	ДокументВнесенияНомеровТС.Контрагент    = Контрагент;
	ДокументВнесенияНомеровТС.Предприятие   = Предприятие;
	ДокументВнесенияНомеровТС.Ответственный = Пользователи.ТекущийПользователь();
	
	ДокументВнесенияНомеровТС.ТочкиПерегрузки.Очистить();
	
	Для Каждого ТекПункт Из МассивСтрок Цикл
		
		НоваяСтрока = ДокументВнесенияНомеровТС.ТочкиПерегрузки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекПункт);
		
	КонецЦикла;
	
	Попытка
		ДокументВнесенияНомеровТС.Записать();
		СтруктураОтвета.ДокументВнесения = ДокументВнесенияНомеровТС.Ссылка;
		Возврат СтруктураОтвета;
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		СтруктураОтвета.ДокументВнесения = Документы.ВнесениеНомеровТранспортныхСредств.ПустаяСсылка();
		Возврат СтруктураОтвета;
	КонецПопытки;
	
КонецФункции

#КонецОбласти

#КонецЕсли