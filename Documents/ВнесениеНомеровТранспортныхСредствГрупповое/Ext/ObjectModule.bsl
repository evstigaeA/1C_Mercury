#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка = Истина Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("Ответственный") Тогда
		ДополнительныеСвойства.Свойство("Ответственный", Ответственный);
	Иначе
		Ответственный = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		// Проверяем сколько документов из "ТочкиПерегрузки" успешно обработано и ставим статус группового документа
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ТаблицаТочкиПерегрузки.ДокументВнесения КАК ДокументВнесения
			|ПОМЕСТИТЬ ВТ_ТочкиПерегрузки
			|ИЗ
			|	&ТЧ_ТочкиПерегрузки КАК ТаблицаТочкиПерегрузки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВнесениеНомеровТочкиПерегрузки.ДокументВнесения КАК ДокументВнесения
			|ИЗ
			|	ВТ_ТочкиПерегрузки КАК ВнесениеНомеровТочкиПерегрузки
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			ЖурналРегистрацииСостоянийЗаявокНаОформлениеОперацийСрезПоследних.ДокументСсылка КАК ДокументСсылка,
			|			ЖурналРегистрацииСостоянийЗаявокНаОформлениеОперацийСрезПоследних.Статус КАК Статус
			|		ИЗ
			|			РегистрСведений.ЖурналРегистрацииСостоянийЗаявокНаОформлениеОпераций.СрезПоследних КАК ЖурналРегистрацииСостоянийЗаявокНаОформлениеОперацийСрезПоследних
			|		ГДЕ
			|			ЖурналРегистрацииСостоянийЗаявокНаОформлениеОперацийСрезПоследних.Статус = &Статус) КАК ЖурналРегистрацииСостоянийЗаявокНаОформлениеОперацийСрезПоследних
			|		ПО ВнесениеНомеровТочкиПерегрузки.ДокументВнесения = ЖурналРегистрацииСостоянийЗаявокНаОформлениеОперацийСрезПоследних.ДокументСсылка";
		
		Запрос.УстановитьПараметр("ТЧ_ТочкиПерегрузки", ТочкиПерегрузки);
		Запрос.УстановитьПараметр("Статус", Справочники.СтатусыЗаявок.УспешноОбработана);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если Не РезультатЗапроса.Пустой() Тогда
			Если РезультатЗапроса.Выгрузить().Количество() >= ТочкиПерегрузки.Количество() Тогда
				Статус = Перечисления.СтатусыСводныхДокументов.УспешноПогашено;
			Иначе
				Статус = Перечисления.СтатусыСводныхДокументов.ЧастичноПогашено;
			КонецЕсли;
		КонецЕсли;
		
		мТочкиПерегрузки = ТочкиПерегрузки.Выгрузить();
		мТочкиПерегрузки.Свернуть("ВСД, ДокументВнесения");
	
		Для Каждого ТекСтрока Из мТочкиПерегрузки Цикл
			
			Если Не ЗначениеЗаполнено(ТекСтрока.ДокументВнесения) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						СтрЗаменить(НСтр("ru = 'В строке с ВСД %1 не указан документ внесения номеров ТС!'"), "%1", ТекСтрока.ВСД),
						,
						,
						,
						Отказ);
						
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ТочкиПерегрузки.Очистить();
	ДокументОснование = Неопределено;
	
	ЕстьПравоОбслуживания = ИнтеграцияВетисAPIСервер.ПроверитьОграниченияПользователя(Организация, Предприятие);
	
	Если НЕ ЕстьПравоОбслуживания Тогда
		Предприятие = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	МассивДокументов = Новый Массив;
	Для Каждого ТекСтрока Из ТочкиПерегрузки Цикл
		Если МассивДокументов.Найти(ТекСтрока.ДокументВнесения) = Неопределено Тогда
			Если ЗначениеЗаполнено(ТекСтрока.ДокументВнесения) Тогда
				МассивДокументов.Добавить(ТекСтрока.ДокументВнесения);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Попытка
		ИнтеграцияВетисAPIОтправкаЗаявокНаОформление.СформироватьЗаявки(МассивДокументов, Отказ);
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки(), Ссылка,,,Отказ);
	КонецПопытки;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	Если Статус = Перечисления.СтатусыСводныхДокументов.УспешноПогашено ИЛИ Статус = Перечисления.СтатусыСводныхДокументов.ЧастичноПогашено Тогда
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПриходныеОперацииСводно") Тогда
		
		ДокументОснование = ДанныеЗаполнения;
		Организация            = ДанныеЗаполнения.Организация;
		Если ДанныеЗаполнения.УполномоченноеГашение Тогда
			
			Контрагент    = ДанныеЗаполнения.КонтрагентОтправитель;
			Предприятие   = ДанныеЗаполнения.ПредприятиеОтправитель;
			
		Иначе
			
			Контрагент    = ДанныеЗаполнения.КонтрагентПолучатель;
			Предприятие   = ДанныеЗаполнения.ПредприятиеПолучатель;
			
		КонецЕсли;
		Статус            = Перечисления.СтатусыСводныхДокументов.Новая;
		
		МассивВСД = ДанныеЗаполнения.ТаблицаДанных.ВыгрузитьКолонку("ВСД");
		Документы.ВнесениеНомеровТранспортныхСредствГрупповое.ЗаполнитьТЧПоДаннымВСД(МассивВСД, ТочкиПерегрузки);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ТранспортныеОперации") Тогда
		
		СтатусДокумента = РегистрыСведений.ЖурналРегистрацииСостоянийЗаявокНаОформлениеОпераций.ТекущийСтатусДокумента(ДанныеЗаполнения);
		
		Если СтатусДокумента <> Справочники.СтатусыЗаявок.УспешноОбработана Тогда
			
			ТекстОшибки = НСтр("ru='Документ %Документ% находится в статусе ""%Статус%"". Ввод на основании разрешен только в статусе ""Заявка успешно обработана"".'");
			
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Статус%"  , СтатусДокумента);
			
			ВызватьИсключение ТекстОшибки;
			
		КонецЕсли;
		
		ДокументОснование      = ДанныеЗаполнения;
		Организация            = ДанныеЗаполнения.Организация;
		Контрагент             = ДанныеЗаполнения.КонтрагентОтправитель;
		Предприятие            = ДанныеЗаполнения.ПредприятиеОтправитель;
		Статус                 = Перечисления.СтатусыСводныхДокументов.Новая;
		
		МассивВСД = ДанныеЗаполнения.ТаблицаВСД.ВыгрузитьКолонку("ВСД");
		Документы.ВнесениеНомеровТранспортныхСредствГрупповое.ЗаполнитьТЧПоДаннымВСД(МассивВСД, ТочкиПерегрузки);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ИнтеграцияВетисAPIСервер.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли