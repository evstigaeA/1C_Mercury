#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка = Истина Тогда
		Возврат
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("Ответственный") Тогда
		ДополнительныеСвойства.Свойство("Ответственный", Ответственный);
	Иначе
		Ответственный = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		// Проверяем сколько документов из "СписокАннулируемыхВСД" успешно обработано и ставим статус группового документа
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ТЧ_СписокАннулируемыхВСД.ДокументАннулированиеВСД КАК ДокументАннулированиеВСД
			|ПОМЕСТИТЬ ВТ_СписокАннулируемыхВСД
			|ИЗ
			|	&ТЧ_СписокАннулируемыхВСД КАК ТЧ_СписокАннулируемыхВСД
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	АннулированиеВСДГрупповоеСписокАннулируемыхВСД.ДокументАннулированиеВСД КАК ДокументАннулированиеВСД
			|ИЗ
			|	ВТ_СписокАннулируемыхВСД КАК АннулированиеВСДГрупповоеСписокАннулируемыхВСД
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			ЖурналРегистрацииСостоянийЗаявокНаОформлениеОперацийСрезПоследних.ДокументСсылка КАК ДокументСсылка,
			|			ЖурналРегистрацииСостоянийЗаявокНаОформлениеОперацийСрезПоследних.Статус КАК Статус
			|		ИЗ
			|			РегистрСведений.ЖурналРегистрацииСостоянийЗаявокНаОформлениеОпераций.СрезПоследних КАК ЖурналРегистрацииСостоянийЗаявокНаОформлениеОперацийСрезПоследних
			|		ГДЕ
			|			ЖурналРегистрацииСостоянийЗаявокНаОформлениеОперацийСрезПоследних.Статус = &Статус) КАК ЖурналРегистрацииСостоянийЗаявокНаОформлениеОперацийСрезПоследних
			|		ПО АннулированиеВСДГрупповоеСписокАннулируемыхВСД.ДокументАннулированиеВСД = ЖурналРегистрацииСостоянийЗаявокНаОформлениеОперацийСрезПоследних.ДокументСсылка";
		
		Запрос.УстановитьПараметр("ТЧ_СписокАннулируемыхВСД", СписокАннулируемыхВСД);
		Запрос.УстановитьПараметр("Статус", Справочники.СтатусыЗаявок.УспешноОбработана);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если Не РезультатЗапроса.Пустой() Тогда
			Если РезультатЗапроса.Выгрузить().Количество() >= СписокАннулируемыхВСД.Количество() Тогда
				Статус = Перечисления.СтатусыСводныхДокументов.УспешноПогашено;
			Иначе
				Статус = Перечисления.СтатусыСводныхДокументов.ЧастичноПогашено;
			КонецЕсли;
		КонецЕсли;
		
		Для Каждого ТекСтрока Из СписокАннулируемыхВСД Цикл
			
			Если Не ЗначениеЗаполнено(ТекСтрока.ДокументАннулированиеВСД) Тогда
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
							СтрЗаменить(НСтр("ru = 'Не заполнена колонка ""Документ аннулирование ВСД"" в строке %1'"), "%1", ТекСтрока.НомерСтроки),
							ЭтотОбъект,
							ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("СписокАннулируемыхВСД", ТекСтрока.НомерСтроки, "ДокументАннулированиеВСД"),
							,
							Отказ);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	СписокАннулируемыхВСД.Очистить();
	
	ЕстьПравоОбслуживания = ИнтеграцияВетисAPIСервер.ПроверитьОграниченияПользователя(Организация, Предприятие);
	
	Если НЕ ЕстьПравоОбслуживания Тогда
		Предприятие = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Попытка
		ИнтеграцияВетисAPIОтправкаЗаявокНаОформление.СформироватьЗаявки(СписокАннулируемыхВСД.ВыгрузитьКолонку("ДокументАннулированиеВСД"), Отказ);
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки(), Ссылка,,,Отказ);
	КонецПопытки;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ТранспортныеОперации") Тогда
		
		СтатусДокумента = РегистрыСведений.ЖурналРегистрацииСостоянийЗаявокНаОформлениеОпераций.ТекущийСтатусДокумента(ДанныеЗаполнения);
		
		Если СтатусДокумента <> Справочники.СтатусыЗаявок.УспешноОбработана Тогда
			
			ТекстОшибки = НСтр("ru='Документ %Документ% находится в статусе ""%Статус%"". Ввод на основании разрешен только в статусе ""Заявка успешно обработана"".'");
			
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Статус%"  , СтатусДокумента);
			
			ВызватьИсключение ТекстОшибки;
			
		КонецЕсли;
		
		Организация = ДанныеЗаполнения.Организация;
		Контрагент  = ДанныеЗаполнения.КонтрагентОтправитель;
		Предприятие = ДанныеЗаполнения.ПредприятиеОтправитель;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ТранспортныеОперацииТаблицаВСД.Ссылка КАК ТранспортнаяОперация,
			|	ТранспортныеОперацииТаблицаВСД.ВСД КАК ВСД,
			|	АннулированиеВСД.Ссылка КАК ДокументАннулированиеВСД,
			|	СвязиМеждуЗаписямиСкладскогоЖурналаИВСД.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала
			|ИЗ
			|	Документ.ТранспортныеОперации.ТаблицаВСД КАК ТранспортныеОперацииТаблицаВСД
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыВСД.СрезПоследних КАК СтатусыВСДСрезПоследних
			|		ПО ТранспортныеОперацииТаблицаВСД.ВСД = СтатусыВСДСрезПоследних.ВСД
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвязиМеждуЗаписямиСкладскогоЖурналаИВСД КАК СвязиМеждуЗаписямиСкладскогоЖурналаИВСД
			|		ПО ТранспортныеОперацииТаблицаВСД.ВСД = СвязиМеждуЗаписямиСкладскогоЖурналаИВСД.ВСД
			|			И ТранспортныеОперацииТаблицаВСД.Ссылка.Организация = СвязиМеждуЗаписямиСкладскогоЖурналаИВСД.Организация
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.АннулированиеВСД КАК АннулированиеВСД
			|		ПО ТранспортныеОперацииТаблицаВСД.ВСД = АннулированиеВСД.ВСД
			|			И ТранспортныеОперацииТаблицаВСД.Ссылка.Организация = АннулированиеВСД.Организация
			|ГДЕ
			|	ТранспортныеОперацииТаблицаВСД.Ссылка = &Ссылка
			|	И СтатусыВСДСрезПоследних.СтатусВСД = ЗНАЧЕНИЕ(Справочник.СтатусыВСД.Оформлен)
			|	И ТранспортныеОперацииТаблицаВСД.ВСД.ТипВСД <> ЗНАЧЕНИЕ(Справочник.ТипыВСД.ПроизводственныйВСД)";
		
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
		
		СписокАннулируемыхВСД.Загрузить(Запрос.Выполнить().Выгрузить());
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	Если Статус = Перечисления.СтатусыСводныхДокументов.УспешноПогашено ИЛИ Статус = Перечисления.СтатусыСводныхДокументов.ЧастичноПогашено Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ИнтеграцияВетисAPIСервер.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли