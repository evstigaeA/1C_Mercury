#Область ОписаниеПеременных

// СтандартныеПодсистемы.ОценкаПроизводительности
&НаКлиенте
Перем ИдентификаторЗамераПроведение, ИдентификаторЗамераПроведениеНеНужнаРегистрацияОшибки;
// Конец СтандартныеПодсистемы.ОценкаПроизводительности

#КонецОбласти

#Область ОбработчикиСобытийФорм

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	ОбщегоНазначенияУВСКлиентСервер.ДополнительныеДействияСФормой(ЭтаФорма);
	
	СтруктураИсторииРеквизитов = Новый Структура;
	СтруктураИсторииРеквизитов.Вставить("Продукция", Объект.Продукция);
	СтруктураИсторииРеквизитов.Вставить("СтранаПроисхождения", Объект.СтранаПроисхождения);
	СтруктураИсторииРеквизитов.Вставить("ЗаписьСкладскогоЖурнала", Объект.ЗаписьСкладскогоЖурнала);
	СтруктураИсторииРеквизитов.Вставить("Предприятие", Объект.Предприятие);
	СтруктураИсторииРеквизитов.Вставить("СкоропортящаясяПродукция", Объект.СкоропортящаясяПродукция);
	СтруктураИсторииРеквизитов.Вставить("НекачественныйГруз", Объект.НекачественныйГруз);
	СтруктураИсторииРеквизитов.Вставить("Организация", Объект.Организация);
	ПриЧтенииСозданииНаСервере();
	
	УстановитьСвойстваЭлементовФормы();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ПриЧтенииСозданииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	ЗаполнитьВспомогательныеРеквизиты();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ОценкаПроизводительности
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ИдентификаторЗамераПроведение = ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, "ПроведениеДокументаОшибка");
		ОценкаПроизводительностиКлиент.УстановитьПризнакОшибкиЗамера(ИдентификаторЗамераПроведение, Истина);
				
		ИдентификаторЗамераПроведениеНеНужнаРегистрацияОшибки = ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ОценкаПроизводительности
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ОценкаПроизводительности
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ОценкаПроизводительностиКлиент.УстановитьКлючевуюОперациюЗамера(ИдентификаторЗамераПроведение, "ПроведениеДокумента");
		ОценкаПроизводительностиКлиент.УстановитьПризнакОшибкиЗамера(ИдентификаторЗамераПроведение, Ложь);
		
		ОценкаПроизводительностиКлиент.УстановитьКлючевуюОперациюЗамера(ИдентификаторЗамераПроведениеНеНужнаРегистрацияОшибки, "ПроведениеДокументаНеНужнаРегистрацияОшибки");
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ОценкаПроизводительности
	
	ОбщегоНазначенияУВСКлиентСервер.ДополнительныеДействияСФормой(ЭтаФорма);
	Оповестить("ИзменениеСтатусаЗаявкиНаОформлениеОперации");
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ЗаполнитьВспомогательныеРеквизиты();
	
	// Обработчик подсистемы запрета редактирования реквизитов объектов.
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов") Тогда
		МодульЗапретРедактированияРеквизитовОбъектов = ОбщегоНазначения.ОбщийМодуль("ЗапретРедактированияРеквизитовОбъектов");
		МодульЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	ОбщегоНазначенияУВСКлиент.ОповеститьДокументы(ИмяСобытия, Параметр, Источник, ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура СтатусНажатие(Элемент, СтандартнаяОбработка)
	
	ОбщегоНазначенияУВСКлиент.ОткрытьФормуЖурналаСостоянияЗаявок(ЭтотОбъект, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийШапкиДокумента

#Область ОбработчикиСобытий_Органиазация

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Объект.Контрагент = ОбщегоНазначенияУВСВызовСервера.КонтрагентПоОрганизации(Объект.Организация);
	ИзменениеРеквизитов(Элемент.Имя);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий_Предприятие

&НаКлиенте
Процедура ПредприятиеПриИзменении(Элемент)
	
	ОбщегоНазначенияУВСКлиент.ПредприятиеПриИзменении(Объект.Контрагент, Объект.Предприятие);
	ИзменениеРеквизитов(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредприятиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияУВСКлиент.ПредприятиеНачалоВыбора(Элемент, СтандартнаяОбработка, Объект.Организация);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредприятиеАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ОбщегоНазначенияУВСКлиент.ПредприятиеАвтоПодбор(Текст, ДанныеВыбора, СтандартнаяОбработка, Объект.Организация);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредприятиеОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ОбщегоНазначенияУВСКлиент.ПредприятиеОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка, Объект.Организация);
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ТипОперацииПриИзменении(Элемент)
	
	Если Объект.ТаблицаПродукция.Количество() > 0 Тогда
		
		Оповещение = Новый ОписаниеОповещения("ПослеОтветаНаВопросТипОперацииПриИзменении", ЭтотОбъект);
		
		ТекстВопроса = НСтр("ru = 'Табличная часть будет очищена. Продолжить?'");
		
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	Иначе
		
		УстановитьСвойстваЭлементовФормы();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВырабатываемаяПродукцияПриИзменении(Элемент)
	
	Если Объект.ТаблицаПродукция.Количество() > 0 Тогда
		
		Оповещение = Новый ОписаниеОповещения("ПослеОтветаНаВопросВырабатываемаяПродукцияПриИзменении", ЭтотОбъект);
		
		ТекстВопроса = НСтр("ru = 'Табличная часть будет очищена. Продолжить?'");
		
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеОтветаНаВопросВырабатываемаяПродукцияПриИзменении(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Объект.ТипОперации = Не Объект.ТипОперации;
		Возврат;
	КонецЕсли;

	Объект.ЗаписьСкладскогоЖурнала = Неопределено;
	Объект.ТаблицаПродукция.Очистить();
	Объект.СписокФизическихУпаковок.Очистить();
		
КонецПроцедуры

&НаКлиенте
Процедура ПослеОтветаНаВопросТипОперацииПриИзменении(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Объект.ТипОперации = Не Объект.ТипОперации;
        Возврат;
    КонецЕсли;

	Объект.ТаблицаПродукция.Очистить();
	Объект.СписокФизическихУпаковок.Очистить();
	УстановитьСвойстваЭлементовФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменениеРеквизитов(ИмяРеквизита = "")
	
	Если ПустаяСтрока(ИмяРеквизита) Тогда
		Возврат;
	КонецЕсли;
	
	Если ИмяРеквизита <> "ЗаписьСкладскогоЖурнала" Тогда
		Объект.ЗаписьСкладскогоЖурнала = ПредопределенноеЗначение("Справочник.СвойстваЗаписейСкладскогоЖурнала.ПустаяСсылка");
	КонецЕсли;
	
	Если Объект.ТаблицаПродукция.Количество() > 0 Тогда
		
		ДопПараметры = Новый Структура;
		ДопПараметры.Вставить("ИмяРеквизита", ИмяРеквизита);
		
		Оповещение = Новый ОписаниеОповещения("ПослеОтветаНаВопрос", ЭтотОбъект, ДопПараметры);
		
		ТекстВопроса = "Табличная часть будет очищена. Продолжить?";
		
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеОтветаНаВопрос(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Объект[Параметры.ИмяРеквизита] = СтруктураИсторииРеквизитов[Параметры.ИмяРеквизита];
		Возврат;
	КонецЕсли;
	
	СтруктураИсторииРеквизитов[Параметры.ИмяРеквизита] = Объект[Параметры.ИмяРеквизита];
	Объект.ТаблицаПродукция.Очистить();
	Объект.СписокФизическихУпаковок.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПродукцияПриИзменении(Элемент)
	
	ИзменениеРеквизитов(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура СтранаПроисхожденияПриИзменении(Элемент)
	
	ИзменениеРеквизитов(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписьСкладскогоЖурналаПриИзменении(Элемент)
	
	ИзменениеРеквизитов(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписьСкладскогоЖурналаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрЗаголовок = НСтр("ru = 'Подбор продукции в %Документ%'");
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПараметрЗаголовок = СтрЗаменить(ПараметрЗаголовок, "%Документ%", Объект.Ссылка);
	Иначе
		ПараметрЗаголовок = СтрЗаменить(ПараметрЗаголовок, "%Документ%", НСтр("ru = 'объединение записей складского журнала'"));
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Организация"            , Объект.Организация);
	ПараметрыФормы.Вставить("Предприятие"            , Объект.Предприятие);
	ПараметрыФормы.Вставить("Документ"               , Объект.Ссылка);
	ПараметрыФормы.Вставить("МножественныйВыбор"     , Ложь);
	ПараметрыФормы.Вставить("ВырабатываемаяПродукция", Объект.ВырабатываемаяПродукция);
	ПараметрыФормы.Вставить("Заголовок"              , ПараметрЗаголовок);
	
	ОткрытьФорму("Справочник.СвойстваЗаписейСкладскогоЖурнала.Форма.ФормаВыбораСОстатками", ПараметрыФормы, Элемент,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписьСкладскогоЖурналаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Объект.ЗаписьСкладскогоЖурнала = ВыбранноеЗначение.ЗаписьСкладскогоЖурнала;
	
	ИзменениеРеквизитов(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура СкоропортящаясяПродукцияПриИзменении(Элемент)
	
	ИзменениеРеквизитов(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура НекачественныйГрузПриИзменении(Элемент)
	
	ИзменениеРеквизитов(Элемент.Имя);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФорм_ТаблицаПродукция

&НаКлиенте
Процедура ТаблицаПродукцииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ТаблицаПродукция.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Поле.Имя = "ТаблицаПродукцияУпаковки" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Если Не ЭтаФорма.ТолькоПросмотр Тогда
			Если ПустаяСтрока(ТекущиеДанные.GUIDСтроки) Тогда
				ТекущиеДанные.GUIDСтроки = Строка(Новый УникальныйИдентификатор());
			КонецЕсли;
		КонецЕсли;
		GUIDСтроки = ТекущиеДанные.GUIDСтроки;
		
		ОбщегоНазначенияУВСКлиент.ПродукцияУпаковкиВыбор(ЭтотОбъект, ТекущиеДанные, GUIDСтроки);
		
	ИначеЕсли Поле.Имя = "ТаблицаПродукцияЗаписьСкладскогоЖурнала" Тогда
		
		ПоказатьЗначение(, ТекущиеДанные.ЗаписьСкладскогоЖурнала);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПродукцииПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПродукцияПередУдалением(Элемент, Отказ)
	
	МассивСвязанныхТЧ = Новый Массив;
	МассивСвязанныхТЧ.Добавить("СписокФизическихУпаковок");
	
	ОбработкаТабличнойЧастиКлиент.ПередУдалениемСтрокиТабличнойЧасти(ЭтаФорма, "ТаблицаПродукция", МассивСвязанныхТЧ);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура Подбор_ТаблицаПродукция(Команда)
	
	АдресХраненияДанных   = ОбщегоНазначенияУВСВызовСервера.ПоместитьТаблицуФормыВоВременноеХранилище(Объект.ТаблицаПродукция, Новый УникальныйИдентификатор);
	АдресХраненияУпаковок = ОбщегоНазначенияУВСВызовСервера.ПоместитьТаблицуФормыВоВременноеХранилище(Объект.СписокФизическихУпаковок, Новый УникальныйИдентификатор);
	
	ПараметрЗаголовок = НСтр("ru = 'Подбор продукции в %Документ%'");
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПараметрЗаголовок = СтрЗаменить(ПараметрЗаголовок, "%Документ%", Объект.Ссылка);
	Иначе
		ПараметрЗаголовок = СтрЗаменить(ПараметрЗаголовок, "%Документ%", НСтр("ru = 'объединение записей складского журнала'"));
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("АдресХраненияДанных"    , АдресХраненияДанных);
	ПараметрыФормы.Вставить("АдресХраненияУпаковок"  , АдресХраненияУпаковок);
	ПараметрыФормы.Вставить("Дата"                   , Объект.Дата);
	ПараметрыФормы.Вставить("Документ"               , Объект.Ссылка);
	ПараметрыФормы.Вставить("Организация"            , Объект.Организация);
	ПараметрыФормы.Вставить("Предприятие"            , Объект.Предприятие);
	ПараметрыФормы.Вставить("ТолькоПросмотр"         , Истина);
	ПараметрыФормы.Вставить("ВырабатываемаяПродукция", Объект.ВырабатываемаяПродукция);
	ПараметрыФормы.Вставить("Заголовок"              , ПараметрЗаголовок);
	
	Если Объект.ТипОперации Тогда //объединение
		СвойстваПродукции = ПолучитьСвойстваПродукции(Объект.Продукция);
		ПараметрыФормы.Вставить("ТипПродукции"            , СвойстваПродукции.ТипПродукции);
		ПараметрыФормы.Вставить("ВидПродукции"            , СвойстваПродукции.ВидПродукции);
		ПараметрыФормы.Вставить("СтранаПроисхождения"     , Объект.СтранаПроисхождения);
		ПараметрыФормы.Вставить("СкоропортящаясяПродукция", Объект.СкоропортящаясяПродукция);
		ПараметрыФормы.Вставить("НекачественныйГруз"      , Объект.НекачественныйГруз);
	Иначе 
		//присоединение
		СвойстваЗаписи = ПолучитьСвойстваЗаписиСкладскогоЖурнала(Объект.ЗаписьСкладскогоЖурнала);
		ПараметрыФормы.Вставить("ТипПродукции"            , СвойстваЗаписи.ТипПродукции);
		ПараметрыФормы.Вставить("ВидПродукции"            , СвойстваЗаписи.ВидПродукции);
		ПараметрыФормы.Вставить("СтранаПроисхождения"     , СвойстваЗаписи.СтранаПроисхождения);
		ПараметрыФормы.Вставить("СкоропортящаясяПродукция", СвойстваЗаписи.СкоропортящаясяПродукция);
		ПараметрыФормы.Вставить("НекачественныйГруз"      , СвойстваЗаписи.НекачественныйГруз);
		ПараметрыФормы.Вставить("ЗаписьСкладскогоЖурнала" , Объект.ЗаписьСкладскогоЖурнала);
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("Подбор_ТаблицаПродукцияЗавершение", ЭтотОбъект);
	
	ОткрытьФорму("Обработка.ПодборЗаписейСкладскогоЖурнала.Форма.ФормаПодбора", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор,,, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура Подбор_ТаблицаПродукцияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	ОбработатьРезультатПодбора(Результат);

КонецПроцедуры

&НаСервере
Процедура ОбработатьРезультатПодбора(АдресХранения)

	СтруктураДанных = ПолучитьИзВременногоХранилища(АдресХранения);
	Объект.СписокФизическихУпаковок.Загрузить(СтруктураДанных.СписокФизическихУпаковок);
	
	ТаблицаДанных = СтруктураДанных.Продукция;
	Для Каждого ТекДанные Из ТаблицаДанных Цикл
		
		СтруктураПоиска = Новый Структура("GUIDСтроки", ТекДанные.GUIDСтроки);
		НайденныеСтроки = Объект.ТаблицаПродукция.НайтиСтроки(СтруктураПоиска);
		
		Если НайденныеСтроки.Количество() > 0 Тогда
			НайденныеСтроки[0].Количество = ТекДанные.Количество;
		Иначе
			НоваяСтрока = Объект.ТаблицаПродукция.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекДанные);
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьСвойстваЗаписиСкладскогоЖурнала(ЗаписьСкладскогоЖурнала)
	
	СвойстваЗаписи = Новый Структура("ТипПродукции, ВидПродукции, ПодвидПродукции, Продукция, СтранаПроисхождения, СкоропортящаясяПродукция, НекачественныйГруз");
	ЗаполнитьЗначенияСвойств(СвойстваЗаписи, ЗаписьСкладскогоЖурнала);
	
	Возврат СвойстваЗаписи;
КонецФункции

&НаСервере
Функция ПолучитьСвойстваПродукции(Продукция)
		
	СвойстваПродукции = Новый Структура;
	СвойстваПродукции.Вставить("ТипПродукции", Продукция.Владелец.Владелец.Владелец);
	СвойстваПродукции.Вставить("ВидПродукции", Продукция.Владелец.Владелец);
	
	Возврат СвойстваПродукции;
КонецФункции

&НаСервере
Процедура ЗаполнитьВспомогательныеРеквизиты()
	
	Для Каждого ТекСтрока Из Объект.ТаблицаПродукция Цикл
		
		ТекСтрока.Упаковки = ОбщегоНазначенияУВСКлиентСервер.СформироватьПредставлениеСпискаУпаковок(Объект, ТекСтрока.GUIDСтроки);
			
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСвойстваЭлементовФормы()
	
	Элементы.ГруппаОбъединение.Видимость   = Объект.ТипОперации = Истина;
	Элементы.ГруппаПрисоединение.Видимость = Объект.ТипОперации = Ложь;
	
КонецПроцедуры

#КонецОбласти