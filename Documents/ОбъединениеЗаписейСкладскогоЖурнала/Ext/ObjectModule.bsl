#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка = Истина Тогда
		Возврат
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("Ответственный") Тогда 
		ДополнительныеСвойства.Свойство("Ответственный", Ответственный);
	Иначе	
		Ответственный = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ИнтеграцияВетисAPIСервер.УстановитьСтатусПодготовлен(Ссылка);
	СформироватьДвижения();
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ТаблицаПродукция.Очистить();
	СписокФизическихУпаковок.Очистить();
	ЗаписьСкладскогоЖурнала = Справочники.СвойстваЗаписейСкладскогоЖурнала.ПустаяСсылка();
	РезультирующаяЗаписьСкладскогоЖурнала = Справочники.СвойстваЗаписейСкладскогоЖурнала.ПустаяСсылка();
	Количество = 0;
	
	ЕстьПравоОбслуживания = ИнтеграцияВетисAPIСервер.ПроверитьОграниченияПользователя(Организация, Предприятие);
	
	Если НЕ ЕстьПравоОбслуживания Тогда
		Предприятие = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ИнтеграцияВетисAPIСервер.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ);
	
	ИсключаемыеРеквизиты = Новый Массив;
	Если ТипОперации Тогда
		
		ИсключаемыеРеквизиты.Добавить("ЗаписьСкладскогоЖурнала");
		
		Если ТаблицаПродукция.Количество() < 2 Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
								НСтр("ru = 'Для типа операции объединение должно быть указано как минимум 2 записи складского журнала.'"),
								ЭтотОбъект,
								"ТаблицаПродукция",
								,
								Отказ);
		КонецЕсли;
							
	Иначе
		
		ИсключаемыеРеквизиты.Добавить("Продукция");
		ИсключаемыеРеквизиты.Добавить("СтранаПроисхождения");

		Если ТаблицаПродукция.Количество() = 0 Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
								НСтр("ru = 'Не введено ни одной строки в список ""Продукция"".'"),
								ЭтотОбъект,
								"ТаблицаПродукция",
								,
								Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, ИсключаемыеРеквизиты);
	
	ПроверитьКорректностьЗаполненияТабличнойЧасти(Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьКорректностьЗаполненияТабличнойЧасти(Отказ)
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаПродукция.НомерСтроки КАК НомерСтроки,
		|	ВЫРАЗИТЬ(ТаблицаПродукция.ЗаписьСкладскогоЖурнала КАК Справочник.СвойстваЗаписейСкладскогоЖурнала) КАК ЗаписьСкладскогоЖурнала,
		|	&ТипОперации КАК ТипОперации
		|ПОМЕСТИТЬ ВТ_ТаблицаПродукция
		|ИЗ
		|	&ТаблицаПродукция КАК ТаблицаПродукция
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	&СтранаПроисхождения КАК СтранаПроисхождения,
		|	&СкоропортящаясяПродукция КАК СкоропортящаясяПродукция,
		|	&НекачественныйГруз КАК НекачественныйГруз,
		|	&ТипОперации КАК ТипОперации,
		|	ВЫРАЗИТЬ(&ЗаписьСкладскогоЖурнала КАК Справочник.СвойстваЗаписейСкладскогоЖурнала) КАК ЗаписьСкладскогоЖурнала,
		|	&Продукция КАК Продукция
		|ПОМЕСТИТЬ ВТ_ДокументОбъединения
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ОбъединениеЗаписейСкладскогоЖурнала.Продукция КАК Справочник.Продукция).Владелец.Владелец КАК ВидПродукции,
		|	ОбъединениеЗаписейСкладскогоЖурнала.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ОбъединениеЗаписейСкладскогоЖурнала.СкоропортящаясяПродукция КАК СкоропортящаясяПродукция,
		|	ОбъединениеЗаписейСкладскогоЖурнала.НекачественныйГруз КАК НекачественныйГруз,
		|	ЗНАЧЕНИЕ(Справочник.СвойстваЗаписейСкладскогоЖурнала.ПустаяСсылка) КАК ЗаписьСкладскогоЖурнала,
		|	ОбъединениеЗаписейСкладскогоЖурнала.ТипОперации КАК ТипОперации,
		|	ЗНАЧЕНИЕ(Перечисление.СпособыЗаданияДаты.ПустаяСсылка) КАК ФорматДатыВыработки,
		|	ЗНАЧЕНИЕ(Перечисление.СпособыЗаданияДаты.ПустаяСсылка) КАК ФорматСрокаГодности,
		|	ЛОЖЬ КАК ЗаписьСкладскогоЖурналаНеИспользуется,
		|	ЗНАЧЕНИЕ(Справочник.СтатусыВерсийЗаписейСкладскогоЖурнала.ПустаяСсылка) КАК СтатусВерсииЗаписиСкладскогоЖурнала
		|ИЗ
		|	ВТ_ДокументОбъединения КАК ОбъединениеЗаписейСкладскогоЖурнала
		|ГДЕ
		|	ОбъединениеЗаписейСкладскогоЖурнала.ТипОперации
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ОбъединениеЗаписейСкладскогоЖурнала.ЗаписьСкладскогоЖурнала КАК Справочник.СвойстваЗаписейСкладскогоЖурнала).ВидПродукции,
		|	ОбъединениеЗаписейСкладскогоЖурнала.ЗаписьСкладскогоЖурнала.СтранаПроисхождения,
		|	ОбъединениеЗаписейСкладскогоЖурнала.ЗаписьСкладскогоЖурнала.СкоропортящаясяПродукция,
		|	ОбъединениеЗаписейСкладскогоЖурнала.ЗаписьСкладскогоЖурнала.НекачественныйГруз,
		|	ОбъединениеЗаписейСкладскогоЖурнала.ЗаписьСкладскогоЖурнала,
		|	ОбъединениеЗаписейСкладскогоЖурнала.ТипОперации,
		|	ОбъединениеЗаписейСкладскогоЖурнала.ЗаписьСкладскогоЖурнала.ФорматДатыВыработки,
		|	ОбъединениеЗаписейСкладскогоЖурнала.ЗаписьСкладскогоЖурнала.ФорматСрокаГодности,
		|	ОбъединениеЗаписейСкладскогоЖурнала.ЗаписьСкладскогоЖурнала.НеИспользуется,
		|	ВерсииЗаписейСкладскогоЖурнала.СтатусВерсииЗаписиСкладскогоЖурнала
		|ИЗ
		|	ВТ_ДокументОбъединения КАК ОбъединениеЗаписейСкладскогоЖурнала
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВерсииЗаписейСкладскогоЖурнала КАК ВерсииЗаписейСкладскогоЖурнала
		|		ПО ОбъединениеЗаписейСкладскогоЖурнала.ЗаписьСкладскогоЖурнала = ВерсииЗаписейСкладскогоЖурнала.ЗаписьСкладскогоЖурнала
		|ГДЕ
		|	НЕ ОбъединениеЗаписейСкладскогоЖурнала.ТипОперации
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбъединениеЗаписейСкладскогоЖурналаТаблицаПродукция.НомерСтроки КАК НомерСтроки,
		|	ОбъединениеЗаписейСкладскогоЖурналаТаблицаПродукция.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
		|	ОбъединениеЗаписейСкладскогоЖурналаТаблицаПродукция.ЗаписьСкладскогоЖурнала.НеИспользуется КАК ЗаписьСкладскогоЖурналаНеИспользуется,
		|	ОбъединениеЗаписейСкладскогоЖурналаТаблицаПродукция.ЗаписьСкладскогоЖурнала.ВидПродукции КАК ВидПродукции,
		|	ОбъединениеЗаписейСкладскогоЖурналаТаблицаПродукция.ЗаписьСкладскогоЖурнала.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ОбъединениеЗаписейСкладскогоЖурналаТаблицаПродукция.ЗаписьСкладскогоЖурнала.СкоропортящаясяПродукция КАК СкоропортящаясяПродукция,
		|	ОбъединениеЗаписейСкладскогоЖурналаТаблицаПродукция.ЗаписьСкладскогоЖурнала.НекачественныйГруз КАК НекачественныйГруз,
		|	ОбъединениеЗаписейСкладскогоЖурналаТаблицаПродукция.ЗаписьСкладскогоЖурнала.ФорматДатыВыработки КАК ФорматДатыВыработки,
		|	ОбъединениеЗаписейСкладскогоЖурналаТаблицаПродукция.ЗаписьСкладскогоЖурнала.ФорматСрокаГодности КАК ФорматСрокаГодности,
		|	ВерсииЗаписейСкладскогоЖурнала.СтатусВерсииЗаписиСкладскогоЖурнала КАК СтатусВерсииЗаписиСкладскогоЖурнала
		|ИЗ
		|	ВТ_ТаблицаПродукция КАК ОбъединениеЗаписейСкладскогоЖурналаТаблицаПродукция
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВерсииЗаписейСкладскогоЖурнала КАК ВерсииЗаписейСкладскогоЖурнала
		|		ПО ОбъединениеЗаписейСкладскогоЖурналаТаблицаПродукция.ЗаписьСкладскогоЖурнала = ВерсииЗаписейСкладскогоЖурнала.ЗаписьСкладскогоЖурнала
		|ГДЕ
		|	НЕ ОбъединениеЗаписейСкладскогоЖурналаТаблицаПродукция.ТипОперации";
	
	Запрос.УстановитьПараметр("СтранаПроисхождения", СтранаПроисхождения);
	Запрос.УстановитьПараметр("СкоропортящаясяПродукция", СкоропортящаясяПродукция);
	Запрос.УстановитьПараметр("НекачественныйГруз", НекачественныйГруз);
	Запрос.УстановитьПараметр("ТипОперации", ТипОперации);
	Запрос.УстановитьПараметр("ЗаписьСкладскогоЖурнала", ЗаписьСкладскогоЖурнала);
	Запрос.УстановитьПараметр("Продукция", Продукция);
	Запрос.УстановитьПараметр("ТаблицаПродукция", ТаблицаПродукция.Выгрузить(,"НомерСтроки, ЗаписьСкладскогоЖурнала"));
	
	РезультатПакет = Запрос.ВыполнитьПакет();
	
	ВыборкаШапка = РезультатПакет[2].Выбрать();
	ВыборкаТЧ    = РезультатПакет[3].Выбрать();
	ВыборкаШапка.Следующий();
	Если Не ВыборкаШапка.ТипОперации Тогда
		Если ЗначениеЗаполнено(ВыборкаШапка.ЗаписьСкладскогоЖурнала) Тогда
			
			ИнтеграцияВетисAPIСервер.ПроверитьКорректностьСвойствЗаписиСкладскогоЖурнала(ЭтотОбъект, ВыборкаШапка,,, Отказ);
			
			Если ВыборкаШапка.ФорматДатыВыработки = Перечисления.СпособыЗаданияДаты.Строка
				ИЛИ ВыборкаШапка.ФорматСрокаГодности = Перечисления.СпособыЗаданияДаты.Строка Тогда
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						НСтр("ru = '""Дата выработки продукции""/""Срок годности продукции"" указаны в формате ""Строка"". Запрещено использовать формат даты ""Строка"".'"),
						Ссылка,
						"ЗаписьСкладскогоЖурнала"
						,
						,
						Отказ);
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	ТекстОшибки = НСтр("ru='В строке %1 табличной части Продукция не верно указана запись складского журнала. %2'"); 
	Пока ВыборкаТЧ.Следующий() Цикл
		
		ИнтеграцияВетисAPIСервер.ПроверитьКорректностьСвойствЗаписиСкладскогоЖурнала(ЭтотОбъект, ВыборкаТЧ, "ТаблицаПродукция", "Продукция", Отказ);
		
		Если ВыборкаТЧ.ВидПродукции <> ВыборкаШапка.ВидПродукции Тогда
			ТекстОписанияОшибки = "Вид продукции должен совпадать у объединяемых записей складского журнала.";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
								СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, ВыборкаТЧ.НомерСтроки, ТекстОписанияОшибки),
								Ссылка,
								ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ТаблицаПродукция", ВыборкаТЧ.НомерСтроки, "ЗаписьСкладскогоЖурнала")
								,
								,
								Отказ);
		КонецЕсли;
							
		Если ВыборкаТЧ.СтранаПроисхождения <> ВыборкаШапка.СтранаПроисхождения Тогда
			ТекстОписанияОшибки = "Страна происхождения продукции должна совпадать для объединяемых записей складского журнала.";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
								СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, ВыборкаТЧ.НомерСтроки, ТекстОписанияОшибки),
								Ссылка,
								ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ТаблицаПродукция", ВыборкаТЧ.НомерСтроки, "ЗаписьСкладскогоЖурнала")
								,
								,
								Отказ);
		КонецЕсли;
		
		Если ВыборкаТЧ.СкоропортящаясяПродукция <> ВыборкаШапка.СкоропортящаясяПродукция Тогда
			ТекстОписанияОшибки = "Пометка скоропортящейся продукции должна совпадать для объединяемых записей складского журнала.";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
								СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, ВыборкаТЧ.НомерСтроки, ТекстОписанияОшибки),
								Ссылка,
								ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ТаблицаПродукция", ВыборкаТЧ.НомерСтроки, "ЗаписьСкладскогоЖурнала")
								,
								,
								Отказ);
		КонецЕсли;
		
		
		Если ВыборкаТЧ.НекачественныйГруз <> ВыборкаШапка.НекачественныйГруз Тогда
			ТекстОписанияОшибки = "Пометка некачественного груза должна совпадать для объединяемых записей складского журнала.";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
								СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, ВыборкаТЧ.НомерСтроки, ТекстОписанияОшибки),
								Ссылка,
								ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ТаблицаПродукция", ВыборкаТЧ.НомерСтроки, "ЗаписьСкладскогоЖурнала")
								,
								,
								Отказ);
		КонецЕсли;
		
		Если ВыборкаТЧ.ФорматДатыВыработки = Перечисления.СпособыЗаданияДаты.Строка
				ИЛИ ВыборкаТЧ.ФорматСрокаГодности = Перечисления.СпособыЗаданияДаты.Строка Тогда
					ТекстОписанияОшибки = """Дата выработки продукции""/""Срок годности продукции"" указаны в формате ""Строка"". Запрещено использовать формат даты ""Строка"".";
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, ВыборкаТЧ.НомерСтроки, ТекстОписанияОшибки),
						Ссылка,
						ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ТаблицаПродукция", ВыборкаТЧ.НомерСтроки, "ЗаписьСкладскогоЖурнала")
						,
						,
						Отказ);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СформироватьДвижения()
	
	//Движения.ДвижениеПродукции.Записывать = Истина;
	//Движения.ДвижениеПродукции.Очистить();
	//Движения.ДвижениеПродукции.Записать();
	//
	//ТаблицаДвижений = Документы.ОбъединениеЗаписейСкладскогоЖурнала.ПодготовитьТаблицуДвижений(Ссылка);
	//
	//Движения.ДвижениеПродукции.Загрузить(ТаблицаДвижений);
	//Движения.Записать();
	
КонецПроцедуры

Процедура ПодготовитьДанныеДокумента(Запрос)
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ОбъединениеЗаписейСкладскогоЖурнала.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала
		|ПОМЕСТИТЬ ВТ_ЗаписиДляСписания
		|ИЗ
		|	Документ.ОбъединениеЗаписейСкладскогоЖурнала КАК ОбъединениеЗаписейСкладскогоЖурнала
		|ГДЕ
		|	ОбъединениеЗаписейСкладскогоЖурнала.Ссылка = &Ссылка
		|	И НЕ ОбъединениеЗаписейСкладскогоЖурнала.ТипОперации
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОбъединениеЗаписейСкладскогоЖурналаТаблицаПродукция.ЗаписьСкладскогоЖурнала
		|ИЗ
		|	Документ.ОбъединениеЗаписейСкладскогоЖурнала.ТаблицаПродукция КАК ОбъединениеЗаписейСкладскогоЖурналаТаблицаПродукция
		|ГДЕ
		|	ОбъединениеЗаписейСкладскогоЖурналаТаблицаПродукция.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбъединениеЗаписейСкладскогоЖурнала.Организация КАК Организация,
		|	ОбъединениеЗаписейСкладскогоЖурнала.Предприятие КАК Предприятие,
		|	ОбъединениеЗаписейСкладскогоЖурнала.РезультирующаяЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
		|	ОбъединениеЗаписейСкладскогоЖурнала.Количество КАК Количество
		|ПОМЕСТИТЬ ВТ_ЗаписьДляПрихода
		|ИЗ
		|	Документ.ОбъединениеЗаписейСкладскогоЖурнала КАК ОбъединениеЗаписейСкладскогоЖурнала
		|ГДЕ
		|	ОбъединениеЗаписейСкладскогоЖурнала.Ссылка = &Ссылка";
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);

	Запрос.Выполнить();
		
КонецПроцедуры

#КонецОбласти

#КонецЕсли