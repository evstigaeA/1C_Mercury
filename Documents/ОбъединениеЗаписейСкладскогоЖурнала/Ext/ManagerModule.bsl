#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Возвращает описание блокируемых реквизитов.
//
// Возвращаемое значение:
//  Массив - содержит строки в формате ИмяРеквизита[;ИмяЭлементаФормы,...]
//           где ИмяРеквизита - имя реквизита объекта, ИмяЭлементаФормы - имя элемента формы,
//           связанного с реквизитом.
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	Результат = Новый Массив;
	
	Возврат Результат;
	
КонецФункции

// СтандартныеПодсистемы.Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// Записывает движения регистра "ДвиженияПродукции" при обновлении на версию "2.0.7.1"
Процедура ЗаполнитьЗаписиДвиженияТоваровПриОбновлении(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ОбъединениеЗаписейСкладскогоЖурнала.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала
		|ПОМЕСТИТЬ ВТ_ЗаписиДляСписания
		|ИЗ
		|	Документ.ОбъединениеЗаписейСкладскогоЖурнала КАК ОбъединениеЗаписейСкладскогоЖурнала
		|ГДЕ
		|	ОбъединениеЗаписейСкладскогоЖурнала.Ссылка = &Ссылка
		|	И НЕ ОбъединениеЗаписейСкладскогоЖурнала.ТипОперации
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОбъединениеЗаписейСкладскогоЖурналаТаблицаПродукция.ЗаписьСкладскогоЖурнала
		|ИЗ
		|	Документ.ОбъединениеЗаписейСкладскогоЖурнала.ТаблицаПродукция КАК ОбъединениеЗаписейСкладскогоЖурналаТаблицаПродукция
		|ГДЕ
		|	ОбъединениеЗаписейСкладскогоЖурналаТаблицаПродукция.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	&Период КАК Период,
		|	ВЫБОР
		|		КОГДА ДвижениеПродукцииОстатки.КоличествоОстаток < 0
		|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	КОНЕЦ КАК ВидДвижения,
		|	ВЫБОР
		|		КОГДА ДвижениеПродукцииОстатки.КоличествоОстаток < 0
		|			ТОГДА -ДвижениеПродукцииОстатки.КоличествоОстаток
		|		ИНАЧЕ ДвижениеПродукцииОстатки.КоличествоОстаток
		|	КОНЕЦ КАК Количество,
		|	ДвижениеПродукцииОстатки.Организация КАК Организация,
		|	ДвижениеПродукцииОстатки.Предприятие КАК Предприятие,
		|	ДвижениеПродукцииОстатки.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала
		|ИЗ
		|	РегистрНакопления.ДвижениеПродукции.Остатки(
		|			,
		|			Организация = &Организация
		|				И Предприятие = &Предприятие
		|				И ЗаписьСкладскогоЖурнала В
		|					(ВЫБРАТЬ
		|						ВТ_ЗаписиДляСписания.ЗаписьСкладскогоЖурнала
		|					ИЗ
		|						ВТ_ЗаписиДляСписания КАК ВТ_ЗаписиДляСписания)) КАК ДвижениеПродукцииОстатки
		|";

	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("Организация",	ДокументСсылка.Организация);
	Запрос.УстановитьПараметр("Предприятие",	ДокументСсылка.Предприятие);
	Запрос.УстановитьПараметр("Период",			ДокументСсылка.Дата);

	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		НаборЗаписей = РегистрыНакопления.ДвижениеПродукции.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(ДокументСсылка);
		НаборЗаписей.Записывать = Истина;
		НаборЗаписей.Очистить();
		НаборЗаписей.Загрузить(РезультатЗапроса.Выгрузить());
		Попытка
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
		Исключение
			ПредставлениеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ТекстШаблона = НСтр("ru = 'Не удалось записать движения документа по причине: %1.'");
			ТекстИсключения = СтрШаблон(ТекстШаблона, ПредставлениеОшибки);
			ЗаписьЖурналаРегистрации("Ошибка выполнения",
									 УровеньЖурналаРегистрации.Ошибка,
									 ДокументСсылка.Метаданные(),
									 ДокументСсылка,
									 ТекстИсключения);
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Записывает записи движений продукции в регистр "ДвижениеПродукции"
//
// Параметры:
// СсылкаНаДокумент - ссылка на документ регистратор
Процедура ЗаписатьДвиженияПродукции(ДокументСсылка) Экспорт
	//
	//НаборЗаписей = РегистрыНакопления.ДвижениеПродукции.СоздатьНаборЗаписей();
	//НаборЗаписей.Отбор.Регистратор.Установить(ДокументСсылка);
	//НаборЗаписей.Очистить();
	//НаборЗаписей.Записать();
	//
	//ТаблицаДвижений = ПодготовитьТаблицуДвижений(ДокументСсылка);
	//
	//НаборЗаписей.Загрузить(ТаблицаДвижений);
	//НаборЗаписей.Записать();
	
КонецПроцедуры

Функция ПодготовитьТаблицуДвижений(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ОбъединениеЗаписейСкладскогоЖурнала.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала
		|ПОМЕСТИТЬ ВТ_ЗаписиДляСписания
		|ИЗ
		|	Документ.ОбъединениеЗаписейСкладскогоЖурнала КАК ОбъединениеЗаписейСкладскогоЖурнала
		|ГДЕ
		|	ОбъединениеЗаписейСкладскогоЖурнала.Ссылка = &Ссылка
		|	И НЕ ОбъединениеЗаписейСкладскогоЖурнала.ТипОперации
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОбъединениеЗаписейСкладскогоЖурналаТаблицаПродукция.ЗаписьСкладскогоЖурнала
		|ИЗ
		|	Документ.ОбъединениеЗаписейСкладскогоЖурнала.ТаблицаПродукция КАК ОбъединениеЗаписейСкладскогоЖурналаТаблицаПродукция
		|ГДЕ
		|	ОбъединениеЗаписейСкладскогоЖурналаТаблицаПродукция.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбъединениеЗаписейСкладскогоЖурнала.Организация КАК Организация,
		|	ОбъединениеЗаписейСкладскогоЖурнала.Предприятие КАК Предприятие,
		|	ОбъединениеЗаписейСкладскогоЖурнала.РезультирующаяЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
		|	ОбъединениеЗаписейСкладскогоЖурнала.Количество КАК Количество
		|ПОМЕСТИТЬ ВТ_ЗаписьДляПрихода
		|ИЗ
		|	Документ.ОбъединениеЗаписейСкладскогоЖурнала КАК ОбъединениеЗаписейСкладскогоЖурнала
		|ГДЕ
		|	ОбъединениеЗаписейСкладскогоЖурнала.Ссылка = &Ссылка";
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);

	Запрос.Выполнить();
	
	ЗапросДляБлокировки = Новый Запрос("ВЫБРАТЬ * ИЗ ВТ_ЗаписиДляСписания");
	ЗапросДляБлокировки.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	ДанныеДляБлокировки = ЗапросДляБлокировки.Выполнить().Выгрузить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ДвижениеПродукции");
	ЭлементБлокировки.УстановитьЗначение("Организация", ДокументСсылка.Организация);
	ЭлементБлокировки.УстановитьЗначение("Предприятие", ДокументСсылка.Предприятие);
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = ДанныеДляБлокировки;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ЗаписьСкладскогоЖурнала", "ЗаписьСкладскогоЖурнала");
	Блокировка.Заблокировать();
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	&Период КАК Период,
		|	ВЫБОР
		|		КОГДА ДвижениеПродукцииОстатки.КоличествоОстаток < 0
		|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	КОНЕЦ КАК ВидДвижения,
		|	ДвижениеПродукцииОстатки.Организация КАК Организация,
		|	ДвижениеПродукцииОстатки.Предприятие КАК Предприятие,
		|	ДвижениеПродукцииОстатки.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
		|	ВЫБОР
		|		КОГДА ДвижениеПродукцииОстатки.КоличествоОстаток < 0
		|			ТОГДА -ДвижениеПродукцииОстатки.КоличествоОстаток
		|		ИНАЧЕ ДвижениеПродукцииОстатки.КоличествоОстаток
		|	КОНЕЦ КАК Количество
		|ИЗ
		|	РегистрНакопления.ДвижениеПродукции.Остатки(
		|			,
		|			Организация = &Организация
		|				И Предприятие = &Предприятие
		|				И ЗаписьСкладскогоЖурнала В
		|					(ВЫБРАТЬ
		|						ВТ_ЗаписиДляСписания.ЗаписьСкладскогоЖурнала
		|					ИЗ
		|						ВТ_ЗаписиДляСписания КАК ВТ_ЗаписиДляСписания)) КАК ДвижениеПродукцииОстатки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
		|	ВТ_ЗаписьДляПрихода.Организация,
		|	ВТ_ЗаписьДляПрихода.Предприятие,
		|	ВТ_ЗаписьДляПрихода.ЗаписьСкладскогоЖурнала,
		|	ВТ_ЗаписьДляПрихода.Количество
		|ИЗ
		|	ВТ_ЗаписьДляПрихода КАК ВТ_ЗаписьДляПрихода
		|ГДЕ
		|	ВТ_ЗаписьДляПрихода.Количество > 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВидДвижения";

	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("Организация", ДокументСсылка.Организация);
	Запрос.УстановитьПараметр("Предприятие", ДокументСсылка.Предприятие);
	Запрос.УстановитьПараметр("Период"     , ДокументСсылка.Дата);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

#КонецОбласти

#КонецЕсли