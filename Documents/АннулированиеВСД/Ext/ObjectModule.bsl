#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка = Истина Тогда
		Возврат
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("Ответственный") Тогда 
		ДополнительныеСвойства.Свойство("Ответственный", Ответственный);
	Иначе
		Ответственный = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ИнтеграцияВетисAPIСервер.УстановитьСтатусПодготовлен(Ссылка);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ВСД                     = Документы.ВСД.ПустаяСсылка();
	ЗаписьСкладскогоЖурнала = Справочники.СвойстваЗаписейСкладскогоЖурнала.ПустаяСсылка();
	ТранспортнаяОперация    = Документы.ТранспортныеОперации.ПустаяСсылка();
	Количество = 0;
	
	ЕстьПравоОбслуживания = ИнтеграцияВетисAPIСервер.ПроверитьОграниченияПользователя(Организация, Предприятие);
	
	Если НЕ ЕстьПравоОбслуживания Тогда
		Предприятие = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВСД") Тогда
		
		ЗаполнитьДокументПоДаннымВСД(ДанныеЗаполнения);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ИнтеграцияВетисAPIСервер.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьДокументПоДаннымВСД(ВСД) Экспорт
	
	СтатусВСД = РегистрыСведений.СтатусыВСД.ТекущийСтатусДокумента(ВСД);
	
	Если СтатусВСД <> Справочники.СтатусыВСД.Оформлен Тогда
		ВызватьИсключение НСтр("ru = 'ВСД должен быть в статусе ""Оформлен"".'");
	КонецЕсли;
	
	Если ВСД.ВидВСД = Перечисления.ВидыВСД.Входящий ИЛИ ВСД.ВидВСД = Перечисления.ВидыВСД.Производственный Тогда
		ВызватьИсключение НСтр("ru = 'ВСД должен быть транспортным (исходящим).'");
	КонецЕсли;
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДокументВСД.Ссылка КАК ВСД,
		|	СвязиМеждуЗаписямиСкладскогоЖурналаИВСД.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
		|	ТранспортныеОперацииТаблицаВСД.Ссылка КАК ТранспортнаяОперация,
		|	ДокументВСД.Организация КАК Организация,
		|	ДокументВСД.КонтрагентОтправитель КАК Контрагент,
		|	ДокументВСД.ПредприятиеОтправитель КАК Предприятие,
		|	ДокументВСД.Количество КАК Количество,
		|	ЕСТЬNULL(АннулированиеВСД.Ссылка, ЗНАЧЕНИЕ(Документ.АннулированиеВСД.ПустаяСсылка)) КАК ДокументАннулирования
		|ИЗ
		|	Документ.ВСД КАК ДокументВСД
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ТранспортныеОперации.ТаблицаВСД КАК ТранспортныеОперацииТаблицаВСД
		|		ПО ДокументВСД.Ссылка = ТранспортныеОперацииТаблицаВСД.ВСД
		|			И ДокументВСД.Организация = ТранспортныеОперацииТаблицаВСД.Ссылка.Организация
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвязиМеждуЗаписямиСкладскогоЖурналаИВСД КАК СвязиМеждуЗаписямиСкладскогоЖурналаИВСД
		|		ПО ДокументВСД.Ссылка = СвязиМеждуЗаписямиСкладскогоЖурналаИВСД.ВСД
		|			И ДокументВСД.Организация = СвязиМеждуЗаписямиСкладскогоЖурналаИВСД.Организация
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.АннулированиеВСД КАК АннулированиеВСД
		|		ПО ДокументВСД.Ссылка = АннулированиеВСД.ВСД
		|			И (НЕ АннулированиеВСД.ПометкаУдаления)
		|			И ДокументВСД.Организация = АннулированиеВСД.Организация
		|ГДЕ
		|	ДокументВСД.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ВСД);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	Если ЗначениеЗаполнено(Выборка.ДокументАннулирования) Тогда
		
		ВызватьИсключение СтрЗаменить(НСтр("ru = 'На основании данного ВСД уже введен документ %1'"), "%1", Выборка.ДокументАннулирования);
		
	Иначе
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли