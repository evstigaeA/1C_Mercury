
// Выполняет регистрацию события в альтернативном журнале регистрации
//
// Параметры:
//	пДанныеЗаписи  - ДокументСсылка, СправочникСсылка - ссылка на данные, связанные с событием
//	пСобытиеИмя - СправочникСсылка.ДМ_СобытияЖурналаРегистрации - Тип события
//	пУровеньЖурнала - ПеречислениеСсылка.ДМ_УровниЖурнала - Уровень важности события журнала регистрации.
//	пОбъектМетаданных - СправочникСсылка.ИдентификаторыОбъектовМетаданных, Строка - Объект метаданных, к которому относится событие.
//	пДанныеПредставление - Строка - Представление объекта данных, к которому относится событие.
//  пОписаниеСобытия  - Строка - Произвольная строка комментария к событию
//
Процедура ЗарегистрироватьСобытие( 
	пДанныеЗаписи = Неопределено, 
	пСобытиеИмя = Неопределено, 
	пУровеньЖурнала = Неопределено, 
	пОбъектМетаданных = Неопределено,
	пДанныеПредставление = Неопределено,
	пОписаниеСобытия = Неопределено
	) Экспорт

	лНаборЗаписей = РегистрыСведений.ДМ_СтрокиЗаписейЖурналаРегистрации.СоздатьНаборЗаписей();
	лЗапись = лНаборЗаписей.Добавить();
	лЗапись.ДатаСобытия = ТекущаяДатаСеанса();
	лЗапись.ДатаСобытия2 = НачалоДня(лЗапись.ДатаСобытия);
	лЗапись.ДанныеЗаписи = пДанныеЗаписи;
	лСеанс = ПолучитьТекущийСеансИнформационнойБазы();
	лЗапись.Сеанс = лСеанс.НомерСеанса;
	лЗапись.СобытиеИмя = пСобытиеИмя;
	лЗапись.Идентификатор = Новый УникальныйИдентификатор;
	лЗапись.Приложение = Справочники.ДМ_ТипыПриложений1С.НайтиПоКоду(лСеанс.ИмяПриложения);
	лЗапись.УровеньЖурнала = пУровеньЖурнала;
	
	Если ТипЗнч(пОбъектМетаданных) = Тип("Строка") Тогда
		лЗапись.ОбъектМетаданных = ОбщегоНазначения.ИдентификаторОбъектаМетаданных( пОбъектМетаданных )		
	Иначе
		лЗапись.ОбъектМетаданных = пОбъектМетаданных;
	КонецЕсли;
	лЗапись.Пользователь = Пользователи.ТекущийПользователь();
	лЗапись.НомерСоединения = лСеанс.НомерСоединения;
	лЗапись.Комментарий = пОписаниеСобытия;
	лЗапись.Компьютер = ИмяКомпьютера();
	лЗапись.ДанныеПредставление = пДанныеПредставление;
	
	Для каждого Измерение Из Метаданные.РегистрыСведений.ДМ_СтрокиЗаписейЖурналаРегистрации.Измерения Цикл
		лНаборЗаписей.Отбор[Измерение.Имя].Установить( лЗапись[Измерение.Имя] );
	КонецЦикла;
	
	лНаборЗаписей.Записать();

КонецПроцедуры // ЗарегистрироватьСобытие()

