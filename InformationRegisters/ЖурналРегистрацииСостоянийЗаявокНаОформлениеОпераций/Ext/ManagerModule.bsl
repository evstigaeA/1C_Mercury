#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает текущий статус документа
//
// Параметры:
//  СсылкаНаДокумент - ДокументСсылка - ссылка на документ типа:
//					   ДокументСсылка.ПриходныеОперации, ДокументСсылка.ПроизводственныеОперации,
//					   ДокументСсылка.ТранспортныеОперации.
// 
// Возвращаемое значение:
//  СтатусОбъекта - Справочник.СтатусыЗаявок, Неопределено - текущий статус документа.
//
Функция ТекущийСтатусДокумента(СсылкаНаДокумент) Экспорт 

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаТекущийСтатусДокумента.Статус
	|ИЗ
	|	РегистрСведений.ЖурналРегистрацииСостоянийЗаявокНаОформлениеОпераций.СрезПоследних(, ДокументСсылка = &СсылкаНаДокумент) КАК ТаблицаТекущийСтатусДокумента";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("СсылкаНаДокумент", СсылкаНаДокумент);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено
	КонецЕсли; 

	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	Возврат Выборка.Статус
	
КонецФункции // ()

// Возвращает массив статусов, для которых запрещено редактирование форм
//
// Возвращаемое значение:
//   Массив - массив статусов документов, для которых запрещено редактирование форм.
//
Функция МассивСтатусовСЗапретомРедактированияФормы() Экспорт 

	Результат = Новый Массив;
	
	Результат.Добавить(Справочники.СтатусыЗаявок.IDОтправлен);
	Результат.Добавить(Справочники.СтатусыЗаявок.IDПолучен);
	Результат.Добавить(Справочники.СтатусыЗаявок.Закрыта);
	Результат.Добавить(Справочники.СтатусыЗаявок.Новая);
	Результат.Добавить(Справочники.СтатусыЗаявок.Обрабатывается);
	Результат.Добавить(Справочники.СтатусыЗаявок.ОшибкаОбработкиОтвета);
	Результат.Добавить(Справочники.СтатусыЗаявок.ОшибкаОтправкиID);
	Результат.Добавить(Справочники.СтатусыЗаявок.Принята);
	Результат.Добавить(Справочники.СтатусыЗаявок.УспешноОбработана);
	Результат.Добавить(Справочники.СтатусыЗаявок.Отправлена);
	
	Возврат Результат

КонецФункции // ()

// Возвращает массив статусов, которые носят информационный характер
//
// Возвращаемое значение:
//   Массив - массив статусов СправочникСсылка.СтатусыЗаявок.
//
Функция МассивИнформационныхСтатусов() Экспорт 

	Результат = Новый Массив;
	
	Результат.Добавить(Справочники.СтатусыЗаявок.IDОтправлен);
	Результат.Добавить(Справочники.СтатусыЗаявок.Отправлена);
	Результат.Добавить(Справочники.СтатусыЗаявок.Обрабатывается);
	Результат.Добавить(Справочники.СтатусыЗаявок.Черновик);
	Результат.Добавить(Справочники.СтатусыЗаявок.Подготовлен);
	
	Возврат Результат

КонецФункции

// Возвращает массив статусов, при которых заявка считается исполненной
//
// Возвращаемое значение:
//   Массив - массив статусов СправочникСсылка.СтатусыЗаявок.
//
Функция МассивСтатусыОбработанныхЗаявок() Экспорт 

	Результат = Новый Массив;
	
	Результат.Добавить(Справочники.СтатусыЗаявок.Отклонена);
	Результат.Добавить(Справочники.СтатусыЗаявок.УспешноОбработана);
	// При отстуствии соединения в журнал записывается статус "ОшибкаОтправкиЗапроса". 
	// Нужно чтобы после восстановления соединения заявка считалась необработанной и отправлялась.
	//Результат.Добавить(Справочники.СтатусыЗаявок.ОшибкаОтправкиЗапроса); 
	
	Возврат Результат

КонецФункции

// Возвращает массив статусов успешной обработки
//
// Возвращаемое значение:
//   Массив - массив статусов СправочникСсылка.СтатусыЗаявок.
//
Функция МассивСтатусовУспешноОбработано() Экспорт 

	Результат = Новый Массив;
	
	Результат.Добавить(Справочники.СтатусыЗаявок.УспешноОбработана);
	
	Возврат Результат

КонецФункции // ()

// Возвращает массив статусов процесса обработки
//
// Возвращаемое значение:
//   Массив - массив статусов СправочникСсылка.СтатусыЗаявок.
//
Функция МассивСтатусовВПроцессеОбработки() Экспорт 

	Результат = Новый Массив;
	
	Результат.Добавить(Справочники.СтатусыЗаявок.IDОтправлен);
	Результат.Добавить(Справочники.СтатусыЗаявок.IDПолучен);
	Результат.Добавить(Справочники.СтатусыЗаявок.Обрабатывается);
	Результат.Добавить(Справочники.СтатусыЗаявок.Принята);
	Результат.Добавить(Справочники.СтатусыЗаявок.Отправлена);
	
	Возврат Результат

КонецФункции // ()

// Возвращает массив статусов ошибок
//
// Возвращаемое значение:
//   Массив - массив статусов СправочникСсылка.СтатусыЗаявок.
//
Функция МассивСтатусовОшибок() Экспорт 

	Результат = Новый Массив;
	
	Результат.Добавить(Справочники.СтатусыЗаявок.ОшибкаОбработкиОтвета);
	Результат.Добавить(Справочники.СтатусыЗаявок.ОшибкаОтправкиЗапроса);
	Результат.Добавить(Справочники.СтатусыЗаявок.Отклонена);
		
	Возврат Результат

КонецФункции // ()

#КонецОбласти

#КонецЕсли