#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбновлениеИнформационнойБазы
// Монопольный обработчик обновления 2.0.4.1
Процедура ПеренестиНастройкиОбменаВетисAPI() Экспорт
	
	ОбновлениеКонтрагентовПоИзменениям = Ложь;
	ОбновлениеПредприятийПоИзменениям  = Ложь;
	ОбновлениеПродукцииПоИзменениям    = Ложь;
	СмещениеВСпискахЗапросов           = ?(Константы.УдалитьСмещениеВСпискахЗапросов.Получить() = 0, 1000, Константы.УдалитьСмещениеВСпискахЗапросов.Получить());
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	УдалитьНастройкиОбменаВетисAPI.ОрганизацияДляПолученияНСИ КАК ОрганизацияДляПолученияНСИ,
		|	УдалитьНастройкиОбменаВетисAPI.ОбновлениеКонтрагентовПоИзменениям КАК ОбновлениеКонтрагентовПоИзменениям,
		|	УдалитьНастройкиОбменаВетисAPI.ОбновлениеПредприятийПоИзменениям КАК ОбновлениеПредприятийПоИзменениям,
		|	УдалитьНастройкиОбменаВетисAPI.ОбновлениеПродукцииПоИзменениям КАК ОбновлениеПродукцииПоИзменениям
		|ИЗ
		|	РегистрСведений.УдалитьНастройкиОбменаВетисAPI КАК УдалитьНастройкиОбменаВетисAPI";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		МенеджерЗначения = Константы.ОрганизацияДляПолученияНСИ.СоздатьМенеджерЗначения();
		МенеджерЗначения.Значение = Выборка.ОрганизацияДляПолученияНСИ;
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(МенеджерЗначения);
		
		ОбновлениеКонтрагентовПоИзменениям = Выборка.ОбновлениеКонтрагентовПоИзменениям;
		ОбновлениеПредприятийПоИзменениям  = Выборка.ОбновлениеПредприятийПоИзменениям;
		ОбновлениеПродукцииПоИзменениям    = Выборка.ОбновлениеПродукцииПоИзменениям;
		
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.НастройкиОбменаВетисAPI.СоздатьНаборЗаписей();
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидОперации    = Справочники.ВидыОперацийОбменаAPI.АктуализацияКонтрагентов;
	НоваяЗапись.ОбновлениеПоИзменениям     = ОбновлениеКонтрагентовПоИзменениям;
	НоваяЗапись.СмещениеВСпискахЗапросов   = СмещениеВСпискахЗапросов;
	НоваяЗапись.СмещениеДатыНачалаЗагрузки = 24;
	НоваяЗапись.КоличествоПопытокПолученияРезультатаПриОшибкахAPLM = 10;
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидОперации    = Справочники.ВидыОперацийОбменаAPI.АктуализацияПредприятий;
	НоваяЗапись.ОбновлениеПоИзменениям     = ОбновлениеПредприятийПоИзменениям;
	НоваяЗапись.СмещениеВСпискахЗапросов   = СмещениеВСпискахЗапросов;
	НоваяЗапись.СмещениеДатыНачалаЗагрузки = 24;
	НоваяЗапись.КоличествоПопытокПолученияРезультатаПриОшибкахAPLM = 10;
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидОперации    = Справочники.ВидыОперацийОбменаAPI.АктуализацияПродукции;
	НоваяЗапись.ОбновлениеПоИзменениям     = ОбновлениеПродукцииПоИзменениям;
	НоваяЗапись.СмещениеВСпискахЗапросов   = СмещениеВСпискахЗапросов;
	НоваяЗапись.СмещениеДатыНачалаЗагрузки = 24;
	НоваяЗапись.КоличествоПопытокПолученияРезультатаПриОшибкахAPLM = 10;
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидОперации    = Справочники.ВидыОперацийОбменаAPI.ЗагрузкаБазовойНСИИСМеркурий;
	НоваяЗапись.ОбновлениеПоИзменениям     = Истина;
	НоваяЗапись.СмещениеВСпискахЗапросов   = СмещениеВСпискахЗапросов;
	НоваяЗапись.СмещениеДатыНачалаЗагрузки = 24;
	НоваяЗапись.КоличествоПопытокПолученияРезультатаПриОшибкахAPLM = 10;
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидОперации    = Справочники.ВидыОперацийОбменаAPI.ПолучениеАдреснойИнформации;
	НоваяЗапись.ОбновлениеПоИзменениям     = Ложь;
	НоваяЗапись.СмещениеВСпискахЗапросов   = СмещениеВСпискахЗапросов;
	НоваяЗапись.СмещениеДатыНачалаЗагрузки = 0;
	НоваяЗапись.КоличествоПопытокПолученияРезультатаПриОшибкахAPLM = 10;
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидОперации    = Справочники.ВидыОперацийОбменаAPI.ЗагрузкаДанныхПоВСД;
	НоваяЗапись.ОбновлениеПоИзменениям     = Истина;
	НоваяЗапись.СмещениеВСпискахЗапросов   = СмещениеВСпискахЗапросов;
	НоваяЗапись.СмещениеДатыНачалаЗагрузки = 24;
	НоваяЗапись.КоличествоПопытокПолученияРезультатаПриОшибкахAPLM = 10;
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидОперации    = Справочники.ВидыОперацийОбменаAPI.ЗагрузкаДанныхПоЗаписямСкладскогоЖурнала;
	НоваяЗапись.ОбновлениеПоИзменениям     = Истина;
	НоваяЗапись.СмещениеВСпискахЗапросов   = СмещениеВСпискахЗапросов;
	НоваяЗапись.СмещениеДатыНачалаЗагрузки = 24;
	НоваяЗапись.КоличествоПопытокПолученияРезультатаПриОшибкахAPLM = 10;
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
	
КонецПроцедуры

// Монопольный обработчик обновления 2.0.8.1
Процедура ЗаполнитьЗначенияАдминистрированияПользователями() Экспорт
	
	НаборЗаписей = РегистрыСведений.НастройкиОбменаВетисAPI.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ВидОперации.Установить(Справочники.ВидыОперацийОбменаAPI.АдминистрированиеПользователей);
	
	НаборЗаписей.Прочитать();
	Если НаборЗаписей.Количество() > 0 Тогда
		Возврат;
	КонецЕсли;
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидОперации = Справочники.ВидыОперацийОбменаAPI.АдминистрированиеПользователей;
	НоваяЗапись.ОбновлениеПоИзменениям = Ложь;
	НоваяЗапись.СмещениеВСпискахЗапросов   = 1000;
	НоваяЗапись.СмещениеДатыНачалаЗагрузки = 0;
	НоваяЗапись.КоличествоПопытокПолученияРезультатаПриОшибкахAPLM = 10;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

#КонецОбласти
	
#КонецЕсли