
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Возвращает все связанные контрагенты по предприятию.
//
// Параметры:
//  Предприятие - СправочникСсылка.Предприятия - ссылка на переданное предприятие;
//
//  ТребуетсяСписокЗначений - Булево - Истина, если требуется список значений;
//
//  Текст - Строка - по переданному тексту в наименовании будет установлен отбор;
//
//  Основной - Булево - определяет нужно ли делать в контрагенте отбор по реквизиту "Основной";
//
// Возвращаемое значение:
//   Массив, СписокЗначений - массив или список значений с контрагентами в зависимости от переданного параметра "ТребуетсяСписокЗначений"
//
Функция КонтрагентыПоПредприятию(Предприятие, ТребуетсяСписокЗначений = Ложь, Текст = "", Основной = Ложь) Экспорт 

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаСвязи.Контрагент КАК Значение,
	|	ТаблицаСвязи.Контрагент.Наименование КАК Наименование
	|ИЗ
	|	РегистрСведений.СвязиМеждуКонтрагентамиИПредприятиями КАК ТаблицаСвязи
	|ГДЕ
	|	ТаблицаСвязи.Предприятие = &Предприятие
	|	И ТаблицаСвязи.Контрагент.Основной";

	Если Текст <> "" Тогда
		ТекстЗапроса = ТекстЗапроса + " И ТаблицаСвязи.Контрагент.Наименование ПОДОБНО &Текст";
	КонецЕсли;
	
	Если Основной Тогда
		ТекстЗапроса = ТекстЗапроса + " И ТаблицаСвязи.Контрагент.Основной";
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Предприятие"	, Предприятие);
	Запрос.УстановитьПараметр("Текст"		, "%" + Текст + "%");

	Результат = Запрос.Выполнить();
	
	Если ТребуетсяСписокЗначений Тогда
		
		СписокЗначений = Новый СписокЗначений;
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			СписокЗначений.Добавить(Выборка.Значение, Выборка.Наименование);
		КонецЦикла; 
		
		Возврат СписокЗначений
		
	Иначе
		
		МассивЗначений = Новый Массив;
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			МассивЗначений.Добавить(Выборка.Значение);
		КонецЦикла; 
		
		Возврат МассивЗначений
	
	КонецЕсли; 
	
КонецФункции

// Возвращает все связанные предприятия по контаргенту.
//
// Параметры:
//  Контрагент - СправочникСсылка.Контрагенты - ссылка на переданного контргента;
//
//  ТребуетсяСписокЗначений - Булево - Истина, если требуется список значений;
//
//  Текст - Строка - по переданному тексту в наименовании будет установлен отбор;
//
//  ТребуетсяGUID - Булево - Истина, если требуется получить GUID предприятий, вместо ссылки;
//
// Возвращаемое значение:
//   Массив, СписокЗначений - массив или список значений с предприятиями в зависимости от переданного параметра "ТребуетсяСписокЗначений"
//
Функция ПредприятияПоКонтрагенту(Контрагент, ТребуетсяСписокЗначений = Ложь, Текст = "", ТребуетсяGUID = Ложь) Экспорт 

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаСвязи.Предприятие КАК Значение,
	|	ТаблицаСвязи.Предприятие.Наименование КАК Наименование,
	|	ТаблицаСвязи.Предприятие.GUID_Меркурий КАК GUID_Меркурий
	|ИЗ
	|	РегистрСведений.СвязиМеждуКонтрагентамиИПредприятиями КАК ТаблицаСвязи
	|ГДЕ
	|	ТаблицаСвязи.Контрагент = &Контрагент";
	
	Если Текст <> "" Тогда
		ТекстЗапроса = ТекстЗапроса + " И ТаблицаСвязи.Предприятие.Наименование ПОДОБНО &Текст";
	КонецЕсли; 

	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Контрагент"	, Контрагент);
	Запрос.УстановитьПараметр("Текст"		, "%" + Текст + "%");
	
	Результат = Запрос.Выполнить();
	
	Если ТребуетсяСписокЗначений Тогда
		
		СписокЗначений = Новый СписокЗначений;
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			Если ТребуетсяGUID Тогда
				СписокЗначений.Добавить(Выборка.GUID_Меркурий, Выборка.GUID_Меркурий);
			Иначе
				СписокЗначений.Добавить(Выборка.Значение, Выборка.Наименование);
			КонецЕсли; 
			
		КонецЦикла; 
		
		Возврат СписокЗначений
		
	Иначе
		
		МассивЗначений = Новый Массив;
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			Если ТребуетсяGUID Тогда
				МассивЗначений.Добавить(Выборка.GUID_Меркурий);
			Иначе	
				МассивЗначений.Добавить(Выборка.Значение);
			КонецЕсли; 
			
		КонецЦикла; 
		
		Возврат МассивЗначений
	
	КонецЕсли; 
	
КонецФункции

// Возвращает Истина или Ложь в зависимости от того, связаны ли контрагент и предприятие.
//
// Параметры:
//  Контрагент - СправочникСсылка.Контаргенты - ссылка на переданного контрагента;
//
//  Предприятие - СправочникСсылка.Предприятия - ссылка на переданное предприятие;
//
// Возвращаемое значение:
//   Булево.
//
Функция КонтрагентПредприятиеСвязаны(Контрагент, Предприятие) Экспорт 

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	1 КАК Поле1
	|ИЗ
	|	РегистрСведений.СвязиМеждуКонтрагентамиИПредприятиями КАК СвязиМеждуКонтрагентамиИПредприятиями
	|ГДЕ
	|	СвязиМеждуКонтрагентамиИПредприятиями.Контрагент = &Контрагент
	|	И СвязиМеждуКонтрагентамиИПредприятиями.Предприятие = &Предприятие";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Контрагент"	, Контрагент);
	Запрос.УстановитьПараметр("Предприятие"	, Предприятие);
	
	Возврат Не Запрос.Выполнить().Пустой()
	
КонецФункции // ()

// Процедура добавляет запись в регистр по переданным значениям структуры.
Процедура ДобавитьЗапись(СтруктураЗаписи, Загрузка = Ложь) Экспорт
	
	ОбменДаннымиСервер.ДобавитьЗаписьВРегистрСведений(СтруктураЗаписи, "СвязиМеждуКонтрагентамиИПредприятиями", Загрузка);
	
КонецПроцедуры

// Процедура удаляет набор записей в регистре по переданным значениям структуры.
Процедура УдалитьЗапись(СтруктураЗаписи, Загрузка = Ложь) Экспорт
	
	ОбменДаннымиСервер.УдалитьНаборЗаписейВРегистреСведений(СтруктураЗаписи, "СвязиМеждуКонтрагентамиИПредприятиями", Загрузка);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли