#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ТолькоПросмотр = Истина;
	
	Если Параметры.Свойство("ИдентификаторЗапроса") Тогда
		ИдентификаторЗапроса = Параметры.ИдентификаторЗапроса;
	КонецЕсли;
	
	Если Параметры.Свойство("Документ") Тогда
		Документ = Параметры.Документ;
	КонецЕсли;
	
	ВерсияКонфигурации  = Метаданные.Версия;
	
	ПолучитьДанныеСообщений();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СохранитьФайл(Команда)
	
	ИмяФайла = Строка(ВидОперации) + " " + Формат(ТекущаяДата(), "ДФ='dd.MM.yyyy HH-MM-ss'");
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогВыбораФайла.Фильтр = НСтр("ru='Текстовый документ (*.txt)|*.txt|Табличный документ (*.mxl)|*.mxl'");
	ДиалогВыбораФайла.МножественныйВыбор = Ложь;
	ДиалогВыбораФайла.ИндексФильтра = 0;
	ДиалогВыбораФайла.ПолноеИмяФайла = ИмяФайла;
	Оповещение = Новый ОписаниеОповещения("ПослеВыбораФайлаДляСохранения", ЭтотОбъект);
	ДиалогВыбораФайла.Показать(Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораФайлаДляСохранения(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		
		ПутьКФайлу = Результат[0];
		ВыбранныйФайл = ОбщегоНазначенияКлиентСервер.РазложитьПолноеИмяФайла(ПутьКФайлу);
		РасширениеФайла = ОбщегоНазначенияКлиентСервер.РасширениеБезТочки(ВыбранныйФайл.Расширение);
		
		Если ЗначениеЗаполнено(ВыбранныйФайл.Имя) Тогда
			
			Если РасширениеФайла = "txt" Или РасширениеФайла = "mxl" Тогда
				ВыполнитьСохранениеФайла(ВыбранныйФайл, РасширениеФайла);
			Иначе
				ПоказатьПредупреждение(, НСтр("ru = 'Файл не был сохранен.'"));
				Возврат;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьСохранениеФайла(ВыбранныйФайл, РасширениеФайла)
	
	Если РасширениеФайла = "txt" Тогда
		СформироватьФайлОбращенияTXT(ВыбранныйФайл.ПолноеИмя);
	Иначе
		
		ФайлОбращения = СформироватьФайлОбращенияMXL();
		
		Оповещение = Новый ОписаниеОповещения("ПослеЗаписиТабличногоДокументаВФайл", ЭтотОбъект);
		ФайлОбращения.НачатьЗапись(Оповещение, ВыбранныйФайл.ПолноеИмя, ТипФайлаТабличногоДокумента.MXL);
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписиТабличногоДокументаВФайл(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = Ложь Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Файл обращения не был сохранен.'"));
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ФормированиеФайлов

&НаКлиенте
Процедура СформироватьФайлОбращенияTXT(ПутьКФайлу)
	
	ТекстовыйФайлОбращения = Новый ЗаписьТекста(ПутьКФайлу, КодировкаТекста.UTF8);
	
	СистемнаяИнформация = Новый СистемнаяИнформация;
	
	ТекстовыйФайлОбращения.ЗаписатьСтроку("Версия платформы:                    " + СистемнаяИнформация.ВерсияПриложения);
	ТекстовыйФайлОбращения.ЗаписатьСтроку("Версия конфигурации:                 " + ВерсияКонфигурации);
	ТекстовыйФайлОбращения.ЗаписатьСтроку("Вид операции:                        " + ВидОперации);
	ТекстовыйФайлОбращения.ЗаписатьСтроку("Идентификатор заявки(applicationId): " + ИдентификаторЗаявки);
	ТекстовыйФайлОбращения.ЗаписатьСтроку("Статус заявки:                       " + СтатусЗаявки);
	ТекстовыйФайлОбращения.ЗаписатьСтроку("Код состояния сервера:               " + КодСостоянияСервера);
	
	ТекстовыйФайлОбращения.ЗаписатьСтроку("");
	ТекстовыйФайлОбращения.ЗаписатьСтроку("Описание оишибки при выполнении операции:");
	ТекстовыйФайлОбращения.ЗаписатьСтроку("");
	ТекстовыйФайлОбращения.ЗаписатьСтроку(ОшибкиВыполненияОбмена.ПолучитьТекст());
	
	ТекстовыйФайлОбращения.ЗаписатьСтроку("");
	ТекстовыйФайлОбращения.ЗаписатьСтроку("Запрос на выполнение операции:");
	ТекстовыйФайлОбращения.ЗаписатьСтроку("");
	ТекстовыйФайлОбращения.ЗаписатьСтроку(ТекстЗапросаЗаявка.ПолучитьТекст());
	
	ТекстовыйФайлОбращения.ЗаписатьСтроку("");
	ТекстовыйФайлОбращения.ЗаписатьСтроку("Получение ID заявки операции:");
	ТекстовыйФайлОбращения.ЗаписатьСтроку("");
	ТекстовыйФайлОбращения.ЗаписатьСтроку(ТекстОтветаЗаявка.ПолучитьТекст());
	
	ТекстовыйФайлОбращения.ЗаписатьСтроку("");
	ТекстовыйФайлОбращения.ЗаписатьСтроку("Запрос результата операции:");
	ТекстовыйФайлОбращения.ЗаписатьСтроку("");
	ТекстовыйФайлОбращения.ЗаписатьСтроку(ТекстЗапросаРезультат.ПолучитьТекст());
	
	ТекстовыйФайлОбращения.ЗаписатьСтроку("");
	ТекстовыйФайлОбращения.ЗаписатьСтроку("Получение результата операции:");
	ТекстовыйФайлОбращения.ЗаписатьСтроку("");
	ТекстовыйФайлОбращения.ЗаписатьСтроку(ТекстОтветаРезультат.ПолучитьТекст());
	
	ТекстовыйФайлОбращения.Закрыть();
	
КонецПроцедуры

&НаСервере
Функция СформироватьФайлОбращенияMXL()
	
	Макет = ПолучитьОбщийМакет("ИнформацияДляТехническойПоддержки");
	
	ОбластьШапки      = Макет.ПолучитьОбласть("Шапка");
	
	ЗапросЗаявкаШапка = Макет.ПолучитьОбласть("ЗапросЗаявкаШапка");
	ЗапросЗаявкаТекст = Макет.ПолучитьОбласть("ЗапросЗаявкаТекст");
	
	ОтветЗаявкаШапка = Макет.ПолучитьОбласть("ОтветЗаявкаШапка");
	ОтветЗаявкаТекст = Макет.ПолучитьОбласть("ОтветЗаявкаТекст");
	
	ЗапросРезультатШапка = Макет.ПолучитьОбласть("ЗапросРезультатШапка");
	ЗапросРезультатТекст = Макет.ПолучитьОбласть("ЗапросРезультатТекст");
	
	ОтветРезультатШапка = Макет.ПолучитьОбласть("ОтветРезультатШапка");
	ОтветРезультатТекст = Макет.ПолучитьОбласть("ОтветРезультатТекст");

	СистемнаяИнформация = Новый СистемнаяИнформация;
	
	ОбластьШапки.Параметры.ВерсияПлатформы     = СистемнаяИнформация.ВерсияПриложения;
	ОбластьШапки.Параметры.ВерсияКонфигурации  = Метаданные.Версия;
	ОбластьШапки.Параметры.ВидОперации         = ВидОперации;
	ОбластьШапки.Параметры.ИдентификаторЗаявки = ИдентификаторЗаявки;
	ОбластьШапки.Параметры.СтатусЗаявки        = СтатусЗаявки;
	ОбластьШапки.Параметры.КодСостоянияСервера = КодСостоянияСервера;
	ОбластьШапки.Параметры.ОписаниеОшибки      = ОшибкиВыполненияОбмена.ПолучитьТекст();
	
	ФайлОбращения.Вывести(ОбластьШапки);
	
	ФайлОбращения.Вывести(ЗапросЗаявкаШапка);
	
	ФайлОбращения.НачатьГруппуСтрок("ТекстЗапросаЗаявка", Ложь);
	ЗапросЗаявкаТекст.Параметры.ТекстЗапросаЗаявка    = ТекстЗапросаЗаявка.ПолучитьТекст();
	ФайлОбращения.Вывести(ЗапросЗаявкаТекст);
	ФайлОбращения.ЗакончитьГруппуСтрок();
	
	ФайлОбращения.Вывести(ОтветЗаявкаШапка);
	
	ФайлОбращения.НачатьГруппуСтрок("ОтветЗаявкаТекст", Ложь);
	ОтветЗаявкаТекст.Параметры.ТекстОтветаЗаявка    = ТекстОтветаЗаявка.ПолучитьТекст();
	ФайлОбращения.Вывести(ОтветЗаявкаТекст);
	ФайлОбращения.ЗакончитьГруппуСтрок();
	
	ФайлОбращения.Вывести(ЗапросРезультатШапка);
	
	ФайлОбращения.НачатьГруппуСтрок("ЗапросРезультатТекст", Ложь);
	ЗапросРезультатТекст.Параметры.ТекстЗапросаРезультат    = ТекстЗапросаРезультат.ПолучитьТекст();
	ФайлОбращения.Вывести(ЗапросРезультатТекст);
	ФайлОбращения.ЗакончитьГруппуСтрок();
	
	ФайлОбращения.Вывести(ОтветРезультатШапка);
	
	ФайлОбращения.НачатьГруппуСтрок("ОтветРезультатТекст", Ложь);
	ОтветРезультатТекст.Параметры.ТекстОтветаРезультат    = ТекстОтветаРезультат.ПолучитьТекст();
	ФайлОбращения.Вывести(ОтветРезультатТекст);
	ФайлОбращения.ЗакончитьГруппуСтрок();
	
	Возврат ФайлОбращения;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПолучитьДанныеСообщений()
	
	Если ЗначениеЗаполнено(Документ) Тогда
		ТипВладельцаФайлов  = ТипЗнч(Документ);
		МетаданныеВладельца = Метаданные.НайтиПоТипу(ТипВладельцаФайлов);
		ИмяСправочника      = МетаданныеВладельца.Имя + "ПрисоединенныеФайлы";
	Иначе
		ИмяСправочника      = "ПротоколОбменаВетисAPIПрисоединенныеФайлы";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПротоколОбмена.Ссылка КАК Сообщение,
		|	ПротоколОбмена.ВидОперации КАК ВидОперации,
		|	ПротоколОбмена.ИдентификаторЗаявки КАК ИдентификаторЗаявки,
		|	ПротоколОбмена.КодСостоянияСервера КАК КодСостоянияСервера,
		|	ПротоколОбмена.СтатусЗаявки КАК СтатусЗаявки,
		|	ПротоколОбмена.ОшибкиВыполненияОбмена КАК ОшибкиВыполненияОбмена,
		|	ПротоколОбмена.ЭтапВыполненияОбмена КАК ЭтапВыполненияОбмена
		|ИЗ
		|	Справочник." + ИмяСправочника + " КАК ПротоколОбмена
		|ГДЕ
		|	ПротоколОбмена.ИдентификаторЗапроса = &ИдентификаторЗапроса
		|	%ВладелецФайла%
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПротоколОбмена.ЭтапВыполненияОбмена";
	
	Если ЗначениеЗаполнено(Документ) Тогда
		ОтборПоВладельцу = "И ПротоколОбмена.ВладелецФайла = &ВладелецФайла";
		Запрос.УстановитьПараметр("ВладелецФайла", Документ);
	Иначе
		ОтборПоВладельцу = "";
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ВладелецФайла%", ОтборПоВладельцу);
	
	Запрос.УстановитьПараметр("ИдентификаторЗапроса", ИдентификаторЗапроса);
	
	РезультатЗапроса = Запрос.Выполнить();

	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ВидОперации            = Выборка.ВидОперации;
		ИдентификаторЗаявки    = Выборка.ИдентификаторЗаявки;
		СтатусЗаявки           = Выборка.СтатусЗаявки;
		КодСостоянияСервера    = Выборка.КодСостоянияСервера;
		ОшибкиВыполненияОбмена.УстановитьТекст(Выборка.ОшибкиВыполненияОбмена);
		
		ДвоичныеДанные = ПрисоединенныеФайлы.ПолучитьДвоичныеДанныеФайла(Выборка.Сообщение);
		ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяВременногоФайла);
		
		ТекстовыйДокумент = Новый ТекстовыйДокумент;
		ТекстовыйДокумент.Прочитать(ИмяВременногоФайла, КодировкаТекста.UTF8, "");
		ТекстСообщения = ТекстовыйДокумент.ПолучитьТекст();
		
		Попытка
			УдалитьФайлы(ИмяВременногоФайла);
		Исключение
			
		КонецПопытки;
		
		Если Выборка.ЭтапВыполненияОбмена = 1 Тогда
			ТекстЗапросаЗаявка.УстановитьТекст(ТекстСообщения);
		ИначеЕсли Выборка.ЭтапВыполненияОбмена = 2 Тогда
			ТекстОтветаЗаявка.УстановитьТекст(ТекстСообщения);
		ИначеЕсли Выборка.ЭтапВыполненияОбмена = 3 Тогда
			ТекстЗапросаРезультат.УстановитьТекст(ТекстСообщения);
		ИначеЕсли Выборка.ЭтапВыполненияОбмена = 4 Тогда
			ТекстОтветаРезультат.УстановитьТекст(ТекстСообщения);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти