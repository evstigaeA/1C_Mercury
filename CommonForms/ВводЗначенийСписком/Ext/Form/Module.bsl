#Область ОписаниеПеременных

&НаКлиенте
Перем ПеременныеКлиента;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.Список.ТолькоПросмотр = Параметры.ТолькоПросмотр;
	
	Если Параметры.Свойство("СписокТипов") Тогда
		Список.ТипЗначения = Параметры.СписокТипов;
	КонецЕсли;
	
	Если Параметры.Свойство("СписокЗначений") Тогда
		Если ТипЗнч(Параметры.СписокЗначений) = Тип("СписокЗначений") Тогда
			Список.ЗагрузитьЗначения(Параметры.СписокЗначений.ВыгрузитьЗначения());
		ИначеЕсли ТипЗнч(Параметры.СписокЗначений) = Тип("Массив") Тогда
			Список.ЗагрузитьЗначения(Параметры.СписокЗначений);
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Свойство("Сценарий") Тогда
		Сценарий = Параметры.Сценарий;
	КонецЕсли;
	
	Элементы.ФормаЗагрузкаДанныхИзФайла.Видимость = Сценарий <> "";
	
	Заголовок = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "Представление");
	Если ПустаяСтрока(Заголовок) Тогда
		Заголовок = Строка(Параметры.ОписаниеТипов);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПеременныеКлиента = Новый Структура;
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// СОБЫТИЯ ТАБЛИЦЫ УпаковкиСписок

#Область ОбработчикиСобытийЭлементовТаблицыФормыУпаковкиСписок

&НаКлиенте
Процедура СписокПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаИдентификатор = Элемент.ТекущаяСтрока;
	Если СтрокаИдентификатор = Неопределено Тогда
		Возврат;
	КонецЕсли;
	СписокЗначенийВФорме = ЭтотОбъект[Элемент.Имя];
	ЭлементСпискаВФорме = СписокЗначенийВФорме.НайтиПоИдентификатору(СтрокаИдентификатор);
	
	Значение = ЭлементСпискаВФорме.Значение;
	Если Значение = Неопределено
		Или Значение = Тип("Неопределено")
		Или Значение = Новый ОписаниеТипов("Неопределено")
		Или Не ЗначениеЗаполнено(Значение) Тогда
		Отказ = Истина; // Запрет пустых значений.
	Иначе
		Для Каждого ЭлементСпискаДубльВФорме Из СписокЗначенийВФорме Цикл
			Если ЭлементСпискаДубльВФорме.Значение = Значение И ЭлементСпискаДубльВФорме <> ЭлементСпискаВФорме Тогда
				Состояние(НСтр("ru = 'Обнаружены дублирующиеся записи. Редактирование отменено.'"));
				Отказ = Истина; // Запрет дублей.
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ЭлементСпискаДоНачалаИзменения = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПеременныеКлиента, "ЭлементСпискаДоНачалаИзменения");
	ЕстьИнформация = (ЭлементСпискаДоНачалаИзменения <> Неопределено И ЭлементСпискаДоНачалаИзменения.Идентификатор = СтрокаИдентификатор);
	Если Не Отказ И ЕстьИнформация И ЭлементСпискаДоНачалаИзменения.Значение <> Значение Тогда
		Если ОграничиватьВыборУказаннымиЗначениями Тогда
			Отказ = Истина;
		Иначе
			ЭлементСпискаВФорме.Представление = ""; // Автозаполнение представления.
		КонецЕсли;
	КонецЕсли;
	
	Если Отказ Тогда
		// Откат значений.
		Если ЕстьИнформация Тогда
			ЗаполнитьЗначенияСвойств(ЭлементСпискаВФорме, ЭлементСпискаДоНачалаИзменения);
		КонецЕсли;
		// Перезапуск события "ПередОкончаниемРедактирования" с ОтменаНачалаРедактирования = Истина.
		Элемент.ЗакончитьРедактированиеСтроки(Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Для Каждого ТекЭлемент Из ВыбранноеЗначение Цикл
		Если Список.НайтиПоЗначению(ТекЭлемент) = Неопределено Тогда
			Список.Добавить(ТекЭлемент);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// СОБЫТИЯ КНОПОК

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	Закрыть(Список.ВыгрузитьЗначения());
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	Закрыть(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузкаДанныхИзФайла(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Сценарий", Сценарий);
	ПараметрыФормы.Вставить("ПрограммноеОткрытие", Истина);
	Оповещение = Новый ОписаниеОповещения("ЗагрузкаДанныхИзФайлаОкончание", ЭтотОбъект);
	
	ОткрытьФорму("Обработка.ЗагрузкаДанныхИзВнешнихФайлов.Форма.Форма", ПараметрыФормы, ЭтотОбъект,,,, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузкаДанныхИзФайлаОкончание(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Результат) = Тип("Массив") Тогда
		
		Для Каждого ТекЭлемент Из Результат Цикл
			
			Если Список.НайтиПоЗначению(ТекЭлемент) = Неопределено Тогда
				
				Список.Добавить(ТекЭлемент);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
