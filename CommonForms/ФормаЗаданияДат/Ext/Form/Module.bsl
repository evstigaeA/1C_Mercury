#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ТолькоПросмотр      = Параметры.ТолькоПросмотр;
	ЗаданиеДатВыработки = Параметры.ЗаданиеДатВыработки;
	Если ЗаданиеДатВыработки Тогда
		Заголовок           = НСтр("ru = 'Дата выработки продукции'");
	КонецЕсли;

	Если Параметры.Свойство("ДанныеПоСрокам") Тогда
		
		ДанныеПоСрокам = Параметры.ДанныеПоСрокам;
		
		СкоропортящаясяПродукция = ДанныеПоСрокам.СкоропортящаясяПродукция;
		Продукция                = ДанныеПоСрокам.Продукция;
		
		Если ЗаданиеДатВыработки Тогда
			
			ФорматЗаданияДат = ДанныеПоСрокам.ФорматДатыВыработки;
			ДатаНачала       = ДанныеПоСрокам.ДатаВыработкиНачало;
			ДатаОкончания    = ДанныеПоСрокам.ДатаВыработкиОкончание;
			ДатаСтрокой      = ДанныеПоСрокам.ДатаВыработкиСтрокой;
			
		Иначе
			
			ФорматЗаданияДат = ДанныеПоСрокам.ФорматСрокаГодности;
			ДатаНачала       = ДанныеПоСрокам.ДатаОкончанияСрокаГодностиНачало;
			ДатаОкончания    = ДанныеПоСрокам.ДатаОкончанияСрокаГодностиОкончание;
			ДатаСтрокой      = ДанныеПоСрокам.ДатаСрокаГодностиСтрокой;
			
		КонецЕсли;
		
		Если Не ТолькоПросмотр Тогда
			
			СтруктураФорматовДат  = ИнтеграцияВетисAPIСлужебныйПовтИсп.ДопустимыеФорматыДат(Продукция, СкоропортящаясяПродукция);
			
			Если ЗаданиеДатВыработки Тогда
				ДопустимыеФорматыДат = СтруктураФорматовДат.ФорматыДатВыработки;
			Иначе
				ДопустимыеФорматыДат = СтруктураФорматовДат.ФорматыСроковГодности;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ИспользуетсяИнтервал = ИнтеграцияВетисAPIКлиентСервер.ИспользуетсяИнтервалДат(ФорматЗаданияДат, ДатаОкончания);
	
	УстановитьФорматыДат();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьЗначенияДатПоУмолчанию();
	УстановитьВидимостьЭлементов();
	
	МесяцНачалаСтрокой    = ИнтеграцияВетисAPIКлиент.ПолучитьПредставлениеМесяца(ДатаНачала);
	МесяцОкончанияСтрокой = ИнтеграцияВетисAPIКлиент.ПолучитьПредставлениеМесяца(ДатаОкончания);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если ФорматЗаданияДат = Перечисления.СпособыЗаданияДаты.Дата
		ИЛИ ФорматЗаданияДат = Перечисления.СпособыЗаданияДаты.Год Тогда
			ПроверяемыеРеквизиты.Добавить("ДатаНачала");
	КонецЕсли;
		
	Если ФорматЗаданияДат = Перечисления.СпособыЗаданияДаты.Месяц Тогда
		ПроверяемыеРеквизиты.Добавить("МесяцНачалаСтрокой");
	КонецЕсли;
	
	Если ФорматЗаданияДат = Перечисления.СпособыЗаданияДаты.Строка Тогда
		ПроверяемыеРеквизиты.Добавить("ДатаСтрокой");
	КонецЕсли;
	
	ТекстОшибки = "";
	Если Не ИнтеграцияВетисAPIСервер.ПроверитьКорректностьИнтервала(ФорматЗаданияДат, ДатаНачала, ДатаОкончания, ТекстОшибки) Тогда
		
		Если ФорматЗаданияДат = Перечисления.СпособыЗаданияДаты.Дата Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,"ДатаОкончания",,Отказ);
			
		ИначеЕсли ФорматЗаданияДат = Перечисления.СпособыЗаданияДаты.Месяц Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,"МесяцОкончанияСтрокой",,Отказ);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ФорматЗаданияДатНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора         = ДопустимыеФорматыДат;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользуетсяИнтервалПриИзменении(Элемент)
	
	Если Не ИспользуетсяИнтервал Тогда
		ДатаОкончания = Дата('00010101000000');
	КонецЕсли;
	
	УстановитьСвойстваЭлементовПоИспользованиюИнтервала();
	
КонецПроцедуры

&НаКлиенте
Процедура ФорматЗаданияДатПриИзменении(Элемент)
	
	УстановитьЗначенияДатПоУмолчанию();
	
	Если ФорматЗаданияДат = ПредопределенноеЗначение("Перечисление.СпособыЗаданияДаты.Дата") Тогда
		ДатаСтрокой          = "";
	ИначеЕсли ФорматЗаданияДат = ПредопределенноеЗначение("Перечисление.СпособыЗаданияДаты.Месяц") Тогда
		ДатаНачала           = НачалоМесяца(ДатаНачала);
		ДатаОкончания        = НачалоМесяца(ДатаОкончания);
		ДатаСтрокой          = "";
	ИначеЕсли ФорматЗаданияДат = ПредопределенноеЗначение("Перечисление.СпособыЗаданияДаты.Год") Тогда
		ИспользуетсяИнтервал = Ложь;
		ДатаНачала           = НачалоГода(ДатаНачала);
		ДатаОкончания        = Дата('00010101000000');
		ДатаСтрокой          = "";
	ИначеЕсли ФорматЗаданияДат = ПредопределенноеЗначение("Перечисление.СпособыЗаданияДаты.Строка") Тогда
		ИспользуетсяИнтервал = Ложь;
		ДатаНачала           = Дата('00010101000000');
		ДатаОкончания        = Дата('00010101000000');
	ИначеЕсли ФорматЗаданияДат = ПредопределенноеЗначение("Перечисление.СпособыЗаданияДаты.Неизвестно")
			ИЛИ ФорматЗаданияДат = ПредопределенноеЗначение("Перечисление.СпособыЗаданияДаты.НеОграничен")
			ИЛИ ФорматЗаданияДат = ПредопределенноеЗначение("Перечисление.СпособыЗаданияДаты.БезСрокаГодности") Тогда
		ИспользуетсяИнтервал = Ложь;
		ДатаНачала           = Дата('00010101000000');
		ДатаОкончания        = Дата('00010101000000');
		ДатаСтрокой          = "";
	КонецЕсли;
	
	УстановитьФорматыДат();
	УстановитьВидимостьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	
	Если ФорматЗаданияДат = ПредопределенноеЗначение("Перечисление.СпособыЗаданияДаты.Месяц") Тогда
		ДатаНачала = НачалоМесяца(ДатаНачала);
	ИначеЕсли ФорматЗаданияДат = ПредопределенноеЗначение("Перечисление.СпособыЗаданияДаты.Год") Тогда
		ДатаНачала = НачалоГода(ДатаНачала);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)
	
	Если ФорматЗаданияДат = ПредопределенноеЗначение("Перечисление.СпособыЗаданияДаты.Месяц") Тогда
		ДатаОкончания = НачалоМесяца(ДатаОкончания);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачалаСтрокойПриИзменении(Элемент)
	
	ИнтеграцияВетисAPIКлиент.ВводМесяцаПриИзменении(ЭтотОбъект, "ДатаНачала", "МесяцНачалаСтрокой", Модифицированность);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачалаСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ИнтеграцияВетисAPIКлиент.ВводМесяцаНачалоВыбора(ЭтотОбъект, Элемент, "ДатаНачала", "МесяцНачалаСтрокой", СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачалаСтрокойРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ИнтеграцияВетисAPIКлиент.ВводМесяцаРегулирование(ЭтотОбъект, "ДатаНачала", "МесяцНачалаСтрокой", Направление, Модифицированность);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачалаСтрокойАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ИнтеграцияВетисAPIКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачалаСтрокойОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ИнтеграцияВетисAPIКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцОкончанияСтрокойПриИзменении(Элемент)
	
	ИнтеграцияВетисAPIКлиент.ВводМесяцаПриИзменении(ЭтотОбъект, "ДатаОкончания", "МесяцОкончанияСтрокой", Модифицированность);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцОкончанияСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ИнтеграцияВетисAPIКлиент.ВводМесяцаНачалоВыбора(ЭтотОбъект, Элемент, "ДатаОкончания", "МесяцОкончанияСтрокой", СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцОкончанияСтрокойРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ИнтеграцияВетисAPIКлиент.ВводМесяцаРегулирование(ЭтотОбъект, "ДатаОкончания", "МесяцОкончанияСтрокой", Направление, Модифицированность);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцОкончанияСтрокойАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ИнтеграцияВетисAPIКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцОкончанияСтрокойОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ИнтеграцияВетисAPIКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаВыбрать(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗаданиеДатВыработки Тогда
		
		ДанныеПоСрокам.ФорматДатыВыработки      = ФорматЗаданияДат;
		ДанныеПоСрокам.ДатаВыработкиНачало      = ДатаНачала;
		ДанныеПоСрокам.ДатаВыработкиОкончание   = ДатаОкончания;
		ДанныеПоСрокам.ДатаВыработкиСтрокой     = ДатаСтрокой;
		
	Иначе
		
		ДанныеПоСрокам.ФорматСрокаГодности                 = ФорматЗаданияДат;
		ДанныеПоСрокам.ДатаОкончанияСрокаГодностиНачало    = ДатаНачала;
		ДанныеПоСрокам.ДатаОкончанияСрокаГодностиОкончание = ДатаОкончания;
		ДанныеПоСрокам.ДатаСрокаГодностиСтрокой            = ДатаСтрокой;
		
	КонецЕсли;
	
	Закрыть(ДанныеПоСрокам);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	
	Закрыть(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборПериода(Команда)
	
	Диалог = Новый ДиалогРедактированияСтандартногоПериода();
	Диалог.Период = Новый СтандартныйПериод(ДатаНачала, ДатаОкончания);
	ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("ВыполнитьПослеВыбораПериода",ЭтотОбъект);
	Диалог.Показать(ОписаниеОповещенияОЗакрытии);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПослеВыбораПериода(Результат, Параметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		ДатаНачала    = Результат.ДатаНачала;
		ДатаОкончания = Результат.ДатаОкончания;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьФорматыДат()
	
	СтрокаФормата = ИнтеграцияВетисAPIКлиентСервер.ФорматДат(ФорматЗаданияДат, СкоропортящаясяПродукция);
	
	Элементы.ДатаНачала.Формат                  = СтрокаФормата;
	Элементы.ДатаНачала.ФорматРедактирования    = СтрокаФормата;
	Элементы.ДатаОкончания.Формат               = СтрокаФормата;
	Элементы.ДатаОкончания.ФорматРедактирования = СтрокаФормата;
	Элементы.ДатаНачала.КнопкаВыбора            = ФорматЗаданияДат <> Перечисления.СпособыЗаданияДаты.Год;
	Элементы.ДатаНачала.КнопкаРегулирования     = ФорматЗаданияДат = Перечисления.СпособыЗаданияДаты.Год;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьЭлементов()
	
	Элементы.ИспользуетсяИнтервал.Видимость = ФорматЗаданияДат = ПредопределенноеЗначение("Перечисление.СпособыЗаданияДаты.Дата")
		ИЛИ ФорматЗаданияДат = ПредопределенноеЗначение("Перечисление.СпособыЗаданияДаты.Месяц");
	
	Элементы.СтраницаДата.Видимость   = ФорматЗаданияДат = ПредопределенноеЗначение("Перечисление.СпособыЗаданияДаты.Дата")
		ИЛИ ФорматЗаданияДат = ПредопределенноеЗначение("Перечисление.СпособыЗаданияДаты.Год");
		
	Элементы.СтраницаМесяц.Видимость  = ФорматЗаданияДат = ПредопределенноеЗначение("Перечисление.СпособыЗаданияДаты.Месяц");
	
	Элементы.СтраницаСтрока.Видимость = ФорматЗаданияДат = ПредопределенноеЗначение("Перечисление.СпособыЗаданияДаты.Строка");
	
	УстановитьСвойстваЭлементовПоИспользованиюИнтервала();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСвойстваЭлементовПоИспользованиюИнтервала()
	
	Элементы.ДатаОкончания.Видимость         = ИспользуетсяИнтервал;
	Элементы.ВыборПериода.Видимость          = ИспользуетсяИнтервал;
	Элементы.МесяцОкончанияСтрокой.Видимость = ИспользуетсяИнтервал;
	
	Если ИспользуетсяИнтервал Тогда
		Элементы.ДатаНачала.Заголовок = НСтр("ru = 'Период с'");
		Элементы.МесяцНачалаСтрокой.Заголовок = НСтр("ru = 'Период с'");
	Иначе
		Если ФорматЗаданияДат = ПредопределенноеЗначение("Перечисление.СпособыЗаданияДаты.Год") Тогда
			Элементы.ДатаНачала.Заголовок = НСтр("ru = 'Год'");
		Иначе
			Элементы.ДатаНачала.Заголовок = НСтр("ru = 'Дата'");
		КонецЕсли;
		Элементы.МесяцНачалаСтрокой.Заголовок = НСтр("ru = 'Месяц'");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗначенияДатПоУмолчанию()
	
	Если Не ЗначениеЗаполнено(ДатаНачала) Тогда
		
		Если ФорматЗаданияДат = ПредопределенноеЗначение("Перечисление.СпособыЗаданияДаты.Дата") Тогда
			ДатаНачала = ТекущаяДата();
		ИначеЕсли ФорматЗаданияДат = ПредопределенноеЗначение("Перечисление.СпособыЗаданияДаты.Месяц") Тогда
			ДатаНачала = НачалоМесяца(ТекущаяДата());
		ИначеЕсли ФорматЗаданияДат = ПредопределенноеЗначение("Перечисление.СпособыЗаданияДаты.Год") Тогда
			ДатаНачала = НачалоГода(ТекущаяДата());
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти