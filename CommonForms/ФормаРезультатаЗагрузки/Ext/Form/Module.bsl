#Область ОбработчикиСобытийФорм

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("ЗаголовокФормы") Тогда
		ЭтаФорма.АвтоЗаголовок = Ложь;
		ЭтаФорма.Заголовок = Параметры.ЗаголовокФормы;
	КонецЕсли;
	
	Если Параметры.Свойство("РезультатОперации") Тогда
		
		РезультатОперации = ПолучитьИзВременногоХранилища(Параметры.РезультатОперации);
		УдалитьИзВременногоХранилища(Параметры.РезультатОперации);
		
		ОшибкиВыполнения = РезультатОперации.ОшибкиВыполнения;
		
		ДанныеОбновления = РезультатОперации.РезультатОбновления;
		
		Если ТипЗнч(ДанныеОбновления) = Тип("ДеревоЗначений") Тогда
			
			Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаРезультатВВидеДерева;
			ЗначениеВРеквизитФормы(ДанныеОбновления, "ДеревоРезультата");
			
			Таблица = ВыгрузитьДеревоЗначенийВТаблицуЗначений(ДанныеОбновления);
			
			а = 1;
		ИначеЕсли ТипЗнч(ДанныеОбновления) = Тип("ТаблицаЗначений") Тогда
			
			Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаЛинейныйРезультат;
			ТаблицаДанных.Загрузить(ДанныеОбновления);
			
		КонецЕсли;
		
		СформироватьИнформационнуюСтроку(РезультатОперации.КоличествоПолученныхЭлементов, РезультатОперации.КоличествоЭлементовСОшибками);
		
	КонецЕсли;
	
КонецПроцедуры

Функция ВыгрузитьДеревоЗначенийВТаблицуЗначений(Дерево, Таблица = Неопределено) Экспорт

    Если Таблица = Неопределено Тогда
        Таблица = Новый ТаблицаЗначений;
        Для Каждого Колонка Из Дерево.Колонки Цикл
            Таблица.Колонки.Добавить(Колонка.Имя, Колонка.ТипЗначения);
        КонецЦикла;
    КонецЕсли;
	Для Каждого СтрокаДерева Из Дерево.Строки Цикл
		Если СтрокаДерева.Родитель = Неопределено Тогда
        	ЗаполнитьЗначенияСвойств(Таблица.Добавить(), СтрокаДерева);
        	ВыгрузитьДеревоЗначенийВТаблицуЗначений(СтрокаДерева, Таблица);
		КонецЕсли;
    КонецЦикла;
    Возврат Таблица;
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормы

&НаКлиенте
Процедура ТаблицаДанныхВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ТаблицаДанных.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Поле.Имя = "ТаблицаДанныхИнформация" Тогда
		
		Если ТекущиеДанные.Информация <> 0 Тогда
			Возврат;
		КонецЕсли;
	
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("РезультатОбработкиЗаявки", ТекущиеДанные.РезультатОбработкиЗаявки);
		
		ОткрытьФорму("Обработка.ИнформацияОбработкиЗапроса.Форма.Форма", ПараметрыФормы, Элемент);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДанныхПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийДеревоРезультата

&НаКлиенте
Процедура ДеревоРезультатаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ДеревоРезультата.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Поле.Имя = "ДеревоРезультатаИнформация" Тогда
		
		Если ТекущиеДанные.Информация <> 0 Тогда
			Возврат;
		КонецЕсли;
	
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("РезультатОбработкиЗаявки", ТекущиеДанные.РезультатОбработкиЗаявки);
		
		ОткрытьФорму("Обработка.ИнформацияОбработкиЗапроса.Форма.Форма", ПараметрыФормы, Элемент);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоРезультатаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СформироватьИнформационнуюСтроку(КоличествоЭлементов, НеУспешно)
	
	ИнформационнаяНадпись = НСтр("ru = 'Всего обработано [КоличествоЭлементов]. Успешно [Успешно]. С ошибками [НеУспешно].'");
	
	ВставляемыеЗначения = Новый Структура;
	ВставляемыеЗначения.Вставить("КоличествоЭлементов", КоличествоЭлементов);
	ВставляемыеЗначения.Вставить("Успешно"            , КоличествоЭлементов - НеУспешно);
	ВставляемыеЗначения.Вставить("НеУспешно"          , НеУспешно);
	
	ИнформационнаяНадпись = СтроковыеФункцииКлиентСервер.ВставитьПараметрыВСтроку(ИнформационнаяНадпись, ВставляемыеЗначения);
	
	ЭтаФорма.ИнформационнаяНадпись = ИнформационнаяНадпись;
КонецПроцедуры

#КонецОбласти